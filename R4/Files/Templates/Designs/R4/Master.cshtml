@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.PageViewModel>
@using System.Web


<!doctype html>
<html lang="@Pageview.Area.CultureInfo.TwoLetterISOLanguageName" class="h-100">

	<head>
		<!-- Required meta tags -->
		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="ie=edge" />
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<meta name="robots" content="noindex nofollow">
		<meta name="googlebot" content="noindex">
		<meta name="googlebot-news" content="nosnippet">

		<title>@Model.Title</title>

		<!-- R4 Styles -->
		<link href="~/Files/Templates/Designs/R4/Assets/css/r4.min.css" rel="stylesheet" type="text/css">
	</head>

	<body class="d-flex flex-column min-vh-100">
		<header class="page-header bg-white border-bottom position-sticky top-0 shadow" id="page-header" style="z-index: 10">
			<div class="d-none d-lg-block">
				@if (@Model.Area.Item.GetString("HeaderDesktop") != null)
				{
					@RenderGrid(@Model.Area.Item.GetInt32("HeaderDesktop"))
				}
			</div>
			<div class="d-block d-lg-none">
				@if (@Model.Area.Item.GetString("HeaderMobile") != null)
				{
					@RenderGrid(@Model.Area.Item.GetInt32("HeaderMobile"))
				}
			</div>
		</header>

		<main id="page-content" class="overflow-hidden">
			<div id="content">
				@ContentPlaceholder()
			</div>
		</main>

		<footer class="page-footer mt-auto bg-light py-5" id="page-footer">
			<div class="d-none d-lg-block">
				@if (@Model.Area.Item.GetString("FooterDesktop") != null)
				{
					@RenderGrid(@Model.Area.Item.GetInt32("FooterDesktop"))
				}
			</div>
			<div class="d-block d-lg-none">
				@if (@Model.Area.Item.GetString("FooterMobile") != null)
				{
					@RenderGrid(@Model.Area.Item.GetInt32("FooterMobile"))
				}
			</div>
		</footer>
		
		<!-- R4 Scripts -->
		<script src="~/Files/Templates/Designs/R4/Assets/js/r4.js" type="text/javascript"></script>

		<script>
            var tabIndex = -1;
            var tabIndexOld = 0;
            function suggest(e, searchField) {
                if (e.key === "ArrowUp" || e.key === "ArrowDown") {
                    //handle dropdown navigation if present
                    document.querySelectorAll(".js-type-ahead-menu").forEach(function (menu) {
                        if (menu.classList.contains("show")) {
                            debounce(() => handleArrowNavigation(e.key, menu), 100)();
                            return;
                        }
                    });

                    console.log(tabIndex);
                } else {
                    tabIndex = -1;
                    if (searchField.value.length > 0) {
                        var val = searchField.value;

                        document.querySelectorAll(".js-type-ahead-field").forEach(function(field) {
                            field.setAttribute("data-original", val)
                        });
            
                        debounce(() => getSuggestions(searchField), 100)();
                    } else {
                        hidedd();
                    }
		        }

                if (e.key === "Escape") {
                    //Revert back to the original value last entered in the input field
                    const highlightedItems = userList.querySelectorAll(".highlighted");

                    document.querySelectorAll(".js-type-ahead-field").forEach(function(field) {
                        field.value = field.getAttribute("data-original");
                    });

                    hidedd();
                    return;
                }

                if (e.key === "Tab") {
                    return;
                }

        
            }

            function handleTab(e) {
                if (e.key === "Tab") {
                    //keep selection from dropdown navigation but do not submit search
                    e.preventDefault();
                    hidedd();
                    return;
                }
            }

            function handleArrowNavigation(key, menu) {
                var elements = menu.getElementsByClassName("dropdown-item");
                if (!elements || elements.length < 1) {
                    return;
                }
                if (key === "ArrowUp") {
                    tabIndex--;
                } else {
                    tabIndex++;
                }

                if (tabIndex < 0 || tabIndex > elements.length - 1) {
                    tabIndex = 0;
                }

                menu.setAttribute("data-tabindex", tabIndex);
                if (tabIndex > -1) {
                    elements[tabIndex].classList.add("focus");
                    var suggestionElement = elements[tabIndex];

                    preSelectSuggestion(suggestionElement);

                    if (tabIndexOld != tabIndex && elements[tabIndexOld]) {
                        elements[tabIndexOld].classList.remove("focus");
                    }
                    tabIndexOld = tabIndex;
                }
            }

            async function getSuggestions(searchField) {
                var resultsPageId = searchField.closest(".js-suggest-form").getAttribute("data-search-results-page");
                var searchUrl = "/Default.aspx?ID=" + resultsPageId + "&feed=true&redirect=false&eq=" + encodeURIComponent(searchField.value.toLowerCase());
                let response = await fetch(searchUrl);

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                    alert(response.status + '\n' + responseText);
                } else {
                    let html = await response.text().then(function (text) {
                        return text;
                    });

                    displaySuggestions(html);
                }
            }

            function displaySuggestions(data) {
                if (data.length > 5) {
                    document.querySelectorAll(".js-type-ahead-menu").forEach(function(menu) {
                        menu.innerHTML = data;
                    });
                    showdd();
                }
            }

            function selectSuggestion_(inputValue) {
                document.querySelectorAll(".js-type-ahead-field").forEach(function (field) {
                    field.value = inputValue;

                    if (field.value != "") {
                        elm.closest(".js-type-ahead-dropdown").querySelector(".js-suggest-form").submit();
			        }
                });
            }

            function preSelectSuggestion(elm) {
                var suggestionElement = elm.getElementsByClassName("js-suggestion")[0];

                document.querySelectorAll(".js-type-ahead-field").forEach(function (field) {
                    field.value = suggestionElement.innerText;

                    var formElm = field.closest(".js-suggest-form");
                    var parm = formElm.querySelector(".js-type-ahead-parameter");
                    if (elm.getAttribute("data-param") && elm.getAttribute("data-paramvalue")) {
                        parm.setAttribute("name", elm.getAttribute("data-param"));
                        parm.setAttribute("value", elm.getAttribute("data-paramvalue"));

                        if (elm.getAttribute("data-param").includes("ProductId")) {
                            var productDetailPage = formElm.getAttribute("data-product-details-page");
                            formElm.setAttribute("action", productDetailPage);
                        } else {
                            var productListPage = formElm.getAttribute("data-product-list-page");
                            formElm.setAttribute("action", productListPage);
			            }
                    } else {
                        parm.removeAttribute("name");
                        parm.removeAttribute("value");

                    }
                });
            }

            function selectSuggestion(elm) {
                preSelectSuggestion(elm);

                elm.closest(".js-type-ahead-dropdown").querySelector(".js-suggest-form").submit();
            }

            function showdd() {
                document.querySelectorAll(".js-type-ahead-menu").forEach(function (dropdown) {
                    if (dropdown.innerHTML != "") {
                        dropdown.classList.add("show");
			        }    
                });
                document.querySelectorAll(".js-type-ahead-dropdown").forEach(function (dropdown) {
                    dropdown.classList.add("show");
                });
            }
            function hidedd() {
                document.querySelectorAll(".js-type-ahead-dropdown").forEach(function (dropdown) {
                    dropdown.classList.remove("show");
                });
                document.querySelectorAll(".js-type-ahead-menu").forEach(function (dropdown) {
                    dropdown.classList.remove("show");
                });
            }

            var timeout;
            function debounce(func, wait, immediate) {
                return function () {
                    var context = this, args = arguments;
                    var later = function () {
                        timeout = null;
                        if (!immediate) func.apply(context, args);
                    };
                    var callNow = immediate && !timeout;
                    clearTimeout(timeout);
                    timeout = setTimeout(later, wait);
                    if (callNow) func.apply(context, args);
                };
            };

	        document.body.addEventListener('click', hidedd);
            document.querySelectorAll(".js-type-ahead-field").forEach(function (field) {
                field.addEventListener('focus', showdd);
	            field.addEventListener('keyup', (e) => suggest(e, field))
                field.addEventListener('keydown', (e) => handleTab(e));
            });

	        function goToPage(aTag) {
		        var pageTitle = aTag.getAttribute("title");
		        navigateToPage(aTag.href);
		        history.pushState(null, pageTitle, aTag.href);
		        if (pageTitle != null) {
			        document.title = pageTitle;
		        }
		        return false;
	        }

	        async function navigateToPage(href) {
		        var fetchHref = href;
		        if (href.indexOf("?") > 0) {
			        fetchHref += "&feed=true"
		        } else {
			        fetchHref += "?feed=true"
		        }
		        let response = await fetch(fetchHref);

		        if (!response.ok) {
			        throw new Error('HTTP error! status: ${response.status}');
		        } else {
			        let html = await response.text().then(function (text) {
				        return text;
			        });

                    document.querySelectorAll(".js-async-placeholder").forEach(function(placeholder) {
                        placeholder.outerHTML = html;
                    });
		        }
		        window.scrollTo(0, 0);
	        }

	        window.onpopstate = function (event) {
		        alert("location: " + document.location.href + ", title: " + document.title + ", state: " + JSON.stringify(event.state));
		        navigateToPage(document.location.href);
		        //document.title = event.state.prevTitle;
	        }
        </script>
	</body>

</html>
