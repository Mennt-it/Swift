@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.PageViewModel>
@using System
@using Dynamicweb
@using Dynamicweb.Environment

@Include("Partials/R4_MetaTags.cshtml")

@{ 
	/* Branding Themes Fonts */
	var brandingPageId = Model.Area.Item.GetInt32("BrandingPage");
	var themePageId = Model.Area.Item.GetInt32("ThemesPage");

	var brandingPage = Dynamicweb.Services.Pages?.GetPage(brandingPageId) ?? null;
	//var themesPagee = Dynamicweb.Services.Pages?.GetPage(themePageId) ?? null;
	var themesParagraphLastChanged = Services.Paragraphs.GetParagraphsByPageId(themePageId).OrderByDescending(p => p.Audit.LastModifiedAt).FirstOrDefault();

	/* Theme setting for the body */
	string masterTheme = Model.Area.Item.GetRawValueString("Theme").ToLower();
	if (masterTheme != "theme default" && masterTheme != "")
	{
		masterTheme = String.Concat(masterTheme.Where(c => !Char.IsWhiteSpace(c)));
		masterTheme = masterTheme.Replace("theme", "");
		masterTheme = " theme theme-" + masterTheme;
	}
	else
	{
		masterTheme = "";
	}

	/* Sticky/Fixed header */
	string headerCssClass = Pageview.Item["MoveThisPageBehindTheHeader"] != null ? Pageview.Item["MoveThisPageBehindTheHeader"].ToString() : "sticky-top";
	headerCssClass = headerCssClass == "" ? "sticky-top" : headerCssClass;
}

<!doctype html>
<html lang="@Pageview.Area.CultureInfo.TwoLetterISOLanguageName" class="h-100">
<head>
	@* Required meta tags *@
	<meta charset="utf-8">
	<meta name="viewport" content="height=device-height, width=device-width, initial-scale=1.0">
	<link rel="preconnect" href="https://fonts.gstatic.com" />
	<link rel="preconnect" href="https://fonts.googleapis.com" />
	<link rel="preload" href="~/Files/Templates/Designs/R4/Assets/css/styles.css" as="style">
	<link rel="preload" href="~/Files/Templates/Designs/R4/Assets/js/scripts.js" as="script">

	<link rel="shortcut icon" href="~/Files/Templates/Designs/R4/Assets/Images/favicon.png" />
	<link rel="apple-touch-icon" href="~/Files/Templates/Designs/R4/Assets/Images/logo_transparent.png" />
	<meta http-equiv="X-UA-Compatible" content="ie=edge" />
	<meta name="googlebot-news" content="nosnippet">

	@Model.MetaTags

	<title>@Model.Title</title>


	@* Bootstrap + R4 stylesheet *@
	<link href="~/Files/Templates/Designs/R4/Assets/css/styles.css" rel="stylesheet" media="all" type="text/css">

	@* Branding stylesheet *@
	<link href="~/Files/Templates/Designs/R4/_parsed/R4_css/R4_branding_styles_@(Model.Area.ID).css?@brandingPage.Audit.LastModifiedAt.Ticks" rel="stylesheet" media="all" type="text/css" data-last-modified="@brandingPage.Audit.LastModifiedAt">

	@* Themes stylesheet *@
	<link href="~/Files/Templates/Designs/R4/_parsed/R4_css/R4_theme_styles_@(Model.Area.ID).css?@themesParagraphLastChanged.Audit.LastModifiedAt.Ticks" rel="stylesheet" media="all" type="text/css" data-last-modified-content="@themesParagraphLastChanged.Audit.LastModifiedAt">
	<script src="~/Files/Templates/Designs/R4/Assets/js/scripts.js" defer></script>
</head>
<body class="d-flex flex-column min-vh-100 brand@(masterTheme)" style="overflow-x: hidden;" id="page@(Model.ID)">
	<header class="page-header @headerCssClass top-0 d-none d-lg-block" id="page-header-dekstop" style="z-index: 10" role="banner">
		@if (@Model.Area.Item.GetString("HeaderDesktop") != null)
		{
			@RenderGrid(@Model.Area.Item.GetInt32("HeaderDesktop"))
		}
	</header>

	<header class="page-header @headerCssClass top-0 d-block d-lg-none" id="page-header-mobile" style="z-index: 10" role="banner">
		@if (@Model.Area.Item.GetString("HeaderMobile") != null)
		{
@RenderGrid(@Model.Area.Item.GetInt32("HeaderMobile"))}
	</header>

	<main id="content" class="overflow-hidden" role="main">
		@ContentPlaceholder()
	</main>

	<footer class="page-footer d-none d-lg-block mt-auto" id="page-footer-desktop" role="contentinfo">
		@if (@Model.Area.Item.GetString("FooterDesktop") != null)
		{
@RenderGrid(@Model.Area.Item.GetInt32("FooterDesktop"))}
	</footer>

	<footer class="page-footer d-block d-lg-none mt-auto" id="page-footer-mobile" role="contentinfo">
		@if (@Model.Area.Item.GetString("FooterMobile") != null)
		{
@RenderGrid(@Model.Area.Item.GetInt32("FooterMobile"))}
	</footer>

		@* Render any offcanvas menu here *@
		@RenderSnippet("offcanvas")

</body>
</html>
