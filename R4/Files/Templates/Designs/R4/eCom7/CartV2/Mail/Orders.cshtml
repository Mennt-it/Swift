@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using Dynamicweb
@using System.IO

@{ 
	string lang = Pageview.Area.CultureInfo.TwoLetterISOLanguageName;
}


<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional //EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!--[if IE]>
	<html xmlns="http://www.w3.org/1999/xhtml" class="ie" lang="@lang">
<![endif]-->
<!--[if !IE]><!-->
<html style="margin: 0;padding: 0;" xmlns="http://www.w3.org/1999/xhtml" lang="@lang">
<!--<![endif]-->
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	<title></title>
	<!--[if !mso]><!-->
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<!--<![endif]-->
	<meta name="viewport" content="width=device-width">
	<meta name="x-apple-disable-message-reformatting">
	<meta name="robots" content="noindex,nofollow">
	<meta property="og:title" content="">
</head>
<!--[if mso]>
	<body class="mso">
<![endif]-->
<!--[if !mso]><!-->

<body>
	<!--<![endif]-->
	<table style="border-collapse: collapse;table-layout: fixed;min-width: 320px;width: 100%;" cellpadding="0" cellspacing="0" role="presentation">
		<tbody>
			<tr>
				<td>
					<span>LOGO HERE</span>
				</td>
			</tr>
			<tr>
				<td>
					<div class="flex-fill">
						<h1 class="fs-1 fs-md-3 m-0">@Translate("Thank you for your order")</h1>
					</div>
					<div>
						<p class="d-block mb-0">@Translate("We are processing your order now, here are the details")</p>
					</div>
				</td>
			</tr>
			<tr>
				@if (!string.IsNullOrEmpty(GetString("Ecom:Order.ID")))
				{
					<th>@Translate("Order number")</th>
					<td>@GetString("Ecom:Order.ID")</td>
				}
			</tr>
			<tr>
				@if (!string.IsNullOrEmpty(GetString("Ecom:Order.Completed")))
				{
					<th>@Translate("Order date")</th>
					<td>@GetString("Ecom:Order.Completed")</td>
				}
			</tr>

			<tr>
				<th>@Translate("Contact")</th>
				<td>
					@if (!string.IsNullOrEmpty(@GetString("Ecom:Order.Delivery.Email")))
					{
						<span>@GetString("Ecom:Order.Delivery.Email"), </span>
					}
					@if (!string.IsNullOrEmpty(@GetString("Ecom:Order.Delivery.Phone")))
					{
						<span>@GetString("Ecom:Order.Delivery.Phone")</span>
					}
				</td>
			</tr>

			<tr>
				<th>@Translate("Delivery address")</th>
				<td>
					@if (!string.IsNullOrEmpty(GetString("Ecom:Order.Delivery.Name")))
					{
						<span>@GetString("Ecom:Order.Delivery.Name"),</span>
					}
					@if (!string.IsNullOrEmpty(GetString("Ecom:Order.Delivery.Address")))
					{
						<span>@GetString("Ecom:Order.Delivery.Address"), </span>
					}
					@if (!string.IsNullOrEmpty(GetString("Ecom:Order.Delivery.Zip")))
					{
						<span>@GetString("Ecom:Order.Delivery.Zip")</span>
					}
					@if (!string.IsNullOrEmpty(GetString("Ecom:Order.Delivery.City")))
					{
						<span>@GetString("Ecom:Order.Delivery.City")</span>
					}
				</td>
			</tr>
			<tr>
				<th>@Translate("Billing address")</th>
				<td>
					@if (!string.IsNullOrEmpty(GetString("Ecom:Order.Customer.Name")))
					{
						<span>@GetString("Ecom:Order.Customer.Name"),</span>
					}
					@if (!string.IsNullOrEmpty(GetString("Ecom:Order.Customer.Address")))
					{
						<span>@GetString("Ecom:Order.Customer.Address"),</span>
					}
					@if (!string.IsNullOrEmpty(GetString("Ecom:Order.Customer.Zip")))
					{
						<span>@GetString("Ecom:Order.Customer.Zip")</span>
					}
					@if (!string.IsNullOrEmpty(GetString("Ecom:Order.Customer.City")))
					{
						<span>@GetString("Ecom:Order.Customer.City")</span>
					}
				</td>
			</tr>
			<tr>
				@if (!string.IsNullOrEmpty(GetString("Ecom:Order.ShippingMethod")))
				{
					<th>@Translate("Delivery method")</th>
					<td>@GetString("Ecom:Order.ShippingMethod")</td>
				}
			</tr>
			<tr>
				@if (!string.IsNullOrEmpty(GetString("Ecom:Order.PaymentMethod")))
				{
					<th>@Translate("Payment method")</th>
					<td>@GetString("Ecom:Order.PaymentMethod")</td>
				}
			</tr>
		</tbody>
	</table>

	<table>
		<tbody>
			<tr>
				@foreach (LoopItem orderline in GetLoop("OrderLines"))
				{
					string name = orderline.GetString("Ecom:Order:OrderLine.ProductName");
					string image = "/Admin/Public/GetImage.ashx?width=" + 120 + "&height=" + 120 + "&crop=5&fillcanvas=true&Background=ffffff&image=" + orderline.GetString("Ecom:Product.PrimaryImage") + "&Format=WebP&Quality=100";
					string removeFromBasketLink = orderline.GetString("Ecom:Order:OrderLine.DeleteLink");
					string priceTotalWithDiscounts = orderline.GetString("Ecom:Order:OrderLine.TotalPriceWithProductDiscounts.PriceFormatted");
					string priceBefore = orderline.GetString("Ecom:Product.InformativePrice.PriceFormatted");
					string unitPrice = orderline.GetString("Ecom:Order:OrderLine.UnitPrice.PriceFormatted");
					string discountPrice = orderline.GetString("Ecom:Product.Discount.Price.PriceFormatted");
					string discountTotal = orderline.GetString("Ecom:Order:OrderLine.TotalDiscount.PriceFormatted");
					string variantText = orderline.GetString("Ecom:Order:OrderLine.ProductVariantText");
					var orderlineId = orderline.GetValue("Ecom:Order:OrderLine.Id");
					var quantity = orderline.GetDouble("Ecom:Order:OrderLine.Quantity");
					string primaryGroupId = orderline.GetString("Ecom:Order:OrderLine.PrimaryOrDefaultGroupId");
					string productId = orderline.GetString("Ecom:Order:OrderLine.ProductID");
					string variantId = orderline.GetString("Ecom:Order:OrderLine.ProductVariantID");

					string link = "#";
					string productDetailPageId = Pageview.CurrentParagraph.Item["ProductPageLink"] != null ? Pageview.CurrentParagraph.Item["ProductPageLink"].ToString() : "";
					productDetailPageId = productDetailPageId != "" ? productDetailPageId : GetPageIdByNavigationTag("ProductDetailPage").ToString();
					link = "/Default.aspx?ID=" + productDetailPageId + "&amp;ProductID" + productId;

					if (!string.IsNullOrEmpty(variantId))
					{
						link += "&VariantID=" + variantId;
					}

					bool isProduct = orderline.GetBoolean("Ecom:Order:OrderLine.IsProduct");

					if (isProduct)
					{
						<td>
							@* Image *@
							<a href="@link" title="@name">
								<img src="@image" style="object-fit: contain;" alt="@name">
							</a>
						</td>

						<td>
							@* Title *@
							<h3>
								<a href="@link" title="@name">@name</a>
							</h3>
						</td>
						<td>
							<table>
								<tr>
									<td>
										@* Variants *@
										@if (!string.IsNullOrEmpty(variantText))
										{
											<p>@variantText</p>
										}
									</td>
									<td>
										@* Unit price *@
										<p>
											@if (discountPrice == unitPrice)
											{
												<span>@unitPrice</span>
											}
											else
											{
												<span>@discountPrice</span>
												<span>@unitPrice</span>
											}
										</p>
									</td>
									<td>
										@* Quantity *@
										<span>@Translate("Quantity"): @quantity</span>
									</td>
								</tr>
							</table>
						</td>
						<td>
							<table>
								<tr>
									<td>
										@* Total *@
										<span>@priceTotalWithDiscounts</span>
										@if (orderline.GetDouble("Ecom:Order:OrderLine.TotalDiscount.Price.Value") != 0)
										{
											<span>@discountTotal</span>
										}
									</td>
								</tr>
							</table>
						</td>
					}
					else
					{
						<td>
							<table>
								<tr>
									<td>
										@* Title *@
										<h3>
											<a href="@link" title="@name">@name</a>
										</h3>
									</td>
									<td>
										<span>@priceTotalWithDiscounts</span>
									</td>
									<td>
										@if (orderline.GetDouble("Ecom:Order:OrderLine.TotalDiscount.Price.Value") != 0)
										{
											<span>@discountTotal</span>
										}
									</td>
								</tr>
							</table>
						</td>
					}
				}
			</tr>
		</tbody>
	</table>
	<table>
		<tbody>
			<tr>
				@{ 
					string totalPriceWithoutDiscountsFeesAndTaxes = GetString("Ecom:Order.TotalPriceWithoutDiscountsFeesAndTaxes.PriceFormatted");
					string totalPriceWithoutOrderDiscountsAndFees = GetString("Ecom:Order.TotalPriceWithoutOrderDiscountsAndFees.PriceFormatted"); 
				}

				@* Subtotal *@
				<th>@Translate("Subtotal")</th>
				<td>
					@if (totalPriceWithoutDiscountsFeesAndTaxes != totalPriceWithoutOrderDiscountsAndFees)
					{
						<span>@totalPriceWithoutDiscountsFeesAndTaxes</span>
					}
					<span>@totalPriceWithoutOrderDiscountsAndFees</span>
				</td>
			</tr>
			<tr>
				@* Discounts (only order discounts) *@
				@foreach (LoopItem orderline in GetLoop("OrderLines"))
				{
					bool isDiscount = orderline.GetBoolean("Ecom:Order:OrderLine.IsDiscount");
					bool isOrderDiscount = orderline.GetInteger("Ecom:Order:OrderLine.Type") == 1;
					if (isDiscount && isOrderDiscount)
					{
						<th>@orderline.GetString("Ecom:Order:OrderLine.ProductName")</th>
						<td>@orderline.GetString("Ecom:Order:OrderLine.TotalPriceWithProductDiscounts.PriceFormatted")</td>
					}
				}
			</tr>
			<tr>
				@* Shipping *@
				@if (!string.IsNullOrEmpty(GetString("Ecom:Order.ShippingMethodID")))
				{
					if (GetDouble("Ecom:Order.ShippingFee.Price.Value") != 0)
					{
						<th>@Translate("Delivery")</th>
						<td>@GetString("Ecom:Order.ShippingFee.PriceFormatted")</td>
					}
				}
				else
				{
					<th>@Translate("Delivery")</th>
					<td>@Translate("Calculated in next step")</td>
				}
			</tr>
			<tr>
				@* Payment *@
				@if (!string.IsNullOrEmpty(GetString("Ecom:Order.PaymentMethodID")))
				{
					if (GetDouble("Ecom:Order.PaymentFee.Price.Value") != 0)
					{
						<th>@Translate("Payment")</th>
						<td>@GetString("Ecom:Order.PaymentFee.PriceFormatted")</td>
					}
				}
				else
				{
					<th>@Translate("Payment")</th>
					<td>@Translate("Calculated in next step")</td>
				}
			</tr>
			<tr>
				<th>@Translate("Total")</th>
				<td>@GetString("Ecom:Order.Price.PriceFormatted")</td>
			</tr>

			<tr>
				<th>@Translate("VAT")</th>
				<td>@GetString("Ecom:Order.Price.VATFormatted")</td>
			</tr>
			@if (GetDouble("Ecom:Order.TotalDiscount.Price.Value") != 0)
			{
				<tr>
					<th>@Translate("Discount")</th>
					<td>@GetString("Ecom:Order.TotalDiscount.PriceFormatted")</td>
				</tr>
			}
		</tbody>
	</table>
</body>

</html>
