@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using Dynamicweb
@using Dynamicweb.Frontend
@using Dynamicweb.Extensibility
@using Dynamicweb.Content
@using Dynamicweb.Core
@using Dynamicweb.Ecommerce.Orders
@using Dynamicweb.Ecommerce.Orders.SalesDiscounts
@using System
@using System.Web
@using System.IO

@{
	string pageId = GetGlobalValue("Global:Page.ID");
	string checkoutPageId = Pageview.Item["CheckoutPageLink"] != null ? Pageview.Item["CheckoutPageLink"].ToString() : "";
}

<div class="row">
	<header class="col-12">
		@RenderCartPageHeader()
	</header>
	<section class="col-12 col-lg-8 pe-lg-5">
		<form name="ordersubmit" id="ordersubmit" method="post" autocomplete="off">
			@RenderCartHeader()
			@RenderCartOrderLines()
			<div class="d-none d-lg-block">
				@RenderCartNavigation("/Files/Icons/", checkoutPageId)
			</div>
			@RenderCartErrorMessages()
		</form>

		@TemplateTags()
	</section>

	<aside class="col-12 col-lg-4 position-relative ps-0 pe-0 ps-lg-0 pe-lg-3">
		<div class="p-3 p-lg-5 bg-light">
			<header>
				<h4 class="fs-6 fw-normal text-muted pb-2 border-bottom">@Translate("Order summary")</h4>
			</header>
			@RenderOrderSummary(checkoutPageId)
			<div class="d-block d-lg-none">
				@RenderCartNavigation("/Files/Icons/", checkoutPageId)
			</div>
		</div>
	</aside>
</div>

@helper RenderCartOrderLines() {
	foreach (LoopItem orderline in GetLoop("OrderLines")) {
		@RenderCartOrderLineItem(orderline)
	}
}

@helper RenderCartNavigation(string iconPath, string checkoutPageId) {

	string checkoutLink = "#";
	checkoutLink = "Default.aspx?ID=" + checkoutPageId;

	<div class="align-items-center d-grid d-lg-flex gap-2 text-uppercase justify-content-lg-end my-3 mt-lg-4 mb-lg-0">
	
		<a href="Default.aspx?ID=@GetPageIdByNavigationTag("Shop")" class="btn btn-link link-secondary text-decoration-none me-lg-3 order-last order-lg-first">
			<div class="d-flex align-items-center justify-content-center position-relative">
				@if (File.Exists(HttpContext.Current.Server.MapPath(iconPath+"chevron-left.svg"))) {
					<span class="icon-2 me-1 position-absolute position-lg-static start-0">
						@System.IO.File.ReadAllText(HttpContext.Current.Server.MapPath(iconPath+"chevron-left.svg"))
					</span>
				}
				<span>@Translate("Continue shopping")</span>
			</div>
		</a>

		<a href="@checkoutLink" class="btn btn-primary btn-lg">
			<div class="d-flex align-items-center justify-content-center position-relative">
				<span>@Translate("Checkout")</span>
				@if (File.Exists(HttpContext.Current.Server.MapPath(iconPath+"chevron-right.svg"))) {
					<span class="icon-2 ms-1 position-absolute position-lg-static end-0">
						@System.IO.File.ReadAllText(HttpContext.Current.Server.MapPath(iconPath+"chevron-right.svg"))
					</span>
				}
			</div>
		</a>

	</div>
}

@helper RenderOrderSummary(string checkoutPageId) {
	<div class="fs-7 mb-3">
		<div class="d-flex justify-content-between mb-2 fw-bold"><span>@Translate("Subtotal")</span><span class="text-price">@GetString("Ecom:Order.PriceWithoutDiscounts.PriceFormatted")</span></div>

		@* Discounts *@
		@foreach (LoopItem orderline in GetLoop("OrderLines")) {
			bool isDiscount = orderline.GetBoolean("Ecom:Order:OrderLine.IsDiscount");
			if(isDiscount) {
				<div class="d-flex justify-content-between mb-2"><span>@orderline.GetString("Ecom:Order:OrderLine.ProductName")</span><span>@orderline.GetString("Ecom:Order:OrderLine.TotalPriceWithProductDiscounts.PriceFormatted")</span></div>
			}
		}
		@* Shipping *@
		<div class="d-flex justify-content-between mb-2"><span>@Translate("Shipping")</span><span>@Translate("Calculated at checkout")</span></div>

		@* Payment *@
		<div class="d-flex justify-content-between mb-2"><span>@Translate("Payment")</span><span>@Translate("Calculated at checkout")</span></div>
	</div>
	<div class="fs-7 pt-3 border-top">
		<div class="d-flex justify-content-between mb-2 fs-6 fw-bold"><span>@Translate("Total")</span><span class="text-price">@GetString("Ecom:Order.Price.PriceFormatted")</span></div>
		<div class="d-flex justify-content-between mb-2"><span>@Translate("VAT")</span><span class="text-price">@GetString("Ecom:Order.Price.VATFormatted")</span></div>
		@if(GetDouble("Ecom:Order.TotalDiscount.Price.Value") != 0)
		{
			<div class="d-flex justify-content-between"><span>@Translate("Discount")</span><span class="text-price">@GetString("Ecom:Order.TotalDiscount.PriceFormatted")</span></div>
		}
	</div>
}

@Include("Helpers/CartHeader.cshtml")
@Include("Helpers/CartPageHeader.cshtml")
@Include("Helpers/CartErrors.cshtml")
@Include("Helpers/CartOrderLineItem.cshtml")
