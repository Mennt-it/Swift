@helper RenderAddressUser() {

	string userAddressesPage = Pageview.CurrentParagraph.Item["UserAddressesPageLink"] != null ? Pageview.CurrentParagraph.Item["UserAddressesPageLink"].ToString() + "&GoBackToPage=" + Pageview.Page.ID : "";
	string userId = GetString("UserManagement:User.ID");
	var userAddressLoop = GetLoop("UserManagement:User.UserAddresses");

	List<string> address = new List<string>();
	if (!string.IsNullOrEmpty(GetString("Ecom:Order.Delivery.Address"))) {
		address.Add(GetString("Ecom:Order.Delivery.Address"));
	}
	if (!string.IsNullOrEmpty(GetString("Ecom:Order.Delivery.Zip"))) {
		address.Add(GetString("Ecom:Order.Delivery.Zip"));
	}
	if (!string.IsNullOrEmpty(GetString("Ecom:Order.Delivery.City"))) {
		address.Add(GetString("Ecom:Order.Delivery.City"));
	}
	string deliveryAddressString = (string.Join(",", address.Select(x => x.ToString()).ToArray()));

	<div class="mt-4">		
		<div class="row">
			<div class="col">
				<h3 class="fs-6 fw-normal mb-3">@Translate("Select delivery address")</h3>
			</div>
			@if (userAddressLoop.Count > 0 || !string.IsNullOrEmpty(GetString("UserManagement:User.Address")))
			{
				<div class="col text-end d-none d-md-block">
					<a href="@userAddressesPage" class="h6 fw-normal mb-3 d-block">@Translate("Manage your addresses")</a>
				</div>
			}
		</div>
	</div>

	if (userAddressLoop.Count > 0 || !string.IsNullOrEmpty(GetString("UserManagement:User.Address")))
	{
		<div class="list-group">
			@if (!string.IsNullOrEmpty(GetString("UserManagement:User.Address")))
			{
				List<string> addressList = new List<string>();
				if (!string.IsNullOrEmpty(GetString("UserManagement:User.UserAddress.Address")))
				{
					addressList.Add(GetString("UserManagement:User.UserAddress.Address"));
				}
				if (!string.IsNullOrEmpty(GetString("UserManagement:User.UserAddress.Zip")))
				{
					addressList.Add(GetString("UserManagement:User.UserAddress.Zip"));
				}
				if (!string.IsNullOrEmpty(GetString("UserManagement:User.UserAddress.City")))
				{
					addressList.Add(GetString("UserManagement:User.UserAddress.City"));
				}
				string userAddressString = (string.Join(",", addressList.Select(x => x.ToString()).ToArray()));
				string isChecked = userAddressString == deliveryAddressString || string.IsNullOrEmpty(deliveryAddressString) || string.IsNullOrEmpty(userAddressString) ? "checked" : "";
				string disabled = userAddressString == deliveryAddressString || string.IsNullOrEmpty(deliveryAddressString) || string.IsNullOrEmpty(userAddressString) ? "" : "disabled";

				<label class="list-group-item list-group-item-action py-3 d-flex justify-content-between">
					<div class="me-3 w-100">
						<div class="row mb-0">
							<div class="col-12 col-md-4 d-flex align-items-center">
								<input class="form-check-input me-3 mt-0" type="radio" name="EcomOrderDeliverySelectedAddressId" id="EcomOrderDeliverySelectedAddressId_@GetString("UserManagement:User.ID")" value="-1" @isChecked onclick="useBillingAddress()">
								<span class="d-block text-nowrap fs-7">@Translate("Same as the billing address")</span>	

								<input @disabled type="hidden" name="EcomOrderDeliveryName" value="@GetString("Ecom:Order.Customer.Name")" />
								<input @disabled type="hidden" name="EcomOrderDeliveryEmail" value="@GetString("Ecom:Order.Customer.Email")" />
								<input @disabled type="hidden" name="EcomOrderDeliveryPhone" value="@GetString("Ecom:Order.Customer.Phone")" />
								<input @disabled type="hidden" name="EcomOrderDeliveryCompany" value="@GetString("Ecom:Order.Customer.Company")" />
								<input @disabled type="hidden" name="EcomOrderDeliveryAddress" value="@GetString("Ecom:Order.Customer.Address")" />
								<input @disabled type="hidden" name="EcomOrderDeliveryZip" value="@GetString("Ecom:Order.Customer.Zip")" />
								<input @disabled type="hidden" name="EcomOrderDeliveryCity" value="@GetString("Ecom:Order.Customer.City")" />
								<input @disabled type="hidden" name="EcomOrderDeliveryCountry" value="@GetString("Ecom:Order.Customer.Country")" />
							</div>
							<div class="col-12 col-md-8 mt-md-0 align-items-center fs-7 ps-5 ps-md-3"></div>
						</div>
					</div>
				</label>
			}

			@foreach (LoopItem userAddress in userAddressLoop)
			{

				string addressId = userAddress.GetString("UserManagement:User.UserAddress.ID");

				List<string> addressList = new List<string>();
				if (!string.IsNullOrEmpty(userAddress.GetString("UserManagement:User.UserAddress.Address")))
				{
					addressList.Add(userAddress.GetString("UserManagement:User.UserAddress.Address"));
				}
				if (!string.IsNullOrEmpty(userAddress.GetString("UserManagement:User.UserAddress.Zip")))
				{
					addressList.Add(userAddress.GetString("UserManagement:User.UserAddress.Zip"));
				}
				if (!string.IsNullOrEmpty(userAddress.GetString("UserManagement:User.UserAddress.City")))
				{
					addressList.Add(userAddress.GetString("UserManagement:User.UserAddress.City"));
				}
				string userAddressString = (string.Join(",", addressList.Select(x => x.ToString()).ToArray()));
				string isChecked = userAddressString == deliveryAddressString ? "checked" : "";

				if (string.IsNullOrEmpty(deliveryAddressString) && string.IsNullOrEmpty(GetString("UserManagement:User.Address")))
				{
					isChecked = userAddress.GetBoolean("UserManagement:User.UserAddress.Default") ? "checked" : isChecked;
				}

				<label class="list-group-item list-group-item-action py-3 d-flex justify-content-between">
					<div class="me-3 w-100">
						<div class="row mb-0">
							<div class="col-12 col-md-4 d-flex align-items-center">
								<input class="form-check-input me-3 mt-0" type="radio" name="EcomOrderDeliverySelectedAddressId" id="EcomOrderDeliverySelectedAddressId_@addressId" value="@addressId" @isChecked onclick="useUserAddress()">
								<span class="d-block text-nowrap fs-7">@userAddress.GetString("UserManagement:User.UserAddress.Description")</span>
							</div>
							<div class="col-12 col-md-8 mt-md-0 align-items-center fs-7 ps-5 ps-md-3">
								@if (!string.IsNullOrWhiteSpace(userAddress.GetString("UserManagement:User.UserAddress.Company")))
								{
									<span>@userAddress.GetString("UserManagement:User.UserAddress.Company")</span>
								}
								@if (!string.IsNullOrWhiteSpace(userAddress.GetString("UserManagement:User.UserAddress.Address")))
								{
									<span>@userAddress.GetString("UserManagement:User.UserAddress.Address")</span>
								}
								@if (!string.IsNullOrWhiteSpace(userAddress.GetString("UserManagement:User.UserAddress.Zip")))
								{
									<span>@userAddress.GetString("UserManagement:User.UserAddress.Zip")</span>
								}
								@if (!string.IsNullOrWhiteSpace(userAddress.GetString("UserManagement:User.UserAddress.City")))
								{
									<span>@userAddress.GetString("UserManagement:User.UserAddress.City")</span>
								}
								@if (!string.IsNullOrWhiteSpace(userAddress.GetString("UserManagement:User.UserAddress.Country")))
								{
									<span>@userAddress.GetString("UserManagement:User.UserAddress.Country")</span>
								}
							</div>
						</div>	
					</div>
				</label>
			}
		</div>
	} else {
		<div class="text-center border p-5">
			<h3 class="mb-4">@Translate("You do not have any addresses yet")</h3>
			<a href="@userAddressesPage" class="btn btn-primary">@Translate("Create a new address")</a>
		</div>
	}

	<script>
		useBillingAddress = function () {
			document.querySelectorAll("input[name^='EcomOrderDelivery']").forEach(function (field) {
				field.removeAttribute("disabled");
			});
		}

		useUserAddress = function () {
			document.querySelectorAll("input[name^='EcomOrderDelivery']").forEach(function (field) {
				if (field.name != "EcomOrderDeliverySelectedAddressId") {
					field.setAttribute("disabled", "true");
				}
			});
		}
	</script>
}
