@helper RenderCartOrderLineItem(LoopItem orderline) {

	string productName = orderline.GetString("Ecom:Order:OrderLine.ProductName") + " " + orderline.GetString("Ecom:Order:OrderLine.ProductVariantText");
	string productImage = "/Admin/Public/GetImage.ashx?width=" + 500 + "&height=" + 500 + "&image=" + orderline.GetString("Ecom:Product.PrimaryImage") + "&Format=WebP&Quality=100";
	string productRemoveFromBasketLink = orderline.GetString("Ecom:Order:OrderLine.DeleteLink");
	string productPriceTotalWithDiscounts = orderline.GetString("Ecom:Order:OrderLine.TotalPriceWithProductDiscounts.PriceFormatted");
	string productPriceBefore = orderline.GetString("Ecom:Product.InformativePrice.PriceFormatted");
	var orderlineQuantity = orderline.GetDouble("Ecom:Order:OrderLine.Quantity");
	var primaryGroupId = orderline.GetString("Ecom:Order:OrderLine.PrimaryOrDefaultGroupId");
	var productId = orderline.GetString("Ecom:Order:OrderLine.ProductID");
	var variantId = orderline.GetString("Ecom:Order:OrderLine.ProductVariantID");

	string productLink = "#";
	string productDetailPageId = Pageview.Item["ProductPageLink"] != null ? Pageview.Item["ProductPageLink"].ToString() : GetPageIdByNavigationTag("ProductDetailPage").ToString();
	productLink = "Default.aspx?ID=" + productDetailPageId + "&GroupID=" + primaryGroupId + "&ProductID=" + productId;
    if (!string.IsNullOrEmpty(variantId))
    {
        productLink += "&VariantID=" + variantId;
    }

	var isProduct = orderline.GetBoolean("Ecom:Order:OrderLine.IsProduct");
	var isDiscount = orderline.GetBoolean("Ecom:Order:OrderLine.IsDiscount");

	// Calculate savings
	var orderlineInformativePrice = orderline.GetDouble("Ecom:Product.InformativePrice.Price.Value");
	var orderlineProductPrice = orderline.GetDouble("Ecom:Product.Price.Price.Value");
	var savingsPerProduct = orderlineInformativePrice - orderlineProductPrice;
	var orderlineTotalSavings = savingsPerProduct * orderlineQuantity;

	bool isCartProduct = false;
	if(isProduct == true) {
		isCartProduct = true;
	}

	bool isCartDiscount = false;
	if(isDiscount == true) {
		isCartDiscount = true;
	}

	bool productHasPriceBefore = false;
	if(orderlineInformativePrice != 0) {
		productHasPriceBefore = true;
	}

	if (isCartProduct) {
	<article class="order-line py-4 border-top">
		<div class="row">

			<div class="
				[ col-8 offset-2 mb-3 ]
				[ col-lg-2 offset-lg-0 mb-lg-0 ]">
				<a href="@productLink" class="ratio ratio-1x1 d-block">
					<img class="cart-item-img" src="@productImage" style="object-fit: contain;" alt="@productName">
				</a>
			</div>

			<div class="order-line-content col-12 col-lg-10">
				<div class="row position-relative h-100">

					<div class="col-10 col-lg-12">
						<h1 class="h6">
							<a href="@productLink" class="text-dark text-decoration-none">
								@productName
							</a>
						</h1>
					</div>

					<div class="col-12 col-lg-4">

						@if (productHasPriceBefore) {
						<p class="fs-small text-muted">
							<span>@Translate("Before"):</span>
							<span class="text-price">@productPriceBefore</span>
						</p>
						}


						@if(orderline.GetLoop("VariantGroups").Any()) {
							<ul class="list-unstyled mb-4">
								@foreach (LoopItem variantGroup in orderline.GetLoop("VariantGroups")) {
									string label = variantGroup.GetString("Ecom:VariantGroup.Name");
									string value = "";

									foreach (LoopItem variantOption in variantGroup.GetLoop("VariantOptions")) {
										if(variantOption.GetBoolean("Ecom:VariantOption.Selected")){
											value = variantOption.GetString("Ecom:VariantOption.Name");
										}
									}
									<li class="text-muted">
										<span>@label</span>
										<span>@value</span>
									</li>
								}
							</ul>
						}

						<div class="btn-group position-absolute position-lg-static top-0" role="group" style="right: calc(var(--bs-gutter-x) / 2);">
							<a href="@productRemoveFromBasketLink" class="btn btn-light" data-bs-toggle="tooltip" data-bs-placement="top" title="Remove">
								<span class="icon">
									@if (File.Exists(HttpContext.Current.Server.MapPath("/Files/Templates/Designs/R4/Assets/icons/trash-alt.svg"))) {
										@System.IO.File.ReadAllText(HttpContext.Current.Server.MapPath("/Files/Templates/Designs/R4/Assets/icons/trash-alt.svg"))
									}
								</span>
							</a>
						</div>

					</div>

					<div class="[ col-6 col-md-4 col-lg-2 ]">
						<div class="input-group">
							<label for="QuantityOrderLine@(orderline.GetValue("Ecom:Order:OrderLine.Id"))" class="visually-hidden">Quantity:</label>
							<input type="number" id="QuantityOrderLine@(orderline.GetValue("Ecom:Order:OrderLine.Id"))" class="form-control" value="@orderlineQuantity" min="0" name="QuantityOrderLine@(orderline.GetValue("Ecom:Order:OrderLine.Id"))" value="@orderline.GetValue("Ecom:Order:OrderLine.Quantity")" />
							<button class="btn btn-light" type="submit" id="button-addon1" data-bs-toggle="tooltip" data-bs-placement="top" title="Update cart">
								<span class="icon">
									@if (File.Exists(HttpContext.Current.Server.MapPath("/Files/Templates/Designs/R4/Assets/icons/sync.svg"))) {
										@System.IO.File.ReadAllText(HttpContext.Current.Server.MapPath("/Files/Templates/Designs/R4/Assets/icons/sync.svg"))
									}
								</span>
							</button>
						</div>
					</div>

					<div class="
						[ col-6 offset-6 text-end order-3 align-self-end ]
						[ col-md-5 offset-md-0 order-md-2 text-md-end ]
						[ col-lg-3 align-self-lg-start ]">

						@if (productHasPriceBefore) {
						<p class="price-total-saving m-0 fs-small text-muted">
							<span>@Translate("You save"):</span>
							<span class="text-price">@orderlineTotalSavings</span>
						</p>
						}
					</div>	

					<div class="
						[ col-6 order-2 align-self-end text-end ]
						[ col-md-3 order-md-3 mt-md-0 ]
						[ col-lg-3 align-self-lg-start ]">

						<p class="unit-price text-muted">
							<span class="text-price">@orderline.GetString("Ecom:Order:OrderLine.UnitPrice")</span>
						</p>

						<p class="price-current m-0">
							<span class="d-none d-lg-none text-muted mb-2">Total:</span>
							<span class="h5 mb-0 d-block fw-bold">
								<span class="text-price">
									@productPriceTotalWithDiscounts
								</span>
							</span>
						</p>
					</div>
				</div>
			</div>

		</div>
	</article>
	}

	if (isCartDiscount) {
	<article class="order-line py-4 border-top">
		<div class="row">

			<div class="col-9 col-lg-8 offset-lg-2">
				<h1 class="h6 m-0">@productName</h1>
			</div>

			<div class="col-3 col-lg-2">
				<p class="m-0 text-end h6 mb-0 fw-bold">
					<span class="text-price">
						@productPriceTotalWithDiscounts
					</span>
				</p>
			</div>
		</div>

	</article>
	}

}
