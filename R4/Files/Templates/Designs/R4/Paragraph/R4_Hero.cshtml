@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Frontend


@{
	string layout = Model.Item?.GetList("Layout")?.SelectedValue != "" ? Model.Item.GetList("Layout").SelectedValue : "align-middle-center-text-center";
	string theme = Model.Item?.GetList("Theme")?.SelectedValue != "" ? Model.Item.GetList("Theme").SelectedValue.ToLower() : "";
	theme = String.Concat(theme.Where(c => !Char.IsWhiteSpace(c)));
	theme = theme.Replace("theme", "");

	string ratioCssClass = Model.Item?.GetList("ImageAspectRatio")?.SelectedValue != "0" && Model.Item?.GetList("ImageAspectRatio")?.SelectedValue != "" ? "ratio" : "";
	string ratioVariable = Model.Item?.GetList("ImageAspectRatio")?.SelectedValue != "0" && Model.Item?.GetList("ImageAspectRatio")?.SelectedValue != "" ? "style=\"--aspect-ratio: " + Model.Item.GetList("ImageAspectRatio").SelectedValue + "\"" : "";
}

<div class="card border-0 rounded-0 bg-dark text-white h-100 @ratioCssClass theme theme-@theme" @ratioVariable>
	@RenderImage()
	<div class="card-img-overlay">
		@switch (layout)
		{
			case "align-middle-center-text-left":
					<div class="position-relative top-0 h-100 w-100 py-5 px-3">
						<div class="d-flex justify-content-center align-items-center h-100">
							<div class="text-start max-w-75ch">
								@RenderTitle()
								@RenderText()
								@RenderButton()
							</div>
						</div>
					</div>
				break;
			case "align-top-center-text-center":
					<div class="position-relative top-0 h-100 w-100 py-5 px-3">
						<div class="d-flex justify-content-center align-items-start h-100">
							<div class="text-center max-w-75ch">
								@RenderTitle()
								@RenderText()
								@RenderButton()
							</div>
						</div>
					</div>
				break;
			case "align-middle-center-text-center":
					<div class="position-relative top-0 h-100 w-100 py-5 px-3">
						<div class="d-flex justify-content-center align-items-center h-100">
							<div class="text-center max-w-75ch">
								@RenderTitle()
								@RenderText()
								@RenderButton()
							</div>
						</div>
					</div>
				break;
			case "align-bottom-center-text-center":
					<div class="position-relative top-0 h-100 w-100 py-5 px-3">
						<div class="d-flex justify-content-center align-items-end h-100">
							<div class="text-center max-w-75ch">
								@RenderTitle()
								@RenderText()
								@RenderButton()
							</div>
						</div>
					</div>
				break;
			case "align-middle-center-text-right":
					<div class="position-relative top-0 h-100 w-100 py-5 px-3">
						<div class="d-flex justify-content-center align-items-center h-100">
							<div class="text-end max-w-75ch">
								@RenderTitle()
								@RenderText()
								@RenderButton()
							</div>
						</div>
					</div>
				break;
		}
	</div>
</div>

@helper RenderImage()
{
	if (!string.IsNullOrEmpty(Model.Item.GetString("Image")))
	{
		string imagePath = Model.Item?.GetFile("Image")?.Path ?? "";
		imagePath = "/Admin/Public/GetImage.ashx?width=" + 1920 + "&height=" + 845 + "&image=" + imagePath + "&Format=WebP&Quality=100";

		int xPos = Model.Item?.GetFile("Image")?.FocalPositionFromLeft ?? 50;
		int yPos = Model.Item?.GetFile("Image")?.FocalPositionFromTop ?? 50;

		<img loading="lazy" src="@imagePath" class="card-img rounded-0 h-100 w-100" style="object-fit: cover; object-position: @(xPos)% @(yPos)%" class="w-100 h-100" title="@Model.Item.GetString("Title")" alt="@Model.Item.GetString("Title")" />
	}
}

@helper RenderTitle()
{
	if (!string.IsNullOrEmpty(Model.Item.GetString("Title")) && !Model.Item.GetBoolean("HideTitle"))
	{
		<h2 class="card-title display-3 mb-3">@Model.Item.GetString("Title")</h2>
	}
}

@helper RenderText()
{
	if (!string.IsNullOrEmpty(Model.Item.GetString("Text")))
	{
		<p class="card-text lead mb-3">@Model.Item.GetString("Text")</p>
	}
}

@helper RenderButton()
{
	if (!string.IsNullOrEmpty(Model.Item.GetString("ButtonLink")) && !string.IsNullOrEmpty(Model.Item.GetString("ButtonLabel")))
	{
		<div>
			<a href="@Model.Item.GetString("ButtonLink")" class="btn btn-primary btn-giant">@Model.Item.GetString("ButtonLabel")</a>
		</div>
	}
}
