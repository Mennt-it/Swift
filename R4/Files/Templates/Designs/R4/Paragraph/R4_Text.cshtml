@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Frontend

@{
	string layout = Model.Item?.GetList("Layout")?.SelectedValue != null ? Model.Item.GetList("Layout").SelectedValue : "align-left";
	string textAlign = layout;
	string contentPadding = Model.Item?.GetList("contentPadding")?.SelectedValue != null ? Model.Item.GetList("contentPadding").SelectedValue : "";


	string theme = "";
	if (Model.Item?.GetList("Theme")?.SelectedValue != null) {
		if (Model.Item.GetList("Theme").SelectedValue.ToLower() != "theme default")
		{
			theme = Model.Item.GetList("Theme").SelectedValue.ToLower();
			theme = String.Concat(theme.Where(c => !Char.IsWhiteSpace(c)));
			theme = theme.Replace("theme", "");
			theme = "theme theme-" + theme;
		}
	}
}

<div class="card h-100 rounded-0 border-0 h-100 @(layout) @contentPadding @theme">
	@switch (layout)
	{
		case "text-start":
			<div class="d-flex flex-column align-items-start text-start">
				@RenderBody()
			</div>
		break;
		
		case "text-center":
			<div class="d-flex flex-column align-items-center text-center">
				@RenderBody()
			</div>
		break;
		case "align-middle-center-text-center":
			<div class="d-flex flex-column align-items-center justify-content-center text-center h-100">
				@RenderBody()
			</div>
		break;
		case "align-middle-center-text-start":
			<div class="d-flex flex-column align-items-start justify-content-center text-start h-100">
				@RenderBody()
			</div>
		break;
	}
</div>

@helper RenderBody()
{
	string titleFontSize = Model.Item?.GetList("TitleFontSize")?.SelectedValue != null ? Model.Item.GetList("TitleFontSize").SelectedValue : "h3";
	string subtitleFontSize = Model.Item?.GetList("SubtitleFontSize")?.SelectedValue != null ? Model.Item.GetList("SubtitleFontSize").SelectedValue : "fs-5";


	if (!string.IsNullOrEmpty(Model.Item.GetString("Title")) && !Model.Item.GetBoolean("HideTitle"))
	{
		<h2 class="@titleFontSize card-title mb-md-3">@Model.Item.GetString("Title")</h2>
	}

	if (!string.IsNullOrEmpty(Model.Item.GetString("Lead")))
	{
		<p class="@subtitleFontSize lead mb-2 mb-md-3 max-w-75ch">@Model.Item.GetString("Lead")</p>
	}
	if (!string.IsNullOrEmpty(Model.Item.GetString("Text")))
	{
		<div class="max-w-75ch">
			@Model.Item.GetString("Text")
		</div>
	}

	if (!string.IsNullOrEmpty(Model.Item.GetString("ButtonLink")) && !string.IsNullOrEmpty(Model.Item.GetString("ButtonLabel")))
	{

		<a href="@Model.Item.GetString("ButtonLink")" class="btn btn-primary stretched-link">@Model.Item.GetString("ButtonLabel")</a>
	}
	else if (!string.IsNullOrEmpty(Model.Item.GetString("ButtonLink")))
	{
		<a href="@Model.Item.GetString("ButtonLink")" class="stretched-link"></a>
	}
}

