@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.ProductCatalog
@using Dynamicweb.Frontend.Navigation
@using System.Web

@{ 
    bool isVisualEditor = !string.IsNullOrEmpty(HttpContext.Current.Request.QueryString.Get("VisualEdit")) ? Convert.ToBoolean(HttpContext.Current.Request.QueryString.Get("VisualEdit")) : false;

    ProductListViewModel productList = new ProductListViewModel();

    if (System.Web.HttpContext.Current.Items.Contains("ProductList"))
    {
        productList = (ProductListViewModel)System.Web.HttpContext.Current.Items["ProductList"];
    }

    bool facetsFound = false;

    if (productList.FacetGroups != null) {
        facetsFound = productList.FacetGroups.Count() > 0 ? true : false;
    }

    string url = HttpContext.Current.Request.RawUrl;
    if (!url.Contains("LayoutTemplate")) {
        url += url.Contains("?") ? "&LayoutTemplate=Designs/R4/R4_PageClean.cshtml" : "?LayoutTemplate=Designs/R4/R4_PageClean.cshtml";
    }

    string pageSize = !string.IsNullOrEmpty(HttpContext.Current.Request.QueryString.Get("PageSize")) ? HttpContext.Current.Request.QueryString.Get("PageSize") : "30";
    string groupId = !string.IsNullOrEmpty(HttpContext.Current.Request.QueryString.Get("GroupID")) ? HttpContext.Current.Request.QueryString.Get("GroupID") : "";
}

@if (facetsFound) { 
    <form method="post" action="@url" data-response-target-element="content">
        <input type="hidden" name="PageSize" value="@pageSize" />
        <input type="hidden" name="GroupID" value="@groupId" />

        @if (Model.Item.GetBoolean("EnableGroupNavigation")) {
            var navigationSettings = new NavigationSettings();
            navigationSettings.StartLevel = 1;
            navigationSettings.StopLevel = 10;
            navigationSettings.ExpandMode = ExpandMode.All;

            <div class="card mb-3">
                <div class="card-header bg-white">
                    <div class="d-flex">
                        <h6 class="card-title fw-bold m-0 flex-fill">@Translate("Navigation")</h6>
                        <div class="my-auto collapse-chevron-icon" data-bs-toggle="collapse" data-bs-target="#ProductGroupNavigation" role="button" aria-expanded="true" aria-controls="ProductGroupNavigation"></div>
                    </div>
                </div>
                <div class="collapse show" id="ProductGroupNavigation">
                    <div class="card-body p-0 pe-3 pt-2 pb-3">
                        @Navigation.RenderNavigation("Navigation/Vertical.cshtml", navigationSettings)
                    </div>
                </div>
            </div>
        }

        @foreach (FacetGroupViewModel facetGroup in productList.FacetGroups) {
            foreach (FacetViewModel facet in facetGroup.Facets) {
                if (facet.Options.Count() > 0) {
                    <div class="card mb-3">
                        <div class="card-header bg-white">
                            <div class="d-flex">
			                    <h6 class="card-title fw-bold m-0 flex-fill">@facet.Name</h6>
                                <div class="my-auto collapse-chevron-icon" data-bs-toggle="collapse" data-bs-target="#FacetGroup_@facet.Name.Replace(" ", "")" role="button" aria-expanded="true" aria-controls="FacetGroup_@facet.Name.Replace(" ", "")"></div>
		                    </div>
                        </div>
                        <div class="collapse show" id="FacetGroup_@facet.Name.Replace(" ", "")">
                            <div class="card-body">
			                    @foreach (FacetOptionViewModel facetOption in facet.Options) {
                                    string renderType = facet.RenderType;

                                    if (renderType == "Colors") {
                                        @RenderColorOption(facet, facetOption)
                                    } else {
                                        @RenderCheckboxOption(facet, facetOption)
                                    }
                                }
		                    </div>
                        </div>
	                </div>
                }
            }
        }
    </form>
} else if (isVisualEditor) {
    <div class="alert alert-dark m-0" role="alert">
        <span><i class="fas fa-info-circle mr-3"></i></span> <span>@Translate("Facets: The facets selectors will be shown here, if any")</span>
    </div>
}


@helper RenderCheckboxOption(FacetViewModel facet, FacetOptionViewModel facetOption) { 
    string facetLabel = facetOption.Name;
    string disabled = facetOption.Count <= 0 ? "disabled" : "";
    string selected = facetOption.Selected ? "checked" : "";

    if (facetLabel.ToLower() == "true")
    {
        facetLabel = Translate("Yes");
    }

    if (facetLabel.ToLower() == "false")
    {
        facetLabel = Translate("No");
    }

    <label class="form-check" @disabled>
		<input type="checkbox" onclick="ProductList.Update(event)" class="form-check-input" name="@facet.QueryParameter" value="[@facetOption.Value]" data-filter-value="@facetLabel" @selected>
		<div class="form-check-label d-flex align-items-center"><span class="flex-fill">@facetLabel </span><small class="text-muted">@facetOption.Count</small></div>
	</label>
}

@helper RenderColorOption(FacetViewModel facet, FacetOptionViewModel facetOption) { 
    string facetLabel = facetOption.Name;
    string disabled = facetOption.Count <= 0 ? "disabled" : "";
    string selected = facetOption.Selected ? "checked" : "";

    string colorCode = facetOption.Value;

    if (!facetOption.Value.Contains("#")) {
        var variantOption = Dynamicweb.Ecommerce.Services.VariantOptions.GetVariantOption(facetOption.Value.ToString(), Dynamicweb.Ecommerce.Common.Context.LanguageID);
        if (variantOption != null) {
            colorCode = variantOption.LargeImage;
        }
    }

    <div class="colorbox">
        <input type="checkbox" onclick="ProductList.Update(event)" class="@disabled @selected" name="@facet.QueryParameter" value="[@facetOption.Value]" data-filter-value="@facetLabel" @selected title="@facetOption.Label"></input>
        @if (facetOption.Value.Contains("#")) {
            <span class="colorbox-background" style="background-color: @facetOption.Value"></span>
        } else {
            <img class="colorbox-background" src="/Admin/Public/GetImage.ashx?width=25&height=25&image=@colorCode"/>
        }
    </div>
}
