@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.ProductCatalog
@using Dynamicweb.Frontend
@using System.Web

@{ bool isVisualEditor = !string.IsNullOrEmpty(HttpContext.Current.Request.QueryString.Get("VisualEdit")) ? Convert.ToBoolean(HttpContext.Current.Request.QueryString.Get("VisualEdit")) : false;

	ProductViewModel product = new ProductViewModel();

	if (System.Web.HttpContext.Current.Items.Contains("ProductDetails"))
	{
		product = (ProductViewModel)System.Web.HttpContext.Current.Items["ProductDetails"];
	} 
}

@if (product.ProductFields != null && Model.Item.GetBoolean("ProductFields")) {
	if (product.ProductFields.Count > 0) {
		<table class="table text-left mb-4">
			@foreach (var field in product.ProductFields) {
				@RenderField(field.Value)  
			}  
		</table>
	}
}

@if (product.ProductCategories != null && Model.Item.GetBoolean("CategoryFields")) {
	if (product.ProductCategories.Count > 0) {
		foreach (var group in product.ProductCategories) {
			CategoryFieldViewModel category = group.Value;

			<h4 class="h4 mb-4">@group.Key</h4>

			<dl class="definition-list">
				@foreach (var field in category.Fields) {
					@RenderField(field.Value)  
				}  
			</dl>
		}
	}
}

@helper RenderField(FieldValueViewModel field) { 
	string fieldValue = field.Value.ToString();
	fieldValue = fieldValue == "False" ? Translate("No") : fieldValue;
	fieldValue = fieldValue == "True" ? Translate("Yes") : fieldValue;

	if (field.Value.GetType() == typeof(System.Collections.Generic.List<FieldOptionValueViewModel>)) {
		fieldValue = "";

		foreach (FieldOptionValueViewModel option in field.Value as System.Collections.Generic.List<FieldOptionValueViewModel>) {
			fieldValue = option.Value;
		}
	}

	bool isColor = false;
	if (fieldValue.Contains("#") && (Translate(field.Name) == Translate("Color") || Translate(field.Name) == Translate("Colour"))) {
		isColor = true;   
	}

	if (!string.IsNullOrEmpty(fieldValue)) {
		<div class="definition-list-item">
			<dt class="fw-light">@field.Name</dt>
			@if (!isColor) {
				<dd class="fw-bold">@fieldValue</dd>
			} else {
				<dd>
					<div class="position-relative">
						<span class="colorbox-background" style="background-color: @fieldValue"></span>
					</div>
				</dd>
			}
		</div>				
	}   
}
