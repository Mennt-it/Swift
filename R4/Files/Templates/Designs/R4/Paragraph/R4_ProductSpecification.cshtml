@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Ecommerce.ProductCatalog

@{ 
	ProductViewModel product = new ProductViewModel();

	if (Dynamicweb.Context.Current.Items.Contains("ProductDetails"))
	{
		product = (ProductViewModel)Dynamicweb.Context.Current.Items["ProductDetails"];
	} 
}

@if ((product.ProductFields != null && Model.Item.GetBoolean("ProductFields")) || (product.ProductCategories != null && Model.Item.GetBoolean("CategoryFields"))) {
	<div class="text-start pt-5 pb-2 pt-lg-6 pb-lg-4">
		<h2 class="display-4">@Translate("Specifications")</h2>
	</div>
}

@if (product.ProductFields != null && Model.Item.GetBoolean("ProductFields")) {
	if (product.ProductFields.Count > 0) {
		<table class="table text-left mb-4">
			@foreach (var field in product.ProductFields) {
				@RenderField(field.Value)  
			}  
		</table>
	}
}

@if (product.ProductCategories != null && Model.Item.GetBoolean("CategoryFields")) {
	if (product.ProductCategories.Count > 0) {
		foreach (var group in product.ProductCategories) {
			CategoryFieldViewModel category = group.Value;

			<h4 class="h4 mb-4">@group.Key</h4>

			<dl class="definition-list">
				@foreach (var field in category.Fields) {
					@RenderField(field.Value)  
				}  
			</dl>
		}
	}
}

@helper RenderField(FieldValueViewModel field) { 
	string fieldValue = field?.Value != null ? field.Value.ToString() : "";

	if (fieldValue != "") {
		fieldValue = fieldValue == "False" ? Translate("No") : fieldValue;
		fieldValue = fieldValue == "True" ? Translate("Yes") : fieldValue;

		if (field.Value.GetType() == typeof(System.Collections.Generic.List<FieldOptionValueViewModel>)) {
			fieldValue = "";

			foreach (FieldOptionValueViewModel option in field.Value as System.Collections.Generic.List<FieldOptionValueViewModel>) {
				fieldValue = option.Value;
			}
		}

		bool isColor = false;
		if (fieldValue.Contains("#") && (Translate(field.Name) == Translate("Color") || Translate(field.Name) == Translate("Colour"))) {
			isColor = true;   
		}

		if (!string.IsNullOrEmpty(fieldValue)) {
			<div class="definition-list-item">
				<dt class="fw-bold">@field.Name</dt>
				@if (!isColor) {
					<dd>@fieldValue</dd>
				} else {
					<dd>
						<div class="colorbox">
							<span class="colorbox-sm" style="background-color: @fieldValue"></span>
						</div>
					</dd>
				}
			</div>				
		} 
	}
}
