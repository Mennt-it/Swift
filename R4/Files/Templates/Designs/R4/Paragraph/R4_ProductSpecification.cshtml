@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Ecommerce.ProductCatalog

@{ 
	ProductViewModel product = new ProductViewModel();

	if (Dynamicweb.Context.Current.Items.Contains("ProductDetails"))
	{
		product = (ProductViewModel)Dynamicweb.Context.Current.Items["ProductDetails"];
	} 
}

@if ((product.ProductFields != null && Model.Item.GetBoolean("ProductFields")) || (product.ProductCategories != null && Model.Item.GetBoolean("CategoryFields"))) {
	<div class="text-start pt-5 pb-2 pt-lg-6 pb-lg-4">
		<h2 class="display-4">@Translate("Specifications")</h2>
	</div>
}

@if (product.ProductFields != null && Model.Item.GetBoolean("ProductFields")) {
	if (product.ProductFields.Count > 0) {
		<table class="table text-left mb-4">
			@foreach (var field in product.ProductFields) {
				@RenderField(field.Value)  
			}  
		</table>
	}
}

@if (product.ProductCategories != null && Model.Item.GetBoolean("CategoryFields")) {
	if (product.ProductCategories.Count > 0) {
		foreach (var group in product.ProductCategories) {
			CategoryFieldViewModel category = group.Value;

			<h4 class="h4 mb-4">@group.Key</h4>

			<dl class="definition-list">
				@foreach (var field in category.Fields) {
					@RenderField(field.Value)  
				}  
			</dl>
		}
	}
}

@helper RenderField(FieldValueViewModel field) { 
	string fieldValue = field?.Value != null ? field.Value.ToString() : "";

	if (!string.IsNullOrEmpty(fieldValue)) {
		fieldValue = fieldValue == "False" ? Translate("No") : fieldValue;
		fieldValue = fieldValue == "True" ? Translate("Yes") : fieldValue;

		bool isColor = false;

		<div class="definition-list-item">
			<dt class="fw-bold">@field.Name</dt>
			<dd>
				@if (field.Value.GetType() == typeof(System.Collections.Generic.List<FieldOptionValueViewModel>))
				{
					int valueCount = 0;
					System.Collections.Generic.List<FieldOptionValueViewModel> values = field.Value as System.Collections.Generic.List<FieldOptionValueViewModel>;
					int totalValues = values.Count();

					foreach (FieldOptionValueViewModel option in values)
					{
						if (option.Value.Substring(0,1) == "#") {
							isColor = true;   
						}

						@RenderFieldValue(option.Value, isColor);
						if (valueCount != totalValues && valueCount < (totalValues - 1)) {
							if (isColor) {
<text> </text>
							} else {
<text>, </text>
							}
						}
						valueCount++;
					}
				}
				else
				{
					if (fieldValue.Substring(0,1) == "#") {
						isColor = true;   
					}

					@RenderFieldValue(fieldValue, isColor);
				}
			</dd>
		</div>
	}
}

@helper RenderFieldValue(string fieldValue, bool isColor) { 
	if (!isColor) {
		@fieldValue
	} else {
		<span class="colorbox-sm" style="background-color: @fieldValue" title="@fieldValue"></span>
	}
}
