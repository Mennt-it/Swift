@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.ProductCatalog
@using Dynamicweb.Frontend
@using System.Web

@{ 
	bool isVisualEditor = !string.IsNullOrEmpty(HttpContext.Current.Request.QueryString.Get("VisualEdit")) ? Convert.ToBoolean(HttpContext.Current.Request.QueryString.Get("VisualEdit")) : false;

	ProductViewModel product = new ProductViewModel();

	if (System.Web.HttpContext.Current.Items.Contains("ProductDetails"))
	{
		product = (ProductViewModel)System.Web.HttpContext.Current.Items["ProductDetails"];
	}

	//Collect the images
	var selectedImageCategories = Model.Item.GetList("ImageAssets").SelectedValues;
	var images = product.AssetCategories.Where(x => selectedImageCategories.Contains(x.SystemName)).SelectMany(x => x.Assets).Union(product.ImagePatternImages);
	string mainAspectRatio = Model.Item?.GetList("ImageAspectRatio")?.SelectedValue != "0" ? "ratio ratio-" + Model.Item.GetList("ImageAspectRatio").SelectedValue : "";
	string ratio = Model.Item?.GetList("ImageAspectRatio")?.SelectedValue != "0" && Model.Item?.GetList("ImageAspectRatio")?.SelectedValue != "" ? Model.Item.GetList("ImageAspectRatio").SelectedValue : "";
	string mainRatioCssClass = ratio != "" ? "ratio" : "";
	string mainRatioVariable = ratio != "" ? "--bs-aspect-ratio: " + ratio : "";
	int ratioPercentage = Convert.ToInt32(ratio.Replace("%", ""));
	string imageSizeSmall = ratio != "" ? "width=" + 1200 + "&height=" + ratioPercentage * 1200 / 100 : "width=1200&height=1200";
	string imageSizeLarge = ratio != "" ? "width=" + 1920 + "&height=" + ratioPercentage * 1920 / 100 : "width=1920&height=1920";
	string mainSmallImage = "";
	string mainLargeImage = "";

	int totalImages = 0;
	foreach (MediaViewModel asset in images) {
		var assetName = asset.Value.ToLower(); 
		if (assetName.Contains(".jpg") || assetName.Contains(".webp") || assetName.Contains(".png") || assetName.Contains(".gif")) {
			if (totalImages == 0) {
				mainSmallImage = "/Admin/Public/GetImage.ashx?" + imageSizeSmall + "&crop=5&fillcanvas=true&Format=WebP&image=" + asset.Value;
				mainLargeImage = "/Admin/Public/GetImage.ashx?" + imageSizeLarge + "&crop=5&fillcanvas=true&Format=WebP&image=" + asset.Value;
			}
			totalImages++;
		} 
	}

	string mainImageColClass = totalImages > 1 ? "col-10" : "col-12";
}


@* Get images from selected categories or get all images *@
<div class="item">
	@if (totalImages != 0)
	{
		@* Show image + thumbs on large screens *@
		<div class="d-none d-lg-block">
			<div class="row g-3">
				@if (totalImages > 1)
				{
					<div class="col-2">
						<div id="LargeScreenImages_@Model.ID">
							@foreach (MediaViewModel asset in images) {
								var assetName = asset.Value.ToLower(); 
								if (assetName.Contains(".jpg") || assetName.Contains(".webp") || assetName.Contains(".png") || assetName.Contains(".gif")) {
									@RenderThumbnail(asset)
								}
							}
						</div>
					</div>
				}

				<!-- Main image -->
				<div class="@mainImageColClass">
					<div class="border p-4">
						<div class="@mainAspectRatio" style="@(mainRatioVariable);" data-bs-toggle="modal" data-bs-target="#ImageModal_@Model.ID">
							<img src="@mainSmallImage" id="MainImage_@Model.ID" class="img-fluid" style="object-fit: cover; cursor: pointer" alt="@product.Name" onclick="document.querySelector('#FullImage_@Model.ID').src = this.src">
						</div>
					</div>
				</div>
			</div>

			<!-- Tiny slider -->
			<script type="module">
				var slider = tns({
				container: '#LargeScreenImages_@Model.ID',
				items: 5,
				gutter: 16,
				axis: 'vertical',

				arrowKeys: true,
				nav: false,
				loop: false,
				controls: false
			});
			</script>
		</div>

		<!-- Modal -->
		<div class="modal fade" id="ImageModal_@Model.ID" tabindex="-1" aria-labelledby="@Translate("Full image")" aria-hidden="true">
			<div class="modal-dialog modal-xl">
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="@Translate("Close")"></button>
				</div>
				<div class="modal-body">
					<img src="" alt="" style="object-fit: cover;" id="FullImage_@Model.ID" class="w-100">
				</div>
			</div>
			</div>
		</div>


		@* Show the thumbs on small screens *@
		<div class="d-block d-lg-none mini-product-image-slider">
			<div id="SmallScreenImages_@Model.ID" class="">
				@foreach (MediaViewModel asset in images) {
					var assetName = asset.Value.ToLower(); 
					if (assetName.Contains(".jpg") || assetName.Contains(".webp") || assetName.Contains(".png") || assetName.Contains(".gif")) {
						@RenderImage(asset)
					}
				}
			</div>

			<!-- Tiny slider -->
			<script type="module">
				var slider = tns({
					container: '#SmallScreenImages_@Model.ID',
					items: 1,
					mode: 'carousel',
					navPosition: 'bottom',
					mouseDrag: true,
					touch: true,
					arrowKeys: true,
					nav: true,
					loop: false,
					controls: false,
				});
			</script>
		</div>
	}
</div>


@helper RenderThumbnail(MediaViewModel asset) { 
	string thumbImage = "/Admin/Public/GetImage.ashx?width=200&crop=5&Format=WebP&image=" + asset.Value;

	string ratio = Model.Item?.GetList("ImageAspectRatio")?.SelectedValue != "0" && Model.Item?.GetList("ImageAspectRatio")?.SelectedValue != "" ? Model.Item.GetList("ImageAspectRatio").SelectedValue : "";
	string ratioCssClass = ratio != "" ? "ratio" : "";
	string ratioVariable = ratio != "" ? "--bs-aspect-ratio: " + ratio : "";
	int ratioPercentage = Convert.ToInt32(ratio.Replace("%", ""));
	string imageSizeLarge = ratio != "" ? "width=" + 1920 + "&height=" + ratioPercentage * 1920 / 100 : "width=1920&height=1920";
	string fullImage = "/Admin/Public/GetImage.ashx?" + imageSizeLarge + "&crop=5&fillcanvas=true&Format=WebP&image=" + asset.Value;

	<div class="border ratio ratio-16x9">
		<img loading="lazy" src="@thumbImage" data-full-image="@fullImage" alt="@asset.Name" style="object-fit: cover; cursor: pointer" onclick="document.querySelector('#MainImage_@Model.ID').src = this.getAttribute('data-full-image')">
	</div>
}

@helper RenderImage(MediaViewModel asset) { 
	string ratio = Model.Item?.GetList("ImageAspectRatio")?.SelectedValue != "0" && Model.Item?.GetList("ImageAspectRatio")?.SelectedValue != "" ? Model.Item.GetList("ImageAspectRatio").SelectedValue : "";
	string ratioCssClass = ratio != "" ? "ratio" : "";
	string ratioVariable = ratio != "" ? "--bs-aspect-ratio: " + ratio : "";
	int ratioPercentage = Convert.ToInt32(ratio.Replace("%", ""));
	string imageSizeSmall = ratio != "" ? "width=" + 960 + "&height=" + ratioPercentage * 960 / 100 : "width=960&height=960";
	string imageSizeLarge = ratio != "" ? "width=" + 1920 + "&height=" + ratioPercentage * 1920 / 100 : "width=1920&height=1920";

	string smallImage = "/Admin/Public/GetImage.ashx?" + imageSizeSmall + "&crop=5&fillcanvas=true&Format=WebP&image=" + asset.Value;
	string largeImage = "/Admin/Public/GetImage.ashx?" + imageSizeLarge + "&crop=5&fillcanvas=true&Format=WebP&image=" + asset.Value;

	<div class="@ratioCssClass" style="@(ratioVariable); cursor: pointer;" data-bs-toggle="modal" data-bs-target="#ImageModal_@Model.ID">
		<img loading="lazy" class="img-fluid" src="@smallImage" data-full-image="@largeImage" alt="@asset.Name" style="object-fit: cover;" onclick="document.querySelector('#FullImage_@Model.ID').src = this.getAttribute('data-full-image')">
	</div>
}
