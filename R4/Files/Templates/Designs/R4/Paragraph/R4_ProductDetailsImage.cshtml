@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Ecommerce.ProductCatalog


@{ 
	bool isVisualEditor = !string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.QueryString.Get("VisualEdit")) ? Convert.ToBoolean(Dynamicweb.Context.Current.Request.QueryString.Get("VisualEdit")) : false;

	ProductViewModel product = new ProductViewModel();

	if (Dynamicweb.Context.Current.Items.Contains("ProductDetails"))
	{
		product = (ProductViewModel)Dynamicweb.Context.Current.Items["ProductDetails"];
	}

	//Collect the images
	var selectedImageCategories = Model.Item.GetList("ImageAssets").SelectedValues;
	var images = product.AssetCategories.Where(x => selectedImageCategories.Contains(x.SystemName)).SelectMany(x => x.Assets).Union(product.ImagePatternImages);
	string ratio = Model.Item.GetRawValueString("ImageAspectRatio", "");
	ratio = ratio != "0" ? ratio : "";
	string mainRatioCssClass = ratio != "" ? "ratio" : "";
	string mainRatioVariable = ratio != "" ? "--bs-aspect-ratio: " + ratio : "";
	string mainImagePath = "";

	int totalImages = 0;
	foreach (MediaViewModel asset in images) {
		var assetName = asset.Value.ToLower();
		if (assetName.Contains(".jpg") || assetName.Contains(".webp") || assetName.Contains(".png") || assetName.Contains(".gif")) {
			if (totalImages == 0) {
				mainImagePath = asset.Value;
			}
			totalImages++;
		}
	}

	string mainImageColClass = totalImages > 1 ? "col-10" : "col-12";

	string padding = "";
	string theme = !string.IsNullOrWhiteSpace(Model.Item.GetRawValueString("Theme")) ? " theme " + Model.Item.GetRawValueString("Theme").Replace(" ", "").Trim().ToLower() : "";
	if (theme != "")
	{
		padding = "p-4";
	} 
}


@* Get images from selected categories or get all images *@
@if (totalImages != 0)
{
	string imagePathXs       = "/Admin/Public/GetImage.ashx?width=" + 920 + "&image=" + mainImagePath + "&Format=WebP";
	string imagePathS        = "/Admin/Public/GetImage.ashx?width=" + 1280 + "&image=" + mainImagePath + "&Format=WebP";
	string imagePathM        = "/Admin/Public/GetImage.ashx?width=" + 1420 + "&image=" + mainImagePath + "&Format=WebP";
	string imagePathL        = "/Admin/Public/GetImage.ashx?width=" + 1920 + "&image=" + mainImagePath + "&Format=WebP";
	string imagePathXl       = "/Admin/Public/GetImage.ashx?width=" + 2560 + "&image=" + mainImagePath + "&Format=WebP";
	string imagePathFallBack = "/Admin/Public/GetImage.ashx?width=" + 2560 + "&image=" + mainImagePath + "&Format=PNG";

	@* Show image + thumbs on large screens *@
	<div class="d-none d-lg-block">
		<div class="row g-3">
			@if (totalImages > 1)
			{
				<div class="col-2">
					<div id="LargeScreenImages_@Model.ID">
						@{ 
							int thumbNumber = 0;

							foreach (MediaViewModel asset in images) {
								var assetName = asset.Value.ToLower();
								if (assetName.Contains(".jpg") || assetName.Contains(".webp") || assetName.Contains(".png") || assetName.Contains(".gif")) {
									@RenderThumbnail(asset, product, thumbNumber)

									thumbNumber++;
								}
							}
						}
					</div>
				</div>
			}

			@* Main image *@
			<div class="@mainImageColClass">
				<div class="@(padding)@(theme)">
					<button class="btn @mainRatioCssClass js-product-image" style="@(mainRatioVariable);" data-bs-toggle="modal" data-bs-target="#ImageModal_@Model.ID">
						<div class="d-flex align-items-center justify-content-center">
							<img id="MainImage_@Model.ID" srcset="
									@imagePathXs 320w,
									@imagePathS 640w,
									@imagePathM 1280w,
									@imagePathL 1920w,
									@imagePathXl 2560w"
								sizes="(max-width: 2560px) 480px, 800px"
								src="@imagePathFallBack"
								loading="lazy"
								class="mw-100 mh-100"
								style="cursor: pointer"
								alt="@product.Name"
								data-image-number="0">
						</div>
					</button>
				</div>
			</div>
		</div>

		@* Tiny slider *@
		<script type="module">
			var slider = tns({
				container: '#LargeScreenImages_@Model.ID',
				items: 5.5,
				gutter: 8,
				axis: 'vertical',
				arrowKeys: false,
				nav: false,
				loop: false,
				controls: false,
				lazyload: true
			});
		</script>
	</div>


	@* Modal *@
	<div class="modal fade" id="ImageModal_@Model.ID" tabindex="-1" aria-labelledby="@Translate("Full image")" aria-hidden="true">
		<div class="modal-dialog modal-fullscreen">
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="@Translate("Close")"></button>
				</div>
				<div class="modal-body">
					<div id="FullImages_@Model.ID" class="d-flex align-items-center justify-content-center">
						@foreach (MediaViewModel asset in images) {
							var assetName = asset.Value.ToLower(); 
							if (assetName.Contains(".jpg") || assetName.Contains(".webp") || assetName.Contains(".png") || assetName.Contains(".gif")) {
								string assetPath = !string.IsNullOrEmpty(asset.Value) ? asset.Value : product.DefaultImage.Value;
								string assetPathL        = "/Admin/Public/GetImage.ashx?width=" + 1920 + "&image=" + assetPath + "&Format=WebP";

								<img loading="lazy" src="@assetPathL" alt="@assetName" class="img-fluid">
							}
						}
					</div>
					<script type="module">
						var sliderFull_@(Model.ID) = tns({
							container: '#FullImages_@Model.ID',
							items: 1,
							gutter: 16,
							mode: 'carousel',
							navPosition: 'bottom',
							mouseDrag: true,
							touch: true,
							arrowKeys: true,
							nav: false,
							loop: false,
							controls: false,
						});

						document.querySelectorAll('.js-product-image').forEach(function (imageElement) {
							imageElement.onclick = function (e) {
								var clickedButton = e.currentTarget;
								var slideNumber = clickedButton.querySelector("img").getAttribute("data-image-number");
								sliderFull_@(Model.ID).goTo(slideNumber);
							};
						});
					</script>
				</div>
			</div>
		</div>
	</div>


	@* Show the thumbs on small screens *@
	<div class="d-block d-lg-none">
		<div id="SmallScreenImages_@Model.ID" class="">
			@{ 
				int number = 0;

				foreach (MediaViewModel asset in images) {
					var assetName = asset.Value.ToLower();
					if (assetName.Contains(".jpg") || assetName.Contains(".webp") || assetName.Contains(".png") || assetName.Contains(".gif")) {
						@RenderImage(asset, product, number)

						number++;
					}
				}
			}
		</div>

		@* Tiny slider *@
		<script type="module">
			var slider = tns({
				container: '#SmallScreenImages_@Model.ID',
				items: 1.2,
				gutter: 8,
				mode: 'carousel',
				navPosition: 'bottom',
				mouseDrag: true,
				touch: true,
				arrowKeys: true,
				nav: true,
				loop: false,
				rewind: false,
				controls: false,
			});
		</script>
	</div>
}


@helper RenderThumbnail(MediaViewModel asset, ProductViewModel product, int imageNumber) { 
	string imagePath = !string.IsNullOrEmpty(asset.Value) ? asset.Value : product.DefaultImage.Value;
	string imagePathXs       = "/Admin/Public/GetImage.ashx?width=" + 920 + "&image=" + imagePath + "&Format=WebP";
	string imagePathS        = "/Admin/Public/GetImage.ashx?width=" + 1280 + "&image=" + imagePath + "&Format=WebP";
	string imagePathM        = "/Admin/Public/GetImage.ashx?width=" + 1420 + "&image=" + imagePath + "&Format=WebP";
	string imagePathL        = "/Admin/Public/GetImage.ashx?width=" + 1920 + "&image=" + imagePath + "&Format=WebP";
	string imagePathXl       = "/Admin/Public/GetImage.ashx?width=" + 2560 + "&image=" + imagePath + "&Format=WebP";
	string imagePathFallBack = "/Admin/Public/GetImage.ashx?width=" + 2560 + "&image=" + imagePath + "&Format=PNG";

	<button class="btn p-0 border ratio ratio-16x9" onclick="document.querySelector('#MainImage_@Model.ID').srcset = this.querySelector('img').srcset; document.querySelector('#MainImage_@Model.ID').setAttribute('data-image-number', '@imageNumber')">
		<span class="btn p-0 d-flex align-items-center justify-content-center">
			<img srcset="
				@imagePathXs 320w,
				@imagePathS 640w,
				@imagePathM 1280w,
				@imagePathL 1920w,
				@imagePathXl 2560w"
			sizes="(max-width: 2560px) 480px, 800px"
			src="@imagePathFallBack"
			class="mw-100 mh-100"
			style="cursor: pointer"
			alt="@asset.Name">
		</span>
	</button>
}

@helper RenderImage(MediaViewModel asset, ProductViewModel product, int number) {
	string imagePath = !string.IsNullOrEmpty(asset.Value) ? asset.Value : product.DefaultImage.Value;
	string imagePathXs       = "/Admin/Public/GetImage.ashx?width=" + 920 + "&image=" + imagePath + "&Format=WebP";
	string imagePathS        = "/Admin/Public/GetImage.ashx?width=" + 1280 + "&image=" + imagePath + "&Format=WebP";
	string imagePathM        = "/Admin/Public/GetImage.ashx?width=" + 1420 + "&image=" + imagePath + "&Format=WebP";
	string imagePathL        = "/Admin/Public/GetImage.ashx?width=" + 1920 + "&image=" + imagePath + "&Format=WebP";
	string imagePathXl       = "/Admin/Public/GetImage.ashx?width=" + 2560 + "&image=" + imagePath + "&Format=WebP";
	string imagePathFallBack = "/Admin/Public/GetImage.ashx?width=" + 2560 + "&image=" + imagePath + "&Format=PNG";

	string ratio = Model.Item.GetRawValueString("ImageAspectRatio", "");
	ratio = ratio != "0" ? ratio : "";
	string ratioCssClass = ratio != "" ? "ratio" : "";
	string ratioVariable = ratio != "" ? "--bs-aspect-ratio: " + ratio : "";

	<buttom class="btn @ratioCssClass js-product-image" style="@(ratioVariable); cursor: pointer;" data-bs-toggle="modal" data-bs-target="#ImageModal_@Model.ID">
		<div class="d-flex align-items-center justify-content-center">
			<img id="MainImage_@Model.ID" srcset="
				@imagePathXs 320w,
				@imagePathS 640w,
				@imagePathM 1280w,
				@imagePathL 1920w,
				@imagePathXl 2560w"
			sizes="(max-width: 2560px) 480px, 800px"
			src="@imagePathFallBack"
			loading="lazy"
			class="mw-100 mh-100"
			style="cursor: pointer"
			alt="@asset.Name"
			data-image-number="@number">	
		</div>
	</buttom>
}
