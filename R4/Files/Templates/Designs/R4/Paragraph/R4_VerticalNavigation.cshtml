@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Frontend
@using Dynamicweb.Content.Items
@using Dynamicweb.Frontend.Navigation

@{ 
	var navigationSettings = new NavigationSettings();
	navigationSettings.StartLevel = 1;
	navigationSettings.StopLevel = 10;
	navigationSettings.ExpandMode = ExpandMode.All;
	navigationSettings.Parameters.Add("Layout", Model.Item.GetString("Layout"));
	navigationSettings.Parameters.Add("HideTexts", Model.Item.GetBoolean("HideTexts"));
	navigationSettings.Parameters.Add("HideIcons", Model.Item.GetBoolean("HideIcons"));

	if (!string.IsNullOrEmpty(Model.Item.GetString("NavigationRoot"))) {
		string root = Model.Item.GetString("NavigationRoot");

		if (root.Contains("=")) {
			int rootPageId = Convert.ToInt32(root.Substring(root.LastIndexOf('=') + 1));
			navigationSettings.RootPageId = rootPageId;
		}
		navigationSettings.StartLevel = 2;
	} else {
		navigationSettings.StartLevel = 1;
	}

	string theme = "";
	if (Model.Item?.GetList("Theme")?.SelectedValue != null) {
		if (Model.Item.GetList("Theme").SelectedValue.ToLower() != "theme default")
		{
			theme = Model.Item.GetList("Theme").SelectedValue.ToLower();
			theme = String.Concat(theme.Where(c => !Char.IsWhiteSpace(c)));
			theme = theme.Replace("theme", "");
			theme = "theme theme-" + theme;
		}
	}

	string contentPadding = Model.Item?.GetList("contentPadding")?.SelectedValue != null ? Model.Item.GetList("contentPadding").SelectedValue : "";
}

<div class="@contentPadding @theme h-100">
    @if (!string.IsNullOrEmpty(Model.Item.GetString("Title")) && !Model.Item.GetBoolean("HideTitle"))
    {
        <h3 class="h3">@Model.Item.GetString("Title")</h3>
    }

    @Navigation.RenderNavigation("Navigation/Vertical.cshtml", navigationSettings)
</div>

