@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.ProductCatalog
@using System.Web

@{
    string layout = !string.IsNullOrEmpty(Model.Item.GetString("Layout")) ? Model.Item.GetList("Layout").SelectedValue : "field";
	string horizontalAlign = !string.IsNullOrEmpty(Model.Item.GetString("HorizontalAlignment")) ? " justify-content-" + Model.Item.GetList("HorizontalAlignment").SelectedValue : "";
	string paragraphId = Model.ID.ToString();
}

<div class="d-flex align-items-center h-100 my-auto@(horizontalAlign)">
	@if (layout == "field") {
		@SearchField("normal")
	}

	@if (layout == "small-field") {
		@SearchField("small")
	}

	@if (layout == "icon") {
		<!-- Button trigger modal -->
		<a data-bs-toggle="modal" data-bs-target="#searchModal_@paragraphId">
			<span class="icon-3">
				<svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" fill="currentColor" viewBox="0 0 16 16">
					<path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
				</svg>
			</span>
		</a>

		<!-- Modal -->
		<div class="modal fade theme theme-light" id="searchModal_@paragraphId" tabindex="-1" data-bs-backdrop="false" >
			<div class="modal-dialog modal-fullscreen">
				<div class="modal-content">
					<div class="modal-header justify-content-between">
						<h5 class="modal-title">@Translate("Search")</h5>
						<a data-bs-dismiss="modal" aria-label="Close">
							<span class="icon-3">
								<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" viewBox="0 0 16 16">
									<path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z" />
								</svg>
							</span>
						</a>
					</div>
					<div class="modal-body">
						@SearchField("normal")
					</div>
				</div>
			</div>
		</div>
	}
</div>



@helper SearchField(string size) { 
	string searchResultsPageId = !string.IsNullOrEmpty(Model.Item.GetString("SearchResultsPage")) ? Model.Item.GetString("SearchResultsPage") : "";
	string productListPage = !string.IsNullOrEmpty(Model.Item.GetString("ProductListPage")) ? Model.Item.GetString("ProductListPage") : "";
    string productDetailsPage = !string.IsNullOrEmpty(Model.Item.GetString("ProductDetailsPage")) ? Model.Item.GetString("ProductDetailsPage") : "";
	string width = size == "small" ? "style=\"max-width: 260px\"" : "style=\"width: 100%\"";

	string searchTerm = string.Empty;
	List<string> searchHistory = new List<string>();
	if (HttpContext.Current.Session["_searchHistory"] != null)
	{
		searchHistory = (List<string>)HttpContext.Current.Session["_searchHistory"];
	}
	if (!string.IsNullOrEmpty(Dynamicweb.Context.Current.Request["q"]))
	{
		searchTerm = Dynamicweb.Context.Current.Request["q"];

		if (searchHistory.Contains(searchTerm))
		{
			searchHistory.Remove(searchTerm);
		}
		searchHistory.Add(searchTerm);
		HttpContext.Current.Session.Add("_searchHistory", searchHistory);
	}
	string groupIdQueryParameter = string.Empty;
	if (!string.IsNullOrEmpty(Dynamicweb.Context.Current.Request["GroupID"]))
	{
		groupIdQueryParameter = "&GroupID=" + Dynamicweb.Context.Current.Request["GroupID"].Trim();
	}

	string layout = !string.IsNullOrEmpty(Model.Item.GetString("Layout")) ? Model.Item.GetList("Layout").SelectedValue : "field";
	var dropdownBorder = layout == "field" ? "" : "border-0"; 

	<div class="js-async-fetch-placeholder" @width>
		<div class="dropdown js-type-ahead-dropdown">
			<form method="get" action="@Dynamicweb.Frontend.SearchEngineFriendlyURLs.GetFriendlyUrl(productListPage)" 
				  data-search-results-page="@searchResultsPageId" 
				  data-product-details-page="@Dynamicweb.Frontend.SearchEngineFriendlyURLs.GetFriendlyUrl(productDetailsPage)" 
				  data-product-list-page="@Dynamicweb.Frontend.SearchEngineFriendlyURLs.GetFriendlyUrl(productListPage)" 
				  data-search-layout="@(layout)" class="js-suggest-form">
				<input type="hidden" class="js-type-ahead-parameter" />
				<input type="hidden" name="SearchLayout" value="@(layout)" />
				<input class="input isFocus form-control js-type-ahead-field" type="search" placeholder="@Translate("Search here")" autocomplete="off" maxlength="255" name="q" value="@searchTerm" data-original="@searchTerm">
			</form>
			<div class="dropdown-menu w-100 rounded-0 @dropdownBorder js-type-ahead-menu"></div>
		</div>	
	</div>
}





