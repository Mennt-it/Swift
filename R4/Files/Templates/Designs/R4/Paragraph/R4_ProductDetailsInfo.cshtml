@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.ProductCatalog
@using Dynamicweb.Ecommerce.Products.FieldDisplayGroups
@using Dynamicweb.Frontend
@using System.Web

@{ bool isVisualEditor = !string.IsNullOrEmpty(HttpContext.Current.Request.QueryString.Get("VisualEdit")) ? Convert.ToBoolean(HttpContext.Current.Request.QueryString.Get("VisualEdit")) : false;

	ProductViewModel product = new ProductViewModel();

	if (System.Web.HttpContext.Current.Items.Contains("ProductDetails"))
	{
		product = (ProductViewModel)System.Web.HttpContext.Current.Items["ProductDetails"];
	}

	string url = "/Default.aspx?ID=" + (GetPageIdByNavigationTag("CartService"));
	if (!url.Contains("LayoutTemplate"))
	{
		url += url.Contains("?") ? "&LayoutTemplate=R4_MiniCart.cshtml" : "?LayoutTemplate=R4_MiniCart.cshtml";
	}

	string theme = "";
	if (Model.Item?.GetList("Theme")?.SelectedValue != null)
	{
		if (Model.Item.GetList("Theme").SelectedValue.ToLower() != "theme default")
		{
			theme = Model.Item.GetList("Theme").SelectedValue.ToLower();
			theme = String.Concat(theme.Where(c => !Char.IsWhiteSpace(c)));
			theme = theme.Replace("theme", "");
			theme = "theme theme-" + theme;
		}
	}
}

<div class="@theme">
	<div class="d-flex flex-column">
		<div class="mb-4">
			<h1 class="display-6">@product.Name</h1>
			<div class="text-muted">@product.Number</div>
		</div>
		<div class="mb-4">
			<div class="fs-4 fw-bold">@product.Price.PriceFormatted</div>
		</div>

		@if (!string.IsNullOrEmpty(product.ShortDescription)) {
			<div class="mb-3">
				@product.ShortDescription
			</div>
		}

		<div class="mb-3">
			<form method="post" action="@url">
				<input type="hidden" name="redirect" value="false" />
				<input type="hidden" name="ProductId" value="@product.Id" />
				<input type="hidden" name="cartcmd" value="add" />

				<div class="input-group">
					<input id="Quantity_@product.Id" name="Quantity" value="1" type="hidden">
					<button type="button" onclick="Cart.UpdateCart(event)" class="btn btn-primary" title="@Translate("Add to cart")" id="AddToCartButton@(product.Id)">@Translate("Add to cart")</button>
				</div>
			</form>
		</div>
	</div>
</div>

