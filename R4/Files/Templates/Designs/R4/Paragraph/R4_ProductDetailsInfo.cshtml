@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Ecommerce.ProductCatalog

@{ bool isVisualEditor = !string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.QueryString.Get("VisualEdit")) ? Convert.ToBoolean(Dynamicweb.Context.Current.Request.QueryString.Get("VisualEdit")) : false;

	ProductViewModel product = new ProductViewModel();

	if (Dynamicweb.Context.Current.Items.Contains("ProductDetails"))
	{
		product = (ProductViewModel)Dynamicweb.Context.Current.Items["ProductDetails"];
	}

	string url = "/Default.aspx?ID=" + (GetPageIdByNavigationTag("CartService"));
	if (!url.Contains("LayoutTemplate"))
	{
		url += url.Contains("?") ? "&LayoutTemplate=R4_MiniCart.cshtml" : "?LayoutTemplate=R4_MiniCart.cshtml";
	}

	string theme = !string.IsNullOrEmpty(Model.Item.GetString("Theme")) ? Model.Item.GetString("Theme").ToLower() : "";
	if (theme != "theme default" && theme != "")
	{
		theme = String.Concat(theme.Where(c => !Char.IsWhiteSpace(c)));
		theme = theme.Replace("theme", "");
		theme = " theme theme-" + theme;
	} else {
		theme = "";
	}
}

<div class="d-flex flex-column@(theme)">
	<div class="mb-4">
		<h1 class="display-6">@product.Name</h1>
		<div class="text-muted">@product.Number</div>
	</div>
	<div class="mb-4">
		<div class="fs-4 fw-bold">
			<span class="text-price">@product.Price.PriceFormatted</span>
		</div>
		@if (product.Price.Price != product.PriceBeforeDiscount.Price) {
			<div class="text-decoration-line-through text-muted">
				@product.PriceBeforeDiscount.PriceFormatted
			</div>
		}
	</div>

	@if (!string.IsNullOrEmpty(product.ShortDescription)) {
		<div class="mb-4">
			@product.ShortDescription
		</div>
	}

	<form method="post" action="@url" class="mb-3 d-flex flex-row">
		<input type="hidden" name="redirect" value="false" />
		<input type="hidden" name="ProductId" value="@product.Id" />
		<input type="hidden" name="cartcmd" value="add" />

		<div class="input-group flex-fill">
			<input id="Quantity_@product.Id" name="Quantity" value="1" type="hidden">
			<button type="button" onclick="Cart.UpdateCart(event)" class="btn btn-primary w-100" title="@Translate("Add to cart")" id="AddToCartButton@(product.Id)">@Translate("Add to cart")</button>
		</div>
	</form>

	@if (product.StockLevel > 0) {
		<small class="text-success">@product.StockLevel @Translate("Products available in stock")</small>
	} else {
		<small class="text-danger">@Translate("Out of Stock")</small>
	}
</div>

