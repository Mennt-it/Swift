@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Frontend
@using Dynamicweb.Content.Items
@using Dynamicweb.Frontend.Navigation

@{ 
	string paragraphId = Model.ID.ToString();

	string horizontalAlign = !string.IsNullOrEmpty(Model.Item.GetString("HorizontalAlignment")) ? "justify-content-" + Model.Item.GetList("HorizontalAlignment").SelectedValue : "";

	var mainNavigationSettings = new NavigationSettings();
	mainNavigationSettings.StartLevel = 1;
	mainNavigationSettings.StopLevel = 10;
	mainNavigationSettings.ExpandMode = ExpandMode.All;
	mainNavigationSettings.Parameters.Add("NavType", "first-nav");

	if (!string.IsNullOrEmpty(Model.Item.GetString("MainNavigationRoot"))) {
		string root = Model.Item.GetString("MainNavigationRoot");

		if (root.Contains("=")) {
			int rootPageId = Convert.ToInt32(root.Substring(root.LastIndexOf('=') + 1));
			mainNavigationSettings.RootPageId = rootPageId;
		}
		mainNavigationSettings.StartLevel = 2;
	} else {
		mainNavigationSettings.StartLevel = 1;
	}


	var secondaryNavigationSettings = new NavigationSettings();
	secondaryNavigationSettings.StartLevel = 1;
	secondaryNavigationSettings.StopLevel = 10;
	secondaryNavigationSettings.ExpandMode = ExpandMode.All;
	secondaryNavigationSettings.Parameters.Add("NavType", "second-nav");

	if (!string.IsNullOrEmpty(Model.Item.GetString("SecondaryNavigationRoot"))) {
		string root = Model.Item.GetString("SecondaryNavigationRoot");

		if (root.Contains("=")) {
			int rootPageId = Convert.ToInt32(root.Substring(root.LastIndexOf('=') + 1));
			secondaryNavigationSettings.RootPageId = rootPageId;
		}
	} 


	var utilityNavigationSettings = new NavigationSettings();
	utilityNavigationSettings.StartLevel = 1;
	utilityNavigationSettings.StopLevel = 10;
	utilityNavigationSettings.ExpandMode = ExpandMode.All;

	if (!string.IsNullOrEmpty(Model.Item.GetString("UtilityNavigationRoot"))) {
		string root = Model.Item.GetString("UtilityNavigationRoot");

		if (root.Contains("=")) {
			int rootPageId = Convert.ToInt32(root.Substring(root.LastIndexOf('=') + 1));
			utilityNavigationSettings.RootPageId = rootPageId;
		}
	}

	string theme = "";
	if (Model.Item?.GetList("Theme")?.SelectedValue != null) {
		if (Model.Item.GetList("Theme").SelectedValue.ToLower() != "theme default")
		{
			theme = Model.Item.GetList("Theme").SelectedValue.ToLower();
			theme = String.Concat(theme.Where(c => !Char.IsWhiteSpace(c)));
			theme = theme.Replace("theme", "");
			theme = "theme theme-" + theme;
		}
	}
}


<div class="item d-flex align-items-center @horizontalAlign @theme h-100 p-2">
	<a class="toggle dw-icon-size-4" href="#" id="OffsetmenuToggle_@(paragraphId)" role="button" aria-label="Open Menu" aria-controls="hc-nav-1" aria-expanded="false">
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg>
	</a>

	<nav id="MobileNavigation_@(paragraphId)">
		@Navigation.RenderNavigation("Navigation/MobileNavigation.cshtml", mainNavigationSettings)

		@if (!string.IsNullOrEmpty(Model.Item.GetString("SecondaryNavigationRoot"))) {
			@Navigation.RenderNavigation("Navigation/MobileNavigation.cshtml", secondaryNavigationSettings)
		}

		@if (!string.IsNullOrEmpty(Model.Item.GetString("UtilityNavigationRoot"))) {
			@Navigation.RenderNavigation("Navigation/MobileUtilityNavigation.cshtml", utilityNavigationSettings)
		}
	</nav>

	<script>
		document.addEventListener('DOMContentLoaded', function() {
			var Nav = new hcOffcanvasNav('#MobileNavigation_@(paragraphId)', {
				customToggle: '#OffsetmenuToggle_@(paragraphId)',
				navTitle: '@Translate("Home")',
				levelTitleAsBack: true,
				insertClose: true,
				levelSpacing: 0,
				disableBody: true
			});
		});
	</script>
</div>



