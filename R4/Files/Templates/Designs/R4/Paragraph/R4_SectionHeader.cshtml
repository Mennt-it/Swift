@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Frontend

@{ 
	string layout = Model.Item?.GetList("Layout")?.SelectedValue != null ? Model.Item.GetList("Layout").SelectedValue : "align-left";

	string theme = "";
	if (Model.Item?.GetList("Theme")?.SelectedValue != null) {
		if (Model.Item.GetList("Theme").SelectedValue.ToLower() != "theme default")
		{
			theme = Model.Item.GetList("Theme").SelectedValue.ToLower();
			theme = String.Concat(theme.Where(c => !Char.IsWhiteSpace(c)));
			theme = theme.Replace("theme", "");
			theme = "theme theme-" + theme;
		}
	}

	string contentPadding = Model.Item.GetBoolean("ContentPadding") ? "p-5 p-md-4" : "";
}

<div class="h-100 @contentPadding @theme">

	@switch (layout)
	{
		case "text-start":
			<div class="text-start">
				@RenderLead()
				@RenderTitle()
			</div>
		break;
		case "text-center":
			<div class="text-center">
				@RenderLead()
				@RenderTitle()
			</div>
		break;
		case "text-end":
			<div class="text-end">
				@RenderLead()
				@RenderTitle()
			</div>
		break;
		case "text-start-padding":
			<div class="text-start pt-5 pb-2 pt-lg-6 pb-lg-4">
				@RenderLead()
				@RenderTitle()
			</div>
		break;
		case "text-center-padding":
			<div class="text-center pt-5 pb-2 pt-lg-6 pb-lg-4">
				@RenderLead()
				@RenderTitle()
			</div>
		break;
		case "text-end-padding":
			<div class="text-end pt-5 pb-2 pt-lg-6 pb-lg-4">
				@RenderLead()
				@RenderTitle()
			</div>
		break;
	}
</div>

@helper RenderLead()
{
	if (!string.IsNullOrEmpty(Model.Item.GetString("Lead")))
	{
		<span class="lead d-block mb-2">@Model.Item.GetString("Lead")</span>
	}
}

@helper RenderTitle()
{
	if (!string.IsNullOrEmpty(Model.Item.GetString("Title")))
	{
		<h2 class="display-4">@Model.Item.GetString("Title")</h2>
	}
}
