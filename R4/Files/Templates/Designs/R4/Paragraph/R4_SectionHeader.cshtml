@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Frontend

@{ 
	string layout = Model.Item?.GetList("Layout")?.SelectedValue != null ? Model.Item.GetList("Layout").SelectedValue : "align-left";
	string contentPadding = Model.Item?.GetList("contentPadding")?.SelectedValue != null ? Model.Item.GetList("contentPadding").SelectedValue : "";

	string theme = "";
	if (Model.Item?.GetList("Theme")?.SelectedValue != null) {
		if (Model.Item.GetList("Theme").SelectedValue.ToLower() != "theme default")
		{
			theme = Model.Item.GetList("Theme").SelectedValue.ToLower();
			theme = String.Concat(theme.Where(c => !Char.IsWhiteSpace(c)));
			theme = theme.Replace("theme", "");
			theme = "theme theme-" + theme;
		}
	}
}

<div class="h-100 @contentPadding @theme">

	@switch (layout)
	{
		case "text-start":
			<div class="d-flex flex-column align-items-start h-100 text-start">
				@RenderLead()
				@RenderTitle()
			</div>
		break;
		case "text-center":
			<div class="d-flex flex-column align-items-center h-100 text-center">
				@RenderLead()
				@RenderTitle()
			</div>
		break;
		case "text-end":
			<div class="d-flex flex-column align-items-end h-100 text-end">
				@RenderLead()
				@RenderTitle()
			</div>
		break;
		case "text-start-padding":
			<div class="d-flex flex-column align-items-start h-100 text-start pt-5 pb-2 pt-lg-6 pb-lg-4">
				@RenderLead()
				@RenderTitle()
			</div>
		break;
		case "text-center-padding":
			<div class="d-flex flex-column align-items-center h-100 text-center pt-5 pb-2 pt-lg-6 pb-lg-4">
				@RenderLead()
				@RenderTitle()
			</div>
		break;
		case "text-end-padding":
			<div class="d-flex flex-column align-items-end h-100 text-end pt-5 pb-2 pt-lg-6 pb-lg-4">
				@RenderLead()
				@RenderTitle()
			</div>
		break;
	}
</div>

@helper RenderLead()
{

	if (!string.IsNullOrEmpty(Model.Item.GetString("Lead")))
	{
		string subtitleFontSize = Model.Item?.GetList("SubtitleFontSize")?.SelectedValue != null ? Model.Item.GetList("SubtitleFontSize").SelectedValue : "fs-5";

		<span class="@subtitleFontSize lead d-block mb-2 max-w-75ch">@Model.Item.GetString("Lead")</span>
	}
}

@helper RenderTitle()
{

	if (!string.IsNullOrEmpty(Model.Item.GetString("Title")))
	{
		string titleFontSize = Model.Item?.GetList("TitleFontSize")?.SelectedValue != null ? Model.Item.GetList("TitleFontSize").SelectedValue : "display-4";

		<h2 class="@titleFontSize">@Model.Item.GetString("Title")</h2>
	}
}
