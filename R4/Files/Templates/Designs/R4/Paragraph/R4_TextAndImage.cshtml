@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Frontend

@{ 
	string layout = Model.Item?.GetList("Layout")?.SelectedValue != "" ? Model.Item.GetList("Layout").SelectedValue : "image-top";
}

@switch (layout) {
    case "image-top":
        <div class="d-flex flex-column h-100">
            @RenderImage()
            <div class="d-flex flex-column h-100">
                <div class="max-w-700px flex-fill">
                    @RenderTitle()
                    @RenderLead()
                    @RenderText()
                </div>
                @RenderButton()
            </div>
        </div>
    break;

    case "title-top":
        <div class="d-flex flex-column h-100">
            @RenderTitle()
            @RenderImage()
            <div class="d-flex flex-column h-100">
                <div class="max-w-700px flex-fill">
                    @RenderLead()
                    @RenderText()
                </div>
                @RenderButton()
            </div>
        </div>
    break;

    case "title-lead-top":
        <div class="d-flex flex-column h-100">
            @RenderTitle()
            <div class="mb-3">
                @RenderLead()
            </div>
            @RenderImage()
            <div class="d-flex flex-column h-100">
                <div class="max-w-700px flex-fill">
                    @RenderText()
                </div>
                @RenderButton()
            </div>
        </div>
    break;

    case "text-center":
        <div class="d-flex flex-column h-100 text-center">
            @RenderImage()
            <div class="d-flex flex-column h-100">
                <div class="max-w-700px flex-fill">
                    @RenderTitle()
                    @RenderLead()
                    @RenderText()
                </div>
                @RenderButton()
            </div>
        </div>
    break;
} 


@helper RenderImage() { 
    if (Model.Item.GetString("Image") != null)
    {
        string imagePath = Model.Item?.GetFile("Image")?.Path ?? "";
        imagePath = "/Admin/Public/GetImage.ashx?width=" + 1920 + "&height=" + 845 + "&image=" + imagePath + "&Format=WebP&Quality=100";

        int xPos = Model.Item?.GetItem("Content")?.GetFile("Image")?.FocalPositionFromLeft ?? 50;
        int yPos = Model.Item?.GetItem("Content")?.GetFile("Image")?.FocalPositionFromTop ?? 50;

        <figure class="ratio ratio-16x9">
            <img loading="lazy" src="@imagePath" alt="Background Image" style="object-fit: cover;">
        </figure>
    }
}

@helper RenderTitle() { 
    if (!string.IsNullOrEmpty(Model.Item.GetString("Title")) && !Model.Item.GetBoolean("HideTitle"))
    {
        <h3 class="h3">@Model.Item.GetString("Title")</h3>
    }
}

@helper RenderLead() { 
    if (!string.IsNullOrEmpty(Model.Item.GetString("Lead")))
    {
        <div class="lead">@Model.Item.GetString("Lead")</div>
    }
}

@helper RenderText() { 
    if (!string.IsNullOrEmpty(Model.Item.GetString("Text")))
    {
        @Model.Item.GetString("Text")
    }
}

@helper RenderButton() { 
    if (!string.IsNullOrEmpty(Model.Item.GetString("ButtonLink")) && !string.IsNullOrEmpty(Model.Item.GetString("ButtonLabel")))
    {
        <div class="mb-3">
            <a href="@Model.Item.GetString("ButtonLink")" class="btn btn-primary">@Model.Item.GetString("ButtonLabel")</a>
        </div>
    }
}
