@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Rendering
@using Dynamicweb.Frontend.Navigation
@using Dynamicweb.Ecommerce.ProductCatalog
@using System.Web

@{
	bool isVisualEditor = !string.IsNullOrEmpty(HttpContext.Current.Request.QueryString.Get("VisualEdit")) ? Convert.ToBoolean(HttpContext.Current.Request.QueryString.Get("VisualEdit")) : false;
	string searchParameter = !string.IsNullOrEmpty(HttpContext.Current.Request.QueryString.Get("q")) ? HttpContext.Current.Request.QueryString.Get("q") : "";

	ProductListViewModel productList = new ProductListViewModel();

    if (System.Web.HttpContext.Current.Items.Contains("ProductList"))
    {
        productList = (ProductListViewModel)System.Web.HttpContext.Current.Items["ProductList"];
    }

	var navigationSettings = new NavigationSettings();
	navigationSettings.StartLevel = 2;
	navigationSettings.ExpandMode = ExpandMode.Path;

	string breadcrumbContent = Navigation.RenderNavigation("Navigation/ProductGroupHeader.cshtml", navigationSettings);
	breadcrumbContent = searchParameter != "" ? "<h1 class=\"h1\">" + Translate("Search results for") + ": " + searchParameter + "</h1>" : breadcrumbContent;

	string theme = "";
	if (Model.Item?.GetList("Theme")?.SelectedValue != null) {
		if (Model.Item.GetList("Theme").SelectedValue.ToLower() != "theme default")
		{
			theme = Model.Item.GetList("Theme").SelectedValue.ToLower();
			theme = String.Concat(theme.Where(c => !Char.IsWhiteSpace(c)));
			theme = theme.Replace("theme", "");
			theme = "theme theme-" + theme;
		}
	}
}

@if (!string.IsNullOrEmpty(breadcrumbContent))
{
	<div class="@theme">
		<div class="row">
			<div class="col-sm-12 col-lg-9">
				@breadcrumbContent
			</div>
			<div class="col-sm-12 col-lg-3 text-lg-end mb-3 mb-lg-0">
				@productList.TotalProductsCount @Translate("products")
			</div>
		</div>
	</div>
}
else if (isVisualEditor)
{
	<div class="alert alert-dark m-0" role="alert">
		<span><i class="fas fa-info-circle mr-3"></i></span> <span>@Translate("Product list header: The header will be shown here, if any")</span>
	</div>
}
