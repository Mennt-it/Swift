@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Frontend.Navigation
@using Dynamicweb.Ecommerce.ProductCatalog
@using Dynamicweb.Environment

@{
	bool isVisualEditor = Dynamicweb.Context.Current.Request.GetBoolean("visualedit");
	string searchParameter = Dynamicweb.Context.Current.Request.GetString("q");

	ProductListViewModel productList = new ProductListViewModel();

	if (Dynamicweb.Context.Current.Items.Contains("ProductList"))
	{
		productList = (ProductListViewModel)Dynamicweb.Context.Current.Items["ProductList"];
	}

	var navigationSettings = new NavigationSettings();
	navigationSettings.StartLevel = 2;
	navigationSettings.ExpandMode = ExpandMode.Path;

	string breadcrumbContent = Navigation.RenderNavigation("Navigation/ProductGroupHeader.cshtml", navigationSettings);
	breadcrumbContent = searchParameter != "" ? "<h1 class=\"h1\">" + Translate("Search results for") + ": " + searchParameter + "</h1>" : breadcrumbContent;

	string theme = Model.Item.GetRawValueString("Theme").ToLower();
	<h5>@theme</h5>
	if (theme != "theme default" && theme != "")
	{
		theme = String.Concat(theme.Where(c => !Char.IsWhiteSpace(c)));
		theme = theme.Replace("theme", "");
		theme = " theme theme-" + theme;
	}
	else
	{
		theme = "";
	}
}

@if (!string.IsNullOrEmpty(breadcrumbContent))
{
	<div class="row@(theme)" >
		<div class="col-12 col-lg-9">
			@breadcrumbContent
		</div>
		<div class="col-12 col-lg-3 text-lg-end mb-3 mb-lg-0">
			@productList.TotalProductsCount @Translate("products")
		</div>
	</div>
}
else if (isVisualEditor)
{
	<div class="alert alert-dark m-0" role="alert">
		<span>@Translate("Product list header: The header will be shown here, if any")</span>
	</div>
}
