@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.ProductCatalog
@using System.Web

@{
	ProductListViewModel productList = new ProductListViewModel();

	if (System.Web.HttpContext.Current.Items.Contains("ProductList"))
	{
		productList = (ProductListViewModel)System.Web.HttpContext.Current.Items["ProductList"];
	}

	string url = HttpContext.Current.Request.RawUrl;
	if (!url.Contains("LayoutTemplate"))
	{
		url += url.Contains("?") ? "&LayoutTemplate=R4_PageClean.cshtml" : "?LayoutTemplate=R4_PageClean.cshtml";
	}

	int pageSize = productList.PageSize;

	string sortBySelection = HttpContext.Current.Request?.Form["SortBy"] ?? "name";
	string nameSelected = sortBySelection == "name" ? "selected" : "";
	string priceSelected = sortBySelection == "price" ? "selected" : "";
}

<div class="item">
	<form method="post" action="@url" data-response-target-element="content" class="w-100">
		@foreach (FacetGroupViewModel facetGroup in productList.FacetGroups)
		{
			foreach (FacetViewModel facetItem in facetGroup.Facets)
			{
				foreach (FacetOptionViewModel facetOption in facetItem.Options)
				{
					if (facetOption.Selected)
					{
						<input type="hidden" name="@facetItem.QueryParameter" value="[@facetOption.Value]" />
					}
				}
			}
		}

		<input type="hidden" name="PageSize" value="@pageSize" />
		<div class="d-flex justify-content-end align-items-center">
			<label for="ProductListSortSelectorLabel" class="form-label me-3 mb-0">@Translate("Sort")</label>
			<select class="form-select rounded-0" id="ProductListSortSelectorLabel" aria-label="@Translate("Sort")" name="SortBy" onchange="ProductList.Update(event)">
				<option value="price" @priceSelected>@Translate("Price")</option>
				<option value="name" @nameSelected>@Translate("Name")</option>
			</select>
		</div>
	</form>
</div>
