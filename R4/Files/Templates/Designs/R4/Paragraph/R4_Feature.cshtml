@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Frontend
@using System.IO
@using System.Web

@{
	string layout = Model.Item?.GetList("Layout")?.SelectedValue != null ? Model.Item.GetList("Layout").SelectedValue : "icon-top";

	string theme = "";
	if (Model.Item?.GetList("Theme")?.SelectedValue != null)
	{
		if (Model.Item.GetList("Theme").SelectedValue.ToLower() != "theme default")
		{
			theme = Model.Item.GetList("Theme").SelectedValue.ToLower();
			theme = String.Concat(theme.Where(c => !Char.IsWhiteSpace(c)));
			theme = theme.Replace("theme", "");
			theme = "theme theme-" + theme;
		}
	}

	string contentPadding = Model.Item.GetBoolean("ContentPadding") ? "p-3 p-md-4" : "";
}

<div class="card rounded-0 border-0 h-100 @theme">
	@switch (layout)
	{
		case "icon-top":
			<div class="card-body p-0 d-flex flex-column align-items-center h-100 overflow-hidden text-center @contentPadding">
				@RenderIcon()
				@RenderTitle()
				@RenderBody()
			</div>
			break;
		case "icon-left":
			<div class="card-body p-0 d-flex flex-row h-100 overflow-hidden text-start @contentPadding">
				@RenderIcon()
				<div class="d-flex flex-column w-100 h-100">
					@RenderTitle()
					@RenderBody()
				</div>
			</div>
			break;
		case "icon-right":
			<div class="card-body p-0 d-flex flex-row h-100 overflow-hidden text-end @contentPadding">
				<div class="d-flex flex-column w-100 h-100">
					@RenderTitle()
					@RenderBody()
				</div>
				@RenderIcon()
			</div>
			break;
	}
</div>


@helper RenderIcon()
{
	if (Model.Item.GetString("Icon") != null)
	{
		string imagePath = Model.Item?.GetList("Icon")?.SelectedValue ?? "";

		if (!imagePath.ToLower().Contains("none") && imagePath != "")
		{
			if (Path.GetExtension(imagePath).ToLower() == ".svg")
			{
				imagePath = HttpContext.Current.Server.MapPath(imagePath);

				if (File.Exists(imagePath)) {
					<div class="svg-icon dw-icon-size-4" style="flex: 0 0 3rem;">
						@System.IO.File.ReadAllText(imagePath)
					</div>
				}
			}
			else
			{
				imagePath = "/Admin/Public/GetImage.ashx?width=" + 32 + "&height=" + 32 + "&image=" + imagePath + "&Format=WebP&Quality=100";

				<picture class="mb-2 mx-auto d-block" width="32" height="32">
					<img loading="lazy" src="@imagePath" title="@Model.Item.GetString("Title")" />
				</picture>
			}
		}
	}
}

@helper RenderTitle()
{
	if (!string.IsNullOrEmpty(Model.Item.GetString("Title")) && !Model.Item.GetBoolean("HideTitle"))
	{
		<h4 class="h4">@Model.Item.GetString("Title")</h4>
	}
}

@helper RenderBody()
{
	if (!string.IsNullOrEmpty(Model.Item.GetString("Text")))
	{
		<p class="m-0">@Model.Item.GetString("Text")</p>
	}
}
