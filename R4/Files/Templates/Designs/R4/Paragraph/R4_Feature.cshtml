@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Frontend
@using System.IO
@using System.Web

@{
	string layout = Model.Item?.GetList("Layout")?.SelectedValue != "" ? Model.Item.GetList("Layout").SelectedValue : "icon-top";
	string theme = Model.Item?.GetList("Theme")?.SelectedValue != "" ? Model.Item.GetList("Theme").SelectedValue.ToLower() : "";
	theme = String.Concat(theme.Where(c => !Char.IsWhiteSpace(c)));
	theme = theme.Replace("theme", "");
}

<div class="card rounded-0 border-0 h-100 theme theme-@theme">
	@switch (layout)
	{
		case "icon-top":
		<div class="card-body p-4 d-flex flex-column align-items-center h-100 overflow-hidden text-center">

			<div class="svg-icon dw-icon-size-4">
				@RenderIcon()
			</div>
				@RenderTitle()
				@RenderBody()

		</div>
		break;
		case "icon-left":
		<div class="card-body p-4 d-flex h-100 overflow-hidden text-start">

			<div class="svg-icon dw-icon-size-3 mt-3 me-4">
				@RenderIcon()
			</div>
			<div class="flex-fill">
				@RenderTitle()
				@RenderBody()
			</div>
		</div>
		break;
		case "icon-right":
		<div class="card-body d-flex h-100 overflow-hidden p-4 text-end">

			<div class="flex-fill">
				@RenderTitle()
				@RenderBody()
			</div>
			<div class="svg-icon dw-icon-size-3 mt-3 ms-4">
				@RenderIcon()
			</div>

		</div>
		break;
	}
</div>


@helper RenderIcon()
{
	if (Model.Item.GetString("Icon") != null)
	{
		string imagePath = Model.Item?.GetList("Icon")?.SelectedValue ?? "";

		if (!imagePath.ToLower().Contains("none"))
		{
			if (Path.GetExtension(imagePath).ToLower() == ".svg")
			{
				@System.IO.File.ReadAllText(HttpContext.Current.Server.MapPath(imagePath))

			}
			else
			{
				imagePath = "/Admin/Public/GetImage.ashx?width=" + 32 + "&height=" + 32 + "&image=" + imagePath + "&Format=WebP&Quality=100";

				<picture class="mb-2 mx-auto d-block" width="32" height="32">
					<img loading="lazy" src="@imagePath" title="@Model.Item.GetString("Title")" />
				</picture>	
			}
        }
	}
}

@helper RenderTitle()
{
	if (!string.IsNullOrEmpty(Model.Item.GetString("Title")) && !Model.Item.GetBoolean("HideTitle"))
	{
		<h4 class="h4 mt-3">@Model.Item.GetString("Title")</h4>
	}
}

@helper RenderBody()
{
	if (!string.IsNullOrEmpty(Model.Item.GetString("Text")))
	{
		<p class="mt-3">@Model.Item.GetString("Text")</p>
	}
}
