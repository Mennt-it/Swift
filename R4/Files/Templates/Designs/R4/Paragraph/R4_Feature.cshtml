@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Frontend
@using System.IO
@using System.Web

@{
    string layout = Model.Item?.GetList("Layout")?.SelectedValue != "" ? Model.Item.GetList("Layout").SelectedValue : "icon-top";
}

@switch (layout)
{
    case "icon-top":
        <div class="feature-block feature-block--icon-top">

            <div class="feature-block__icon">
                @RenderIcon()
            </div>

            <div class="feature-block__heading">
                @RenderTitle()
            </div>

            <div class="feature-block__body">
                @RenderBody()
            </div>

        </div>
        break;
    case "icon-left":
        <div class="feature-block feature-block--icon-left">

            <div class="feature-block__icon">
                @RenderIcon()
            </div>

            <div class="feature-block__heading">
                @RenderTitle()
            </div>

            <div class="feature-block__body">
                @RenderBody()
            </div>

        </div>
        break;
    case "icon-right":
        <div class="feature-block feature-block--icon-right">

            <div class="feature-block__icon">
                @RenderIcon()
            </div>

            <div class="feature-block__heading">
                @RenderTitle()
            </div>

            <div class="feature-block__body">
                @RenderBody()
            </div>

        </div>
        break;
    case "icon-background":
        <div class="feature-block feature-block--icon-background">

            <div class="feature-block__icon">
                @RenderIcon()
            </div>

            <div class="feature-block__heading">
                @RenderTitle()
            </div>

            <div class="feature-block__body">
                @RenderBody()
            </div>

        </div>
        break;
}

@helper RenderIcon() {
    if (Model.Item.GetString("Icon") != null)
    {
        string imagePath = Model.Item?.GetList("Icon")?.SelectedValue ?? "";

        if (Path.GetExtension(imagePath).ToLower() == ".svg")
        {
@System.IO.File.ReadAllText(HttpContext.Current.Server.MapPath(imagePath))
        }
        else
        {
            imagePath = "/Admin/Public/GetImage.ashx?width=" + 26 + "&height=" + 26 + "&image=" + imagePath + "&Format=WebP&Quality=100";

<picture class="mb-2 mx-auto d-block" width="26" height="26">
    <img loading="lazy" src="@imagePath" title="@Model.Item.GetString("Title")" />
</picture>
        }
    }
}

@helper RenderTitle() {
if (!string.IsNullOrEmpty(Model.Item.GetString("Title")) && !Model.Item.GetBoolean("HideTitle"))
    {
<h4 class="h4">@Model.Item.GetString("Title")</h4>
    }
}

@helper RenderBody() {
if (!string.IsNullOrEmpty(Model.Item.GetString("Text")))
    {
<p>@Model.Item.GetString("Text")</p>
    }
}
