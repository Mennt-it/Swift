@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Ecommerce.ProductCatalog
@using Dynamicweb.Environment

@{
	bool isVisualEditor = Dynamicweb.Context.Current.Request.GetBoolean("visualedit");

	ProductListViewModel productList = new ProductListViewModel();

	if (Dynamicweb.Context.Current.Items.Contains("ProductList"))
	{
		productList = (ProductListViewModel)Dynamicweb.Context.Current.Items["ProductList"];
	}

	string detailsPageLink = Dynamicweb.Context.Current.Items["DetailsPageLink"] != null ? Dynamicweb.Context.Current.Items["DetailsPageLink"].ToString() : "";

	string theme = !string.IsNullOrEmpty(Model.Item.GetString("Theme")) ? Model.Item.GetString("Theme").ToLower() : "";
	if (theme != "theme default" && theme != "")
	{
		theme = String.Concat(theme.Where(c => !Char.IsWhiteSpace(c)));
		theme = theme.Replace("theme", "");
		theme = " theme theme-" + theme;
	}
	else
	{
		theme = "";
	}

	string textPadding = theme != "" ? "px-2 px-lg-3 pb-2 pb-lg-3" : "";

	string url = Dynamicweb.Context.Current.Request.RawUrl;
	if (!url.Contains("LayoutTemplate"))
	{
		url += url.Contains("?") ? "&LayoutTemplate=R4_PageClean.cshtml" : "?LayoutTemplate=R4_PageClean.cshtml";
	}

	string groupId = !string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.QueryString.Get("GroupID")) ? Dynamicweb.Context.Current.Request.QueryString.Get("GroupID") : "";
}

@if (productList.TotalProductsCount > 0)
{
	int pageSizeSetting = 30;
	int pageSize = productList.PageSize;
	pageSize += pageSizeSetting;

	int loadedProducts = productList.PageSize > productList.TotalProductsCount ? productList.TotalProductsCount : productList.PageSize;

	<div class="row g-4 mt-n4 mb-5 border-bottom">
		@foreach (ProductViewModel product in productList.Products)
		{
			string link = detailsPageLink + "&amp;ProductID=" + product.Id;
			link += !string.IsNullOrEmpty(product.VariantId) ? "&amp;VariantID=" + product.VariantId : "";
			string price = product?.Price?.PriceFormatted ?? "";
			string imagePath = product?.DefaultImage?.Value ?? "";
			imagePath = Dynamicweb.Context.Current.Server.UrlEncode(imagePath);

			string ratio = Model.Item?.GetList("ImageAspectRatio")?.SelectedValue != "0" && Model.Item?.GetList("ImageAspectRatio")?.SelectedValue != "" ? Model.Item.GetList("ImageAspectRatio").SelectedValue : "";
			string ratioCssClass = ratio != "" ? " ratio" : "";
			string ratioVariable = ratio != "" ? "--bs-aspect-ratio: " + ratio : "";

			string imagePathXs = "/Admin/Public/GetImage.ashx?width=" + 320 + "&image=" + imagePath + "&Format=WebP&Quality=90";
			string imagePathS = "/Admin/Public/GetImage.ashx?width=" + 640 + "&image=" + imagePath + "&Format=WebP&Quality=90";
			string imagePathM = "/Admin/Public/GetImage.ashx?width=" + 1280 + "&image=" + imagePath + "&Format=WebP&Quality=90";
			string imagePathL = "/Admin/Public/GetImage.ashx?width=" + 1920 + "&image=" + imagePath + "&Format=WebP&Quality=90";
			string imagePathXl = "/Admin/Public/GetImage.ashx?width=" + 2560 + "&image=" + imagePath + "&Format=WebP&Quality=90";
			string imagePathFallBack = "/Admin/Public/GetImage.ashx?width=" + 2560 + "&image=" + imagePath + "&Format=WebP&Quality=90";

			string imageTheme = !string.IsNullOrEmpty(Model.Item.GetString("ImageTheme")) ? Model.Item.GetString("ImageTheme").ToLower() : "";
			if (imageTheme != "theme default" && imageTheme != "")
			{
				imageTheme = String.Concat(imageTheme.Where(c => !Char.IsWhiteSpace(c)));
				imageTheme = imageTheme.Replace("theme", "");
				imageTheme = " theme theme-" + imageTheme;
			}
			else
			{
				imageTheme = "";
			}

			string imagePadding = imageTheme != "" || theme != "" ? "p-2 p-lg-3" : "";

			string imageId = "ProductImage_" + product.Id + product.VariantId;
			string priceId = "ProductPrice_" + product.Id + product.VariantId;

			<div class="col-6 col-lg-4 pb-3 pb-lg-5">
				<div class="d-flex flex-column h-100@(theme) overflow-hidden">
					<a href="@link" title="@product.Name">
						<div class="@(ratioCssClass)@(imageTheme) mb-3" style="@(ratioVariable)">
							<div class="d-flex align-items-center justify-content-center">
								<img id="@imageId"
									 srcset="
										@imagePathXs 320w,
										@imagePathS 640w,
										@imagePathM 1280w,
										@imagePathL 1920w,
										@imagePathXl 2560w"
									 sizes="(max-width: 2560px) 480px, 800px"
									 src="@imagePathFallBack"
									 height=""
									 width=""
									 loading="lazy"
									 class="mw-100 mh-100 @imagePadding"
									 alt="@product.Name">
							</div>
						</div>
					</a>
					<div class="d-flex flex-column h-100 position-relative @textPadding">
						<a href="@link" class="text-decoration-none flex-fill">
							<h3 class="h6 mb-0">@product.Name @product.VariantId</h3>
							<small class="text-muted mb-2">@product.Number</small>
						</a>
						<div>
							@if (product.Price.Price != product.PriceBeforeDiscount.Price)
							{
								<span class="text-decoration-line-through text-muted">
									@product.PriceBeforeDiscount.PriceFormatted
								</span>
							}
							<span class="fw-bold" id="@priceId">@price</span>
						</div>

						@if (product.VariantInfo.VariantInfo != null && Model.Item.GetBoolean("ShowVariants"))
						{
							var optionCount = product.VariantInfo.VariantInfo.Count();
							var showMaxVariants = 3;

							<div class="mt-3 pt-3 border-top w-100 d-none d-lg-flex">
								@foreach (VariantInfoViewModel variant in product.VariantInfo.VariantInfo.Take(showMaxVariants))
								{
									string variantLink = detailsPageLink + "&amp;ProductID=" + product.Id;
									variantLink += "&amp;VariantID=" + variant.VariantID;

									<a href="@variantLink" class="w-25 pe-2 text-decoration-none">
										<figure class="figure w-100 d-block m-0" onmouseover="switchVariantProduct('@product.Id', '@variant.Price.PriceFormatted', '@variant.Image.Value')" onmouseout="switchVariantProduct('@product.Id', '@product.Price.PriceFormatted', '@product.DefaultImage.Value')">
											<div class="@(ratioCssClass)@(imageTheme)" style="@(ratioVariable)">
												<div class="d-flex align-items-center justify-content-center">
													<img src="/admin/public/GetImage.ashx?width=100&height=100&crop=5&FillCanvas=true&format=webp&image=@variant.Image.Value" class="mw-100 mh-100 p-1" alt="@variant.OptionName">
												</div>
											</div>
											<figcaption class="figure-caption text-center text-uppercase text-truncate w-100 d-block"><small>@variant.OptionName</small></figcaption>
										</figure>
									</a>
								}
								@if (optionCount > showMaxVariants)
								{
									int left = optionCount - showMaxVariants;
									<div class="w-25 pe-2 d-flex justify-content-center align-items-center">
										<div>+@left</div>
									</div>
								}
							</div>
						}
					</div>
				</div>
			</div>
		}
	</div>

	<div class="row mb-3">
		<div class="col text-center">
			<div class="text-muted mb-3">@loadedProducts @Translate("out of") @productList.TotalProductsCount @Translate("products")</div>
			@if (productList.PageCount != 1)
			{
				string sortBySelection = Dynamicweb.Context.Current.Request?.Form["SortBy"] ?? "name";

				<form method="post" action="@url" data-response-target-element="content" class="w-100">
					@foreach (FacetGroupViewModel facetGroup in productList.FacetGroups)
					{
						foreach (FacetViewModel facetItem in facetGroup.Facets)
						{
							foreach (FacetOptionViewModel facetOption in facetItem.Options)
							{
								if (facetOption.Selected)
								{
									<input type="hidden" name="@facetItem.QueryParameter" value="[@facetOption.Value]" />
								}
							}
						}
					}

					@if (productList?.Group?.Id != null)
					{
						<input type="hidden" name="GroupId" value="@productList.Group.Id" />
					}

					<input type="hidden" name="PageSize" value="@pageSize" />
					<input type="hidden" name="SortBy" value="@sortBySelection" />
					<input type="hidden" name="RequestType" value="UpdateList" />

					<button class="btn btn-primary mb-3" type="button" onclick="ProductList.Update(event)">@Translate("Load more products")</button>
				</form>
			}
			<button type="button" onclick="document.body.scrollTop = 0; document.documentElement.scrollTop = 0;" class="btn btn-clean mb-3">@Translate("Back to top") </button>
		</div>
	</div>

	<script>
		function switchVariantProduct(id, price, imagesrc) {
			var productImageElement = document.querySelector("#ProductImage_" + id);
			var productPriceElement = document.querySelector("#ProductPrice_" + id);

			if (productPriceElement) {
				productPriceElement.innerText = price;
			}

			if (productImageElement) {
				productImageElement.src = imagesrc;

				var imageSrcset = productImageElement.srcset;
				imageSrcset = imageSrcset.replace(/image=.*?&/g, 'image=' + imagesrc + "&");

				productImageElement.srcset = imageSrcset;
			}
		}
	</script>
}
else
{
	if (isVisualEditor)
	{
		<div class="alert alert-dark m-0" role="alert">
			<span>@Translate("Product list: The list will be shown here, if any")</span>
		</div>
	}
	else
	{
		<div class="alert alert-dark m-0">
			@Translate("We did not find anything matching your search result")
		</div>

	}
}
