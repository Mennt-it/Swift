@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.ProductCatalog
@using System.Web

@{
	bool isVisualEditor = !string.IsNullOrEmpty(HttpContext.Current.Request.QueryString.Get("VisualEdit")) ? Convert.ToBoolean(HttpContext.Current.Request.QueryString.Get("VisualEdit")) : false;

	string detailsPageLink = Model.Item.GetString("ProductDetailsPage") != null ? Model.Item.GetString("ProductDetailsPage") : "#";

	string moduleOutput = Model.GetModuleOutput();

	//If products is added through the selector
	ProductListViewModel selectedProductList = Model.Item.GetValue("Products") as ProductListViewModel;

	string theme = "";
	if (Model.Item?.GetList("Theme")?.SelectedValue != null) {
		if (Model.Item.GetList("Theme").SelectedValue.ToLower() != "theme default")
		{
			theme = Model.Item.GetList("Theme").SelectedValue.ToLower();
			theme = String.Concat(theme.Where(c => !Char.IsWhiteSpace(c)));
			theme = theme.Replace("theme", "");
			theme = "theme theme-" + theme;
		}
	}

	string contentPadding = Model.Item?.GetList("contentPadding")?.SelectedValue != null ? Model.Item.GetList("contentPadding").SelectedValue : "";
}

<div class="h-100 @theme @contentPadding">
	@if (!string.IsNullOrEmpty(moduleOutput)) {
		@moduleOutput
	} else if (selectedProductList.Products.Count > 0) {
		<div class="js-slider d-flex">
			@foreach (var product in selectedProductList.Products)
			{
				string link = detailsPageLink + "&amp;ProductID=" + product.Id;
				link += !string.IsNullOrEmpty(product.VariantId) ? "&amp;VariantID=" + product.VariantId : "";

				string ratio = Model.Item?.GetList("ImageAspectRatio")?.SelectedValue != "0" && Model.Item?.GetList("ImageAspectRatio")?.SelectedValue != "" ? Model.Item.GetList("ImageAspectRatio").SelectedValue : "";
				string ratioCssClass = ratio != "" ? "ratio" : "";
				string ratioVariable = ratio != "" ? "--bs-aspect-ratio: " + ratio : "";

				string imagePath = product?.DefaultImage.Value.ToString() ?? "";

				var parms = new Dictionary<string, object>();
				parms.Add("loading", "lazy");
				parms.Add("style", "object-fit: contain");
				parms.Add("alt", product.Name);
				parms.Add("path", imagePath);

				<div>
					<div class="card rounded-0 h-100">
						<div class="@ratioCssClass" style="@ratioVariable" ;>
							@RenderPartial("Components/ProductImage.cshtml", Model, parms)
						</div>
						<div class="card-body d-flex flex-column h-100 justify-content-end">
							<div>
								<h4 class="h6">
									<a class="stretched-link text-decoration-none" href="@link">@product.Name @product.VariantId</a>
								</h4>
							</div>
							<p class="h5 fw-bold">@product.Price.PriceFormatted</p>
						</div>
					</div>
				</div>
			}
		</div>
	}
	else if (isVisualEditor)
	{
		<div class="alert alert-dark m-0" role="alert">
			<span><i class="fas fa-info-circle mr-3"></i></span> <span>@Translate("Product slider: The slider will be shown here, if any")</span>
		</div>
	}
</div>
