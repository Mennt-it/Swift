@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.Navigation.NavigationTreeViewModel>
@using Dynamicweb
@using System.Web
@using System.IO

@RenderFirstLevelNodes(Model.Nodes)

@helper RenderFirstLevelNodes(IEnumerable<Dynamicweb.Frontend.Navigation.NavigationTreeNodeViewModel> nodes)
{
foreach (var node in nodes)
{
	var hasChildren = node.Nodes.Count() > 0;
	string dropdownAttributes = hasChildren ? " role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"" : "";


		<div class="nav-item has-megamenu@(node.IsActive ? " active" : "")">
			@if (node.IsClickable)
                {
                    <a class="nav-link nav-link-clean@(node.IsActive ? " active" : "")@(hasChildren ? " dropdown-toggle" : "")" href="@(hasChildren ? "#" : node.Link)" title="@node.Name" @dropdownAttributes>
                        @RenderNavigationItem(node)
                    </a>
                } else {
                    <span class="nav-link nav-link-clean" title="@node.Name" @dropdownAttributes>
                        @RenderNavigationItem(node)
                    </span>
                }

			@if (hasChildren)
			{
				<div class="dropdown-menu megamenu rounded-0 border-0 py-3" id="NavGroup@(node.PageId)">
					<div class="container-xl">
						<div class="row g-5">
							@foreach (var subnode in node.Nodes)
							{
								<div class="col-3">
									<a href="@subnode.Link" class="text-decoration-none text-reset">
										<span class="megamenu-link mb-4 h5">@subnode.Name</span>
									</a>
									@if (subnode.Nodes.Any())
									{
										foreach (var subsubnode in subnode.Nodes)
										{
											<a class="d-block w-100 text-nowrap megamenu-link text-decoration-none" href="@subsubnode.Link">@subsubnode.Name</a>
										}
									}
									else
									{
										<a class="d-block w-100 text-nowrap megamenu-link text-decoration-none" href="@subnode.Link">@subnode.Name</a>
									}
								</div>
							}
						</div>
					</div>
				</div>
			}
		</div>
	}
}


@helper RenderNavigationItem(Dynamicweb.Frontend.Navigation.NavigationTreeNodeViewModel node)
{
	<span class="align-middle">@node.Name</span>
}
