@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.Navigation.NavigationTreeViewModel>

@functions {
	bool isVisualEditor = !string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.QueryString.Get("VisualEdit")) ? Convert.ToBoolean(Dynamicweb.Context.Current.Request.QueryString.Get("VisualEdit")) : false;
	int count = 0;}

@{ 
	string titleFontSize = Model.Parameters["TitleFontSize"].ToString();
}

@helper GetNodes(IEnumerable<Dynamicweb.Frontend.Navigation.NavigationTreeNodeViewModel> nodes)
{
	foreach (var node in nodes)
	{
		if (!node.IsActive && node.InPath)
		{
			count++;
			<li class="breadcrumb-item">@node.Name</li>

			if (node.Nodes.Count() > 0)
			{
				@GetNodes(node.Nodes)
			}
		}
	}
}

<nav aria-label="breadcrumb">
	<ol class="breadcrumb mb-0 text-muted">
		@GetNodes(Model.Nodes)
	</ol>
</nav>

@GetActiveNode(Model.Nodes)

@helper GetActiveNode(IEnumerable<Dynamicweb.Frontend.Navigation.NavigationTreeNodeViewModel> nodes)
{
	string titleFontSize = Model.Parameters["TitleFontSize"].ToString();

	foreach (var node in nodes)
	{
		if (node.IsActive && node.InPath)
		{
			count++;

			<div>
				<h1 class="@titleFontSize">@node.Name</h1>
			</div>
		}

		if (node.Nodes.Count() > 0)
		{
			@GetActiveNode(node.Nodes)
		}
	}
}

@if (count == 0 && isVisualEditor)
{
	<h1 class="@titleFontSize">@Translate("Product groups")</h1>
}
else if (count == 0)
{
	<h1 class="@titleFontSize">@Translate("Products")</h1>
}
