@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.Navigation.NavigationTreeViewModel>
@using Dynamicweb
@using System.IO

@RenderFirstLevelNodes(Model.Nodes)


@helper RenderFirstLevelNodes(IEnumerable<Dynamicweb.Frontend.Navigation.NavigationTreeNodeViewModel> nodes)
{
    <nav class="nav flex-nowrap">
        @foreach (var node in nodes)
        {
            <div class="nav-item@(node.IsActive ? " active" : "")">
                @if (node.IsClickable)
                {
                    <a class="nav-link @(node.IsActive ? " active" : "")" href="@node.Link" title="@node.Name">
                        @RenderNavigationItem(node)
                    </a>
                } else {
                    <span class="nav-link" title="@node.Name">
                        @RenderNavigationItem(node)
                    </span>
                }
            </div>
        }
    </nav>
}

@helper RenderNavigationItem(Dynamicweb.Frontend.Navigation.NavigationTreeNodeViewModel node) { 
    var page = Dynamicweb.Services.Pages.GetPage(node.PageId);
    string pageType = page.ItemType;
    string icon = "";
    if (page.PropertyItem != null) {
        icon = page.PropertyItem["Icon"] != null ? page.PropertyItem["Icon"].ToString() : "";
    }

    if (pageType == "R4_Cart") {
		double totalProducts = 0;
		if (Dynamicweb.Ecommerce.Common.Context.Cart != null) {
            totalProducts = Dynamicweb.Ecommerce.Common.Context.Cart.GetParentProductLineQuantityCount(Dynamicweb.Ecommerce.Common.Context.Cart.OrderLines);
		}

        if (Path.GetExtension(icon).ToLower() == ".svg") {
            @RenderIcon(icon)
            <span class="js-cart-qty mini-cart-quantity align-middle">(@totalProducts)</span>
        }
	} 
    else {
        if (Path.GetExtension(icon).ToLower() == ".svg") {
            @RenderIcon(icon)
        }
    }
}

@helper RenderIcon(string icon, string cssClass = "") { 
    if (Path.GetExtension(icon).ToLower() == ".svg" && !icon.ToLower().Contains("none")) {
        string iconPath = Dynamicweb.Context.Current.Server.MapPath(icon);

        <span class="icon-3">
            @ReadFile(iconPath)
        </span>
    }
}



