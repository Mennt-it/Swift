@inherits ViewModelTemplate<OrderViewModel>
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.Frontend
@using Dynamicweb.Ecommerce.Orders

<div>
	<div class="row">
		<div class="col-12">
			<header>
				<h1 class="h3 fw-bold mb-0">@Translate("Your order")</h1>
			</header>
		</div>
		<div class="col">
			<dl class="list-group my-5">

				@if (!string.IsNullOrEmpty(Model.Id))
				{
					<div class="list-group-item py-3">
						<div class="row">
							<dt class="col-3">@Translate("Order number")</dt>
							<dd class="col-9 mb-0">@Model.Id</dd>
						</div>
					</div>
				}

				@if (!string.IsNullOrEmpty(Model.CompletedDate.ToString()))
				{
					<div class="list-group-item py-3">
						<div class="row">
							<dt class="col-3">@Translate("Order date")</dt>
							<dd class="col-9 mb-0">@Model.CompletedDate.ToString()</dd>
						</div>
					</div>
				}

				@if (!string.IsNullOrEmpty(Model.StateName))
				{
					<div class="list-group-item py-3">
						<div class="row">
							<dt class="col-3">@Translate("Order state")</dt>
							<dd class="col-9 mb-0">@Model.StateName</dd>
						</div>
					</div>
				}

				<div class="list-group-item py-3">
					<div class="row">
						<dt class="col-3">@Translate("Delivery address")</dt>
						<dd class="col-9 mb-0">
							@if (!string.IsNullOrEmpty(Model.DeliveryName))
							{
								<span>@Model.DeliveryName</span>
							}
							@if (!string.IsNullOrEmpty(Model.DeliveryAddress))
							{
								<span>, @Model.DeliveryAddress</span>
							}
							@if (!string.IsNullOrEmpty(Model.DeliveryZip))
							{
								<span>, @Model.DeliveryZip</span>
							}
							@if (!string.IsNullOrEmpty(Model.DeliveryCity))
							{
								<span>, @Model.DeliveryCity</span>
							}
							@if (!string.IsNullOrEmpty(Model.DeliveryEmail))
							{
								<span>, @Model.DeliveryEmail</span>
							}
							@if (!string.IsNullOrEmpty(Model.DeliveryPhone))
							{
								<span>, @Model.DeliveryPhone</span>
							}
						</dd>
					</div>
				</div>

				<div class="list-group-item py-3">
					<div class="row">
						<dt class="col-3">@Translate("Billing address")</dt>
						<dd class="col-9 mb-0">
							@if (!string.IsNullOrEmpty(Model.CustomerName))
							{
								<span>@Model.CustomerName</span>
							}
							@if (!string.IsNullOrEmpty(Model.CustomerAddress))
							{
								<span>, @Model.CustomerAddress</span>
							}
							@if (!string.IsNullOrEmpty(Model.CustomerZip))
							{
								<span>, @Model.CustomerZip</span>
							}
							@if (!string.IsNullOrEmpty(Model.CustomerCity))
							{
								<span>, @Model.CustomerCity</span>
							}
							@if (!string.IsNullOrEmpty(Model.CustomerEmail))
							{
								<span>, @Model.CustomerEmail</span>
							}
							@if (!string.IsNullOrEmpty(Model.CustomerPhone))
							{
								<span>, @Model.CustomerPhone</span>
							}
						</dd>
					</div>
				</div>

				@if (Model.ShippingMethod != null) {
					<div class="list-group-item py-3">
						<div class="row">
							<dt class="col-3">@Translate("Delivery method")</dt>
							<dd class="col-9 mb-0">
								@if (!string.IsNullOrEmpty(Model.ShippingMethod.Name))
								{
									<span>@Model.ShippingMethod.Name</span>
								}
							</dd>
						</div>
					</div>
				}

				@if (Model.PaymentMethod != null) {
					<div class="list-group-item py-3">
						<div class="row">
							<dt class="col-3">@Translate("Payment method")</dt>
							<dd class="col-9 mb-0">
								@if (!string.IsNullOrEmpty(Model.PaymentMethod.Name))
								{
									<span>@Model.PaymentMethod.Name</span>
									if (!string.IsNullOrEmpty(Model.TransactionCardType)) {
										<span>@Model.TransactionNumber</span>
									}
								}
							</dd>
						</div>
					</div>
				}
			</dl>
		</div>
	</div>

	<div class="row">
		<div class="col">
			<div class="row">
				<div class="col">
					<h3 class="h5 fw-bold mb-3">@Translate("Order summary")</h3>
				</div>
			</div>
		</div>
	</div>

	<div class="row">
		<div class="col">
			@foreach (OrderLineViewModel orderline in Model.OrderLines)
			{
				string productName = orderline.ProductName + " " + orderline.ProductVariantId;
				string productImage = "/Admin/Public/GetImage.ashx?width=" + 500 + "&height=" + 500 + "&image=" + orderline.ProductImage + "&Format=WebP&Quality=100";
				string productPriceTotalWithDiscounts = orderline.Price.PriceFormatted;
				var orderlineQuantity = orderline.Quantity;
				var primaryGroupId = "";
				var productId = orderline.ProductId;
				var variantId = orderline.ProductVariantId;

				string productLink = "#";
				string productDetailPageId = GetPageIdByNavigationTag("ProductDetailPage").ToString();
				productLink = "Default.aspx?ID=" + productDetailPageId + "&GroupID=" + primaryGroupId + "&ProductID=" + productId;
				if (!string.IsNullOrEmpty(variantId))
				{
					productLink += "&VariantID=" + variantId;
				}

				OrderLineType orderlineType = orderline.OrderLineType;

				if (orderlineType == OrderLineType.Product || orderlineType == OrderLineType.GiftCard) {
					<article class="row py-3">
						<div class="col-3">
							<a href="@productLink" class="ratio ratio-1x1 d-block">
								<img src="@productImage" style="object-fit: contain;" alt="@productName">
							</a>
						</div>

						<div class="col-9">
							<div class="row position-relative h-100 g-0">

								<div class="col-7 d-flex flex-column justify-content-between">
									<h2 class="h6 mb-3 fw-bold">
										<a href="@productLink" class="text-dark text-decoration-none">@productName</a>
									</h2>

									<ul class="list-unstyled text-muted mb-0">
										@if (!string.IsNullOrEmpty(orderline.ProductVariantName)) {
											<li>
												<span>@orderline.ProductVariantName</span>
											</li>
										}
										<li>
											<span>@Translate("Price:")</span>
											@if (orderline.UnitPrice.Price != orderline.UnitPriceBeforeDiscount.Price && orderline.UnitPriceBeforeDiscount.Price != 0.0) {
												<span class="text-decoration-line-through text-muted">
													<span>@orderline.UnitPriceBeforeDiscount.PriceFormatted</span>
												</span>

											}
											<span>@orderline.UnitPrice.PriceFormatted</span>

										</li>
										<li>
											<span>@Translate("Quantity:")</span>
											<span>@orderlineQuantity</span>
										</li>
									</ul>
								</div>

								<div class="col-5 text-end">
									<h6 class="h6 fw-bold m-0">
										<span>@productPriceTotalWithDiscounts</span>
									</h6>
								</div>
							</div>
						</div>

					</article>
				}

				if (orderlineType == OrderLineType.Discount || orderlineType == OrderLineType.ProductDiscount || orderlineType == OrderLineType.Tax)
				{
					<article class="row py-4 border-top">
						<div class="col-9 offset-3">
							<div class="row">
								<div class="col-7">
									<h1 class="h6 fw-bold m-0">@productName</h1>
								</div>

								<div class="col-5 text-end">
									<h6 class="h6 fw-bold m-0">
										<span>@productPriceTotalWithDiscounts</span>
									</h6>
								</div>
							</div>
						</div>
					</article>
				}
			}

			@{ 
				string orderSubtotal = Model.PriceBeforeFees.PriceFormatted;
				string shippingFee = Model.ShippingFee.PriceFormatted;
				string orderTotalDiscount = Model.TotalDiscount.PriceFormatted;

				// Discounts
				bool orderHasDiscounts = false;
				if (!string.IsNullOrEmpty(orderTotalDiscount))
				{
					orderHasDiscounts = true;
				}

				<div class="cart-total row mt-3">
					<div class="col-md-12">
						<dl class="m-0">

							<div class="d-flex my-1 pt-4 border-dark border-top">
								<dt class="flex-fill fw-bold">@Translate("Subtotal")</dt>
								<dd class="flex-fill mb-0 text-end">
									<span class="text-price fw-bold">@orderSubtotal</span>
								</dd>
							</div>

							@if (Model.PaymentFee.Price != 0.0)
							{
								<div class="d-flex my-1">
									<dt class="flex-fill fw-normal">@Translate("Payment fee")</dt>
									<dd class="flex-fill mb-0 text-end">
										<span>@Model.PaymentFee.PriceFormatted</span>
									</dd>
								</div>
							}

							<div class="d-flex my-1">
								<dt class="flex-fill fw-normal">@Translate("Delivery")</dt>
								<dd class="flex-fill mb-0 text-end">
								@if (!string.IsNullOrEmpty(shippingFee))
								{
									<span>@shippingFee</span>
								}
								</dd>
							</div>

							<div class="my-4 border-dark border-top"></div>

							<div class="d-flex my-1 h5 fw-bold">
								<dt class="flex-fill">@Translate("Total")</dt>
								<dd class="flex-fill mb-0 text-end">
									<span>@Model.Price.PriceFormatted</span>
								</dd>
							</div>

							@if (Model.Price.Vat != 0.0) {
								<div class="d-flex my-1">
									<dt class="flex-fill fw-normal">@Translate("VAT")</dt>
									<dd class="flex-fill mb-0 text-end">
									@if (!string.IsNullOrEmpty(Model.Price.VatFormatted))
									{
										<span>@Model.Price.VatFormatted</span>
									}
									</dd>
								</div>
							}

							@if (orderHasDiscounts && Model.TotalDiscount.Price != 0.0)
							{
								<div class="d-flex my-1">
									<dt class="flex-fill fw-normal">@Translate("You saved")</dt>
									<dd class="flex-fill mb-0 text-end">
										<span>@orderTotalDiscount</span>
									</dd>
								</div>
							}
						</dl>
					</div>
				</div>
			}
		</div>
	</div>
</div>
