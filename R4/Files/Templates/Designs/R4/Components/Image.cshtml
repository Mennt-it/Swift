@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.FileViewModel>
@using System.IO
@using Dynamicweb.Frontend

@if (Model != null)
{
	string imagePath = Model?.Path ?? "";
	imagePath = Dynamicweb.Context.Current.Server.UrlEncode(imagePath);

	int xPos = Model?.FocalPositionFromLeft ?? 50;
	int yPos = Model?.FocalPositionFromTop ?? 50;
	string cssPosition = $"{xPos}% {yPos}%";

	@* Image sizes + a fallback image *@
	string imagePathXS = 	$"/Admin/Public/GetImage.ashx?image={imagePath}&width=320&Format=WebP&Quality=70";
	string imagePathS = 	$"/Admin/Public/GetImage.ashx?image={imagePath}&width=480&Format=WebP&Quality=70";
	string imagePathM = 	$"/Admin/Public/GetImage.ashx?image={imagePath}&width=640&Format=WebP&Quality=70";
	string imagePathL = 	$"/Admin/Public/GetImage.ashx?image={imagePath}&width=1280&Format=WebP&Quality=70";
	string imagePathXL = 	$"/Admin/Public/GetImage.ashx?image={imagePath}&width=1920&Format=WebP&Quality=70";
	string imagePathFallBack = imagePathL;

	@* attributes to send to the image tag *@
	string loading = !string.IsNullOrEmpty(GetViewParameterString("loading")) ? GetViewParameterString("loading") : "loading";
	string cssClass = GetViewParameterString("cssClass");
	string style = GetViewParameterString("style");
	string alt = GetViewParameterString("alt");
	@* string alt = !string.IsNullOrEmpty(GetViewParameterString("alt")) ? "alt=\"" + GetViewParameterString("alt") + "\"" : ""; *@

	if (Path.GetExtension(imagePath).ToLower() == ".svg")
	{
	}
	else
	{
	<img srcset="
			@imagePathXS  320w,
			@imagePathS   480w,
			@imagePathM   640w,
			@imagePathL  1280w,
			@imagePathXL 1920w"
		sizes="
			(max-width:  480px) 480px,
			(min-width:  480px and max-width:  640px)  640px,
			(min-width:  640px and max-width: 1280px) 1280px,
			(min-width: 1280px) 1920px,
			100vw"
		src="@imagePathFallBack"
		loading="@loading"
		class="@cssClass"
		style="object-fit: cover;object-position: @cssPosition;@style" 
		alt="@alt">
	}
}

@functions{ string ReadFile(string path)
	{
		string result;
		if (!Dynamicweb.Caching.Cache.Current.TryGet(path, out result))
		{
			string fullpath = path;
			if (!path.Contains(":/"))
			{
				fullpath = Dynamicweb.Context.Current.Server.MapPath(path);
			}

			if (!File.Exists(fullpath))
			{
				return string.Empty;
			}

			result = System.IO.File.ReadAllText(fullpath);
			Dynamicweb.Caching.Cache.Current.Set(path, result, new Dynamicweb.Caching.CacheItemPolicy() { FileDependencies = new[] { fullpath } });
		}

		return result;
	}
}
