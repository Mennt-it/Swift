@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.GridRowViewModel>
@using Dynamicweb.Content.Items


@{ 
	string sectionClass = "py-3";
	string containerClass = "container";

	string spaceBetweenRows = Model.Item.GetRawValueString("SpaceBetweenRows", "").ToLower(); 
	if (spaceBetweenRows != "spacing") {
		sectionClass = "";
	}
	if (spaceBetweenRows == "spacing-large") {
		sectionClass = "py-6";
	}
	if (spaceBetweenRows == "spacing-top") {
		sectionClass = "pt-6";
	}
	if (spaceBetweenRows == "spacing-bottom")	{
		sectionClass = "pb-6";
	}

	string width = Model.Item.GetRawValueString("Width", "").ToLower(); 
	if (width == "stretch") {
		containerClass = "container-fluid";
	}
	if (width == "none") {
		containerClass = "";
	}
	if (width == "compressed") {
		containerClass = " container-compressed";
	}

	string rowClass = "g-4 gy-md-0";
	string spaceBetweenColumns = Model.Item.GetRawValueString("SpaceBetweenColumns", "").ToLower();
	if (spaceBetweenColumns == "stick") {
		rowClass = "g-0";
	}
	if (spaceBetweenColumns == "spacing-large") {
		rowClass = "g-5 gy-md-0";
	}

	string theme = !string.IsNullOrWhiteSpace(Model.Item.GetRawValueString("Theme")) ? " theme " + Model.Item.GetRawValueString("Theme").Replace(" ", "").Trim().ToLower() : "";
}

<div class="@(sectionClass)@(theme)">
	<div class="@containerClass">
		<div class="row @rowClass">
			<div class="col-12 col-lg-8">
				@Model.Column(1).Output()
			</div>
			<div class="col-12 col-lg-4">
				@Model.Column(2).Output()
			</div>
		</div>
	</div>
</div>
