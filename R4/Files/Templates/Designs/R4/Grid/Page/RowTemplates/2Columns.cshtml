@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.GridRowViewModel>
@using Dynamicweb.Content.Items
@using Dynamicweb.Frontend
@using Dynamicweb.Content
@using Dynamicweb.Content.Items


@{ 
	var colorService = new ColorSwatchService();
	string sectionClass = "section-spacing";
	string containerClass = "container";

	if (!string.IsNullOrEmpty(Model?.Item?.GetString("SpaceBetweenRows")))
	{
		if (Model.Item.GetList("SpaceBetweenRows").SelectedValue.ToLower() != "spacing") {
			sectionClass = "";
		}
	}

	if (!string.IsNullOrEmpty(Model?.Item?.GetString("Width"))) {
		if (Model.Item.GetList("Width").SelectedName.ToLower() == "stretch") {
			containerClass = "container-fluid";
		}
		if (Model.Item.GetList("Width").SelectedName.ToLower() == "compressed") {
			containerClass = "container container-compressed";
		}
	}

	string backgroundColor = !string.IsNullOrWhiteSpace(Model.Item?.GetString("BackgroundColor")) && Model.Item?.GetString("BackgroundColor") != "transparent" ? Model.Item.GetString("BackgroundColor") : null;
	if (backgroundColor != null) {
		sectionClass += " has-background"; 
		backgroundColor = !backgroundColor.Contains("#") ? "background-color: " + colorService.GetHexColor(Pageview.AreaID, backgroundColor) + "; " : "background-color: " + backgroundColor + "; ";
	}

	string rowClass = "g-4";
	if (!string.IsNullOrEmpty(Model?.Item?.GetString("SpaceBetweenColumns")))
	{
		if (Model.Item.GetList("SpaceBetweenColumns").SelectedValue.ToLower() == "stick") {
			rowClass = "g-0";
		}
	}
}

<section class="@sectionClass">
    <div class="@containerClass">
        <div class="row @rowClass">
            <div class="col-12 col-md-6 text-scale-lg" style="@backgroundColor">
                @Model.Column(1).Output()
            </div>
            <div class="col-12 col-md-6 text-scale-lg" style="@backgroundColor">
                @Model.Column(2).Output()
            </div>
        </div>
    </div>
</section>
