@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.PageViewModel>
@using System
@using Dynamicweb
@using Dynamicweb.Environment

@{ 
	@* Branding Themes Fonts *@
	var brandingPageId = Model.Area.Item.GetLink("BrandingPage") != null ? Model.Area.Item.GetLink("BrandingPage").PageId : 0;
	var themePageId = Model.Area.Item.GetLink("ThemesPage") != null ? Model.Area.Item.GetLink("ThemesPage").PageId : 0;

	var brandingPage = Dynamicweb.Services.Pages?.GetPage(brandingPageId) ?? null;
	var themesParagraphLastChanged = Services.Paragraphs.GetParagraphsByPageId(themePageId).OrderByDescending(p => p.Audit.LastModifiedAt).FirstOrDefault();

	var cssLastModified = brandingPage.Audit.LastModifiedAt > themesParagraphLastChanged.Audit.LastModifiedAt ? brandingPage.Audit.LastModifiedAt : themesParagraphLastChanged.Audit.LastModifiedAt;
	var cssThemeAndBrandingStyleFileInfo = new System.IO.FileInfo(Dynamicweb.Core.SystemInformation.MapPath($"~/Files/Templates/Designs/R4/_parsed/R4_css/R4_styles_{Model.Area.ID}.min.css"));

	if (!cssThemeAndBrandingStyleFileInfo.Exists || cssThemeAndBrandingStyleFileInfo.LastWriteTime < brandingPage.Audit.LastModifiedAt)
	{
		//Branding page has been saved or the file is missing. Rewrite the file to disc.
		if (brandingPageId > 0)
		{
			var brandingPageview = Dynamicweb.Frontend.PageView.GetPageviewByPageID(brandingPageId);
			brandingPageview.Redirect = false;
			brandingPageview.Output();
		}
	}


	if (!cssThemeAndBrandingStyleFileInfo.Exists || cssThemeAndBrandingStyleFileInfo.LastWriteTime < themesParagraphLastChanged.Audit.LastModifiedAt)
	{
		//Branding page has been saved or the file is missing. Rewrite the file to disc.
		if (themePageId > 0)
		{
			var themePageview = Dynamicweb.Frontend.PageView.GetPageviewByPageID(themePageId);
			themePageview.Redirect = false;
			themePageview.Output();
		}
	}

	var cssStyleFileInfo = new System.IO.FileInfo(Dynamicweb.Core.SystemInformation.MapPath("~/Files/Templates/Designs/R4/Assets/css/styles.css"));
	var jsFileInfo = new System.IO.FileInfo(Dynamicweb.Core.SystemInformation.MapPath("~/Files/Templates/Designs/R4/Assets/js/scripts.js"));
}

<!doctype html>
<html lang="@Pageview.Area.CultureInfo.TwoLetterISOLanguageName" class="h-100">

    <head>
        @* Required meta tags *@
		<meta charset="utf-8">
		<meta name="viewport" content="height=device-height, width=device-width, initial-scale=1.0">
		<link rel="preconnect" href="https://fonts.gstatic.com" />
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preload" href="~/Files/Templates/Designs/R4/Assets/css/styles.css?@cssStyleFileInfo.LastWriteTime.Ticks" as="style">
		<link rel="preload" href="~/Files/Templates/Designs/R4/Assets/js/scripts.js?@jsFileInfo.LastWriteTime.Ticks" as="script">

		<link rel="shortcut icon" href="~/Files/Templates/Designs/R4/Assets/Images/favicon.png" />
		<link rel="apple-touch-icon" href="~/Files/Templates/Designs/R4/Assets/Images/logo_transparent.png" />
		<meta http-equiv="X-UA-Compatible" content="ie=edge" />
		<meta name="googlebot-news" content="nosnippet">

		@Model.MetaTags

		<title>@Model.Title</title>


		@* Bootstrap + R4 stylesheet *@
		<link href="~/Files/Templates/Designs/R4/Assets/css/styles.css?@cssStyleFileInfo.LastWriteTime.Ticks" rel="stylesheet" media="all" type="text/css">

		@* Branding and Themes min stylesheet *@
		<link href="~/Files/Templates/Designs/R4/_parsed/R4_css/R4_styles_@(Model.Area.ID).min.css?@cssLastModified.Ticks" rel="stylesheet" media="all" type="text/css" data-last-modified-content="@cssLastModified">

		<script src="~/Files/Templates/Designs/R4/Assets/js/scripts.js?@jsFileInfo.LastWriteTime.Ticks" async></script>
	</head>

    <body class="d-flex flex-column min-vh-100 brand" style="overflow-x: hidden;">
    
        <main id="content" class="overflow-hidden">
            @ContentPlaceholder()
        </main>
    
        @* Render any offcanvas menu here *@
		@RenderSnippet("offcanvas")
    </body>

</html>
