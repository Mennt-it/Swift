@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>

@GetString("UserManagement:User.ManageAddresses.AddAddress.Javascript")
@GetString("UserManagement:User.ManageAddresses.UpdateAddress.Javascript")
@GetString("UserManagement:User.ManageAddresses.DeleteAddress.Javascript")
@GetString("UserManagement:User.ManageAddresses.MakeDefault.Javascript")

@{ 
	var addressesLoop = GetLoop("UserManagement:User.UserAddresses");
}

<div class="d-flex flex-row align-items-center mb-5">
    <h1 class="h2 flex-fill">@Translate("My addresses")</h1>
    @GetString("UserManagement:User.ManageAddresses.FormStart")
    <button type="submit" class="btn text-uppercase" onclick="addAddress();">
        + @Translate("Add new address")
    </button>
    @GetString("UserManagement:User.ManageAddresses.FormEnd")
</div>

@if (!string.IsNullOrEmpty(Pageview.User.Address) || !string.IsNullOrEmpty(Pageview.User.Country) || !string.IsNullOrEmpty(Pageview.User.Zip) || !string.IsNullOrEmpty(Pageview.User.State)) {
    string accountSettingsLink = Pageview.CurrentParagraph.Item["AccountSettingsPage"] != null ? Pageview.CurrentParagraph.Item["AccountSettingsPage"].ToString() + "&GoBackToPage=" + Pageview.Page.ID : ""; 
 
    <div class="card mb-3">
        <div class="card-header d-flex flex-row align-items-center">
            <div class="flex-fill">
                <h3 class="h6 m-0 fw-bold">@Translate("Billing address")</h3>
            </div>
            @if (accountSettingsLink != "") {
                <a href="@accountSettingsLink" class="btn">
                    @Translate("Edit")
                </a>
			}
        </div>
        <div class="card-body">
            @if (!string.IsNullOrEmpty(Pageview.User.Address))
            {
                <div>@Pageview.User.Address</div>
            }
            @if (!string.IsNullOrEmpty(Pageview.User.Zip) || !string.IsNullOrEmpty(Pageview.User.City))
            {
                <div>@Pageview.User.Zip<span>&nbsp;</span>@Pageview.User.City</div>
            }
            @if (!string.IsNullOrEmpty(Pageview.User.State))
            {
                <div>@Pageview.User.State</div>
            }
            @if (!string.IsNullOrEmpty(Pageview.User.Country))
            {
                <div>@Pageview.User.Country</div>
            }
            @if (!string.IsNullOrEmpty(Pageview.User.Email))
            {
                <div>@Pageview.User.Email</div>
            }
            @if (!string.IsNullOrEmpty(Pageview.User.Phone))
            {
                <div>@Pageview.User.Phone</div>
            }
        </div>
    </div>
}

@foreach (LoopItem address in addressesLoop.OrderByDescending(address => address.GetString("UserManagement:User.UserAddress.Default")).ToList())
{
    string addressId = address.GetString("UserManagement:User.UserAddress.ID");

    <div class="card mb-3">
        <div class="card-header d-flex flex-row align-items-center">
            <div class="flex-fill">
                @if (!string.IsNullOrEmpty(address.GetString("UserManagement:User.UserAddress.Description.Value")))
                {
                    <h3 class="h6 m-0 fw-bold">@Translate("Shipping address") - @address.GetString("UserManagement:User.UserAddress.Description.Value")</h3>
				} else {
                    <h3 class="h6 m-0 fw-bold">@Translate("Shipping address")</h3>
				}
            </div>
            <div>
                <button onclick="updateAddress('@addressId');" class="btn">
                    @Translate("Edit")
                </button>
                <button onclick="deleteAddress('@addressId');" class="btn">
                    @Translate("Delete")
                </button>
            </div>
        </div>
        <div class="card-body">
            @if (!string.IsNullOrEmpty(address.GetString("UserManagement:User.UserAddress.Address.Value")))
            {
                <div>@address.GetString("UserManagement:User.UserAddress.Address.Value")</div>
            }
            @if (!string.IsNullOrEmpty(address.GetString("UserManagement:User.UserAddress.Zip.Value")) || !string.IsNullOrEmpty(address.GetString("UserManagement:User.UserAddress.City.Value")))
            {
                <div>@address.GetString("UserManagement:User.UserAddress.Zip.Value")<span>&nbsp;</span>@address.GetString("UserManagement:User.UserAddress.City.Value")</div>
            }
            @if (!string.IsNullOrEmpty(address.GetString("UserManagement:User.UserAddress.State.Value")))
            {
                <div>@address.GetString("UserManagement:User.UserAddress.State.Value")</div>
            }
            @if (!string.IsNullOrEmpty(address.GetString("UserManagement:User.UserAddress.Country.Value")))
            {
                <div>@address.GetString("UserManagement:User.UserAddress.Country.Value")</div>
            }
            @if (!string.IsNullOrEmpty(address.GetString("UserManagement:User.UserAddress.Email.Value")))
            {
                <div>@address.GetString("UserManagement:User.UserAddress.Email.Value")</div>
            }
            @if (!string.IsNullOrEmpty(address.GetString("UserManagement:User.UserAddress.Phone.Value")))
            {
                <div>@address.GetString("UserManagement:User.UserAddress.Phone.Value")</div>
            }
        </div>
        @if (addressesLoop.Count > 1) {
            <div class="card-footer">
                @if (!address.GetBoolean("UserManagement:User.UserAddress.Default"))
                {
                    <div class="form-check">
                      <input class="form-check-input" type="checkbox" value="@addressId" id="SetDefaultAddress_@addressId" onclick="makeDefaultAddress('@addressId');">
                      <label class="form-check-label" for="SetDefaultAddress_@addressId">
                            @Translate("Set as default shipping address")
                      </label>
                    </div>
			    } else { 
                    @Translate("This is your default shipping address")
			    }
            </div>
        }
    </div>
}
