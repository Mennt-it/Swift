@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>

@{
	var blockId = Model.ID;
	string blockType = "image_block";
	var block = Model.Item;
	string link = Model.Item?.GetString("Link") ?? "";
	string padding = Model.Item.GetRawValueString("Padding", "0") + "px";
}

<table id="@blockId" class="@blockType" align="center" border="0" cellpadding="0" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt; color: inherit; width: 100%;">
	<tbody>
		<tr>
			<td class="column" style="mso-table-lspace: 0pt;mso-table-rspace:0pt;text-align:left;padding:@padding;vertical-align:top;border:0px;" width="100%">
				<div align="center">
					@if (!string.IsNullOrEmpty(link))
					{
						<a href="@link">
							@RenderImage()
						</a>
					}
					else
					{
						@RenderImage()
					}
				</div>
			</td>
		</tr>
	</tbody>
</table>

@helper RenderImage()
{
	var parms = new Dictionary<string, object>();
	parms.Add("alt", Model.Item.GetString("ImageAltText"));
	parms.Add("columns", Model.GridRowColumnCount);

	@RenderPartial("Swift_Email/Components/Image.cshtml", Model.Item.GetFile("Image") ?? new Dynamicweb.Frontend.FileViewModel(), parms)
}
