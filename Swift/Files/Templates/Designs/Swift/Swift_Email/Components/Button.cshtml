@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.LinkViewModel>

@{ 
	var backgroundColor = GetViewParameter("backgroundColor");
	var backgroundColorDarken = GetViewParameter("backgroundColorDarken");
	var foregroundColor = GetViewParameter("foregroundColor");
	var borderColor = GetViewParameterString("borderColor");
	var align = GetViewParameterString("align");
	var title = GetViewParameterString("title"); 
	var themeCssName = GetViewParameterString("themeCssName");
}

<style>
	.btn.@(themeCssName) a:hover {
		background-color: @backgroundColorDarken !important;
		border-color: @backgroundColorDarken !important;
	}

	.btn.@(themeCssName) table td:hover {
		background-color: transparent !important;
	}
</style>

<table border="0" cellpadding="0" cellspacing="0" class="btn @(themeCssName)" style="border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%; box-sizing: border-box; min-width: 100% !important;" width="100%">
	<tbody>
		<tr>
			<td align="center" style="vertical-align: top;" valign="top">
				<table border="0" cellpadding="0" cellspacing="0" align="@align" style="border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: auto;">
					<tbody>
						<tr>
							<td style="vertical-align: top; background-color: @(backgroundColor); text-align: center;" valign="top" bgcolor="@(backgroundColor)" align="center">
								<a href="#" target="_blank" style="display: inline-block; color: @(foregroundColor); background-color: @(backgroundColor); border: solid 2px @(backgroundColor); box-sizing: border-box; cursor: pointer; text-decoration: none; font-weight: bold; margin: 0; padding: 12px 24px; text-transform: capitalize; border-color:@(borderColor);">@title</a>
							</td>
						</tr>
					</tbody>
				</table>
			</td>
		</tr>
	</tbody>
</table>
