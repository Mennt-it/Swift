@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using Dynamicweb.Ecommerce.Orders
@using Dynamicweb.Ecommerce.Orders.SalesDiscounts

@helper RenderVoucherForm() { 

	string iconPath = "/Files/Templates/Designs/Swift/Assets/icons/";
	string voucherCode = GetString("Ecom:Order.Customer.VoucherCode");
	var errors = new List<string>();
	string validState = "";
	bool vouchersAppliedAsDiscounts = false;
	IEnumerable<string> codes = new List<string>();
	Order order = new OrderService().GetById(GetString("Ecom:Order.ID"));

	if (!string.IsNullOrWhiteSpace(voucherCode))
	{
		if (order.VoucherUseType.HasFlag(VoucherUseCategoryType.Discount))
		{
			codes = voucherCode.Split(new string[] { ",", ";", " " }, StringSplitOptions.RemoveEmptyEntries);
			vouchersAppliedAsDiscounts = true;
		}
		else
		{
			codes = new string[] { voucherCode.Trim() };
		}
    }
		
	if(!vouchersAppliedAsDiscounts)
    {
		foreach (string code in codes)
		{
			Voucher vouch = Voucher.GetVoucherByCode(code);
			if (vouch == null)
			{
				validState = "is-invalid";
				errors.Add(Translate("Voucher") + code + Translate("not found"));
				continue;
			}
			if (vouch.DateUsed.HasValue)
			{
				validState = "is-invalid";
				errors.Add(Translate("Voucher") + code + Translate("already used"));
				continue;
			}
			VoucherList voucherList = VoucherList.GetListById(vouch.ListId);
			if (!voucherList.ListActive)
			{
				validState = "is-invalid";
				errors.Add(Translate("Voucher") + code + Translate("is not active"));
				continue;
			}
		}
	}

	<div class="py-3 border-top" id="orderVoucherForm">
		
		<form method="post" id="VoucherForm">
			<div class="input-group has-validation">
				<input type="text" class="form-control@(validState)" name="EcomOrderVoucherCode" placeholder="@Translate("Add voucher here")" id="EcomOrderVoucherCode" value="@voucherCode" aria-label="@Translate("Voucher input")" aria-describedby="voucherSubmit">
				<button class="btn btn-sm btn-primary d-inline-flex align-items-center justify-content-center" type="submit" id="EcomOrderVoucherApply" style="min-width: 100px;">
					<span>@Translate("Apply")</span>
				</button>

				<div class="invalid-feedback">
					@errors
				</div>
			</div>
		</form>
		
		@if (!string.IsNullOrWhiteSpace(voucherCode) && vouchersAppliedAsDiscounts)
		{
			<div class="d-flex flex-wrap gap-2 pt-3">

				@foreach (string code in codes)
				{
				<form method="post">
					<input type="hidden" name="EcomOrderVoucherCode" value="@voucherCode.Replace(code+",", "").Replace(","+code, "").Replace(code, "")">
					<span class="badge fw-normal bg-primary d-inline-flex align-items-center justify-content-center opacity-50 opacity-100-hover">
						<span class="icon-2">
							@ReadFile(iconPath + "tag.svg")
						</span>
						<span class="mx-2">@code</span>
						<button type="submit" class="bg-transparent border-0 btn-close-white p-0" aria-label="@Translate("Remove voucher")" >
							<span class="icon-2">
								@ReadFile(iconPath + "x.svg")
							</span>
						</button>
					</span>
				</form>
				}
			</div>
		}

	</div>
}
