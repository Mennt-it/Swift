@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@helper RenderOrderDeliveryDate()
{

	var paragraphViewmodel = Dynamicweb.Frontend.ContentViewModelFactory.CreateParagraphInfoViewModel(Pageview.CurrentParagraph);
	string shippingDate = !string.IsNullOrWhiteSpace(GetString("Ecom:Order.ShippingDate")) ? GetString("Ecom:Order.ShippingDate") : "",
	tomorrow = DateTime.Today.AddDays(1).ToString("yyyy-MM-dd"),
	iconPath = "/Files/Templates/Designs/Swift/Assets/icons/",
	useNextDateChecked = shippingDate == "" ? "checked=\"checked\"" : "",
	useSpecificDateChecked = shippingDate != "" ? "checked=\"checked\"" : "",
	showDeliveryDate = shippingDate != "" ? "show" : "",
	disableField = shippingDate == "" ? "" : "disabled";
	bool enableDeliveryDate = paragraphViewmodel.Item.GetBoolean("EnableDeliveryDate");
	bool disableRegionalHolidays = Pageview.CurrentParagraph.Item["DisableRegionalHolidays"] != null ? (Boolean)Pageview.CurrentParagraph.Item["DisableRegionalHolidays"] : false;

	var disabledWeekdays = paragraphViewmodel.Item.GetList("DisabledWeekdays").SelectedValues.ToList();
	var disabledDates = paragraphViewmodel.Item.GetItems("DisabledDates");

	if(enableDeliveryDate)
    {
		<style>
			@* crossbrowser support - diasable webkit icon *@
			input[type="date"]::-webkit-calendar-picker-indicator {
				color: transparent;
				background: none;
				z-index: 1;
			}
		</style>

		<div class="mt-4">
			
			<h3 class="fs-6 fw-normal mb-0">@Translate("Select delivery date")</h3>
			<p class="fs-8 mb-3">@Translate("Choose either next available or a specific date")</p>

			<div class="list-group">

				<label class="list-group-item list-group-item-action py-3 d-flex justify-content-between">
					<span class="d-flex justify-content-between">
						<input class="form-check-input me-3" type="radio" name="DeliveryDate" value="False" @useNextDateChecked onchange="hideDeliveryDateContainer()">
						<div>@Translate("Next available delivery date")</div>
					</span>
				</label>

				<label class="list-group-item list-group-item-action py-3 d-flex justify-content-between">
					<span class="d-flex justify-content-between">
						<input class="form-check-input me-3" type="radio" name="DeliveryDate" value="True" @useSpecificDateChecked onchange="showDeliveryDateContainer()">
						<div>@Translate("Select specific date")</div>
					</span>
				</label>

				@* Save empty delivery, if checked *@
				<div class="d-none" id="NextDeliveryDateContainer">
					<input @disableField type="hidden" name="EcomOrderShippingDate" value="">
				</div>

				<div class="collapse @showDeliveryDate" id="DeliveryDateContainer">
					<div class="list-group-item border-top-0 py-3 bg-light">
						<div class="input-group flatpickr">
							<input type="text" class="form-control" id="EcomOrderShippingDate" name="EcomOrderShippingDate" value="@GetString("Ecom:Order.ShippingDate")" placeholder="@Translate("Select date")" data-input>

							<button class="btn btn-outline-primary d-flex justify-content-center align-items-center" type="button" data-toggle>
								<span class="icon-2">
									@ReadFile(iconPath + "calendar.svg")
								</span>
							</button>

							<button class="btn btn-outline-primary d-flex justify-content-center align-items-center" type="button" data-clear>
								<span class="icon-2">
									@ReadFile(iconPath + "x.svg")
								</span>
							</button>
						</div>
					</div>
				</div>

			</div>

			<script>
				function showDeliveryDateContainer() {
					var show = new bootstrap.Collapse('#DeliveryDateContainer', {
						show: true
					});

					@* //Enable the correct form fields *@
					document.querySelector("#DeliveryDateContainer").querySelectorAll(".form-control").forEach(function(field) {
						field.removeAttribute("disabled");
					});

					document.querySelector("#NextDeliveryDateContainer").querySelectorAll("input").forEach(function (field) {
						field.setAttribute("disabled", "true");
					});
				};
				function hideDeliveryDateContainer() {
					var hide = new bootstrap.Collapse('#DeliveryDateContainer', {
						hide: true
					});

					@* //Enable the correct form fields *@
					document.querySelector("#DeliveryDateContainer").querySelectorAll(".form-control").forEach(function(field) {
						field.setAttribute("disabled", "true");
					});

					document.querySelector("#NextDeliveryDateContainer").querySelectorAll("input").forEach(function (field) {
						field.removeAttribute("disabled");
					});
				};
			</script>

			@{ 
				string disabeldDate = "date.getDay() === ";				
			}

			<script type="module">
				flatpickr(".flatpickr", {
					altFormat: "d-m-Y",
					dateFormat: "d-m-Y",
					weekNumbers: true,
					minDate: new Date().fp_incr(1),
					wrap: true,
					defaultDate: '@GetDate("Ecom:Order.ShippingDate").ToShortDateString()',
					disable: [
						{
							from: "01-12-2021",
							to: "31-12-2021"
						},
						function (date) {
							// return true to disable
							return (
								@foreach(var date in disabledWeekdays)
								{
									@disabeldDate @date @(" || ")
								}
							);

						}
					],
					"locale": {
						"firstDayOfWeek": 1 // start week on Monday
					}
				});
			</script>

			@*
		@disableRegionalHolidays

		@foreach (var date in disabledDates)
		{
			<div>@date.GetDateTime("DisabledDateStart").ToString("yyyy-MM-dd")</div>
			if (date.GetDateTime("DisabledDateEnd") > DateTime.Now) {
				<div>@date.GetDateTime("DisabledDateEnd").ToString("yyyy-MM-dd")</div>
			}
		} *@

		</div>

    }

}
