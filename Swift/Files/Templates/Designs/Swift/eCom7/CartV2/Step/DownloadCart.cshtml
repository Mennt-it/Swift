@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using Dynamicweb

@{
	var themeRaw = Pageview.CurrentParagraph.Item["Theme"]?.ToString();
	string theme = !string.IsNullOrEmpty(themeRaw) ? " theme " + themeRaw.Replace(" ", "").Trim().ToLower() : "";

	string shopPageId = Pageview.CurrentParagraph.Item["ShopPageLink"] != null ? Pageview.CurrentParagraph.Item["ShopPageLink"].ToString() : "";

	var ecomLanguages = Dynamicweb.Ecommerce.Services.Languages.GetLanguages();
	var assetGroups = Dynamicweb.Ecommerce.Services.DetailsGroups.GetGroups();

	List<string> productIds = new List<string>();

	string confirmationPage = Pageview.CurrentParagraph.Item["ConfirmationPageLink"] != null ? Pageview.CurrentParagraph.Item["ConfirmationPageLink"].ToString() : "";
}

@if (GetLoop("OrderLines").Count > 0) { 
	<div class="grid gap-0 theme">
		<header class="g-col-12">
			<div class="pb-3 pb-lg-0 pt-3 pt-lg-5">
				<h1 class="h3 mb-2">@Translate("Downloads")</h1>
				<p>@Translate("You can get relevant product data and assets such as product images and documents")</p>
				<p class="mb-0"><span>@Translate("Products ready to download"):</span> <span>@GetString("Ecom:Order.OrderLines.TotalProductQuantity")</span></p>
			</div>
		</header>

		<section class="g-col-12 g-col-lg-8 pe-lg-5 pb-md-5">
			<header class="pb-2 pt-5 border-bottom d-none d-lg-block">
				<div class="grid" style="line-height: 1;">
					<div class="g-col-1"></div>
					<div class="g-col-11">
						<div class="grid">
							<div class="g-col-3">@Translate("Number")</div>
							<div class="g-col-6">@Translate("Product")</div>
							<div class="g-col-3 text-end">
								<a href="@GetString("Ecom:Cart.EmptyCartLink")" title="@Translate("Remove all")">@Translate("Remove all")</a>
							</div>
						</div>
					</div>
				</div>
			</header>

			<header class="py-2 border-bottom d-block d-lg-none">
				<a href="@GetString("Ecom:Cart.EmptyCartLink")" title="@Translate("Remove all")">@Translate("Remove all")</a>
			</header>

			@foreach (LoopItem orderline in GetLoop("OrderLines"))
			{
				string name = orderline.GetString("Ecom:Order:OrderLine.ProductName");
				string number = orderline.GetString("Ecom:Order:OrderLine.ProductNumber");
				string image = "/Admin/Public/GetImage.ashx?width=" + 180 + "&height=" + 180 + "&image=" + orderline.GetString("Ecom:Product.PrimaryImage") + "&FillCanvas=true&&Format=WebP&Quality=100";

				string removeFromBasketLink = orderline.GetString("Ecom:Order:OrderLine.DeleteLink");

				<article class="grid grid-10 grid-lg-12 gap-2 g-col-12 align-items-center align-items-lg-center">
					<div class="g-col-12 border-top"></div>
					<div class="g-col-12 g-col-lg-1">
						<img class="img-fluid d-none d-lg-block" src="@image" height="60" width="60" alt="@name" loading="lazy">
						<img class="img-fluid d-block d-lg-none mx-auto mt-3" src="@image" height="220" width="220" alt="@name" loading="lazy">
					</div>

					<div class="g-col-12 g-col-lg-11 grid">
						<div class="g-col-12 g-col-lg-3">
							<span class="fs-8 fs-lg-6">@number</span>
						</div>

						<div class="g-col-12 g-col-lg-6">
							<span class="fs-8 fs-lg-6">@name</span>
						</div>

						<div class="g-col-3 text-end d-none d-lg-block">
							<a href="@removeFromBasketLink" alt="@Translate("Remove")">@Translate("Remove")</a>
						</div>

						<div class="g-col-12 d-block d-lg-none">
							<a class="btn btn-secondary w-100" href="@removeFromBasketLink" alt="@Translate("Remove")">@Translate("Remove")</a>
						</div>
					</div>
				</article>

				productIds.Add(orderline.GetString("Ecom:Order:OrderLine.ProductID"));
			}
		</section>

		@if (!string.IsNullOrEmpty(confirmationPage)) { 
			<aside class="g-col-12 g-col-lg-4 position-relative">
				<div class="p-3 p-lg-5 pb-lg-4@(theme)">
					<form id="ProductExportForm" action="/dwapi/ecommerce/products/export" class="sticky-receipt">
						<div class="mb-2">
							<h3 class="h5">@Translate("Product information")</h3>
							<div>@Translate("Select a language and format for your product file")</div>
						</div>

						<div class="form-floating mb-3">
							<select class="form-select bg-white" id="DownloadCartLanguageSelector" name="LanguageId" aria-label="@Translate("Language")">
								<option value="" selected>@Translate("None")</option>
								@foreach (var language in ecomLanguages)
								{
									<option value="@language.Code2">@language.GetDisplayName()</option>
								}
							</select>
							<label for="DownloadCartLanguageSelector">@Translate("Language")</label>
						</div>

						<div class="form-floating mb-4">
							<select class="form-select bg-white" id="DownloadCartFormatSelector" name="ExportFormat" aria-label="@Translate("Export format")">
								<option value="none" selected>@Translate("None")</option>
								<option value="json">JSON</option>
								<option value="csv">CSV</option>
								<option value="xml">XML</option>
							</select>
							<label for="DownloadCartFormatSelector">@Translate("Export format")</label>
						</div>

						<div class="mb-2">
							<h3 class="h5">@Translate("Image settings")</h3>
							<div>@Translate("Select a resolution for your images")</div>
						</div>

						<div class="form-floating mb-4">
							<input type="hidden" name="Dpi" id="DownloadCartDpi" value="72" />
							<input type="hidden" name="ImageFormat" id="DownloadCartImageFormat" value="webp" />

							<select class="form-select bg-white" id="DownloadCartImageImageSettingsSelector" aria-label="@Translate("Resolution")"
									onchange="document.querySelector('#DownloadCartDpi').value = this.options[this.selectedIndex].getAttribute('data-dpi'); document.querySelector('#DownloadCartImageFormat').value = this.options[this.selectedIndex].getAttribute('data-image-format');">
								<option data-dpi="72" data-image-format="webp" selected>@Translate("Web images") (dpi: 72)</option>
								<option data-dpi="300" data-image-format="png">@Translate("Print images") (dpi: 300)</option>
								<option data-dpi="600">@Translate("HQ images") (dpi: 600)</option>
							</select>
							<label for="DownloadCartImageFormatSelector">@Translate("Resolution")</label>
						</div>

						<div class="mb-2">
							<h3 class="h5">@Translate("Product assets")</h3>
							<div>@Translate("Optionally select additional product assets to download")</div>
						</div>

						<div class="form-floating mb-3">
							<select class="form-select bg-white" id="DownloadCartImageAssetsSelector" aria-label="@Translate("Selected image assets")">
								<option value="json" selected>All</option>
								<option value="csv">Details</option>
								<option value="xml">Events</option>
							</select>
							<label for="DownloadCartImageAssetsSelector">@Translate("Selected image assets")</label>
						</div>

						<div class="form-floating mb-5">
							<input type="email" class="form-control bg-white" id="DownloadCartRecipientEmail" name="RecepientEmail" placeholder="@Translate("Send download link to")" required>
							<label for="DownloadCartRecipientEmail">@Translate("Send download link to")</label>
						</div>

						@foreach (var productid in productIds)
						{
							<input type="hidden" name="ProductIds" value="@productid" />
						}

						<button type="button" onclick="StartDownload()" class="btn btn-primary w-100 mt-3" title="@Translate("Start download")">@Translate("Start download")</button>

						@if (!string.IsNullOrEmpty(shopPageId))
						{
							<a href="/Default.aspx?ID=@shopPageId" class="btn btn-secondary w-100 mt-3" title="@Translate("Add more products")">@Translate("Add more products")</a>
						}
					</form>
				</div>
			</aside>

			<script>
				async function StartDownload() {
					var form = document.querySelector('#ProductExportForm');
					let formData = new FormData(form);
					const newParams = new URLSearchParams(formData); //Get parameters from the form
					var url = new URL(form.action);	//Get the url from the form
					var newUrl = url.origin + url.pathname + "?" + newParams.toString(); //Create url with the new parameters 

					let response = await fetch(newUrl);

					if (response.ok) {
						window.location = '@confirmationPage' + '&redirect=false&&cartcmd=emptycart&OrderContext=' + '@GetString("Ecom:OrderContext.ID")';

						return false;
					} else {
						return false;
					}
				}
			</script>
		}
	</div>
} 
