@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using Dynamicweb
@using System.IO
@using Dynamicweb.Environment

@{
	string googleTagManagerID = Pageview.AreaSettings.GetString("GoogleTagManagerID");
	string googleAnalyticsMeasurementID = Pageview.AreaSettings.GetString("GoogleAnalyticsMeasurementID");
	var cookieOptInLevel = CookieManager.GetCookieOptInLevel();
	bool allowTracking = cookieOptInLevel == CookieOptInLevel.All || (cookieOptInLevel == CookieOptInLevel.Functional && CookieManager.GetCookieOptInCategories().Contains("Statistical"));
	var themeRaw = Pageview.CurrentParagraph.Item["Theme"]?.ToString();
	string theme = !string.IsNullOrEmpty(themeRaw) ? " theme " + themeRaw.Replace(" ", "").Trim().ToLower() : "";
}

<div class="grid gap-0 h-100" id="PaymentAnonymous">
	<div class="cart g-col-12 g-col-lg-8 p-3 p-lg-4 pe-xl-5 ps-xl-6 ps-xxl-8 order-last order-lg-first@(theme)">
		<form name="ordersubmit" id="ordersubmit" method="post" autocomplete="off" style="max-width: 65rem; margin-left: auto;">
			@{
				@RenderLogo()

				@RenderStepsBreadcrumbs()

				@RenderErrors()

				@RenderStepSummary()
			}

			<div class="mt-4">

				<h3 class="fs-6 fw-normal mb-0">@Translate("Select payment")</h3>
				<p class="fs-8 mb-3">@Translate("All transactions are encrypted")</p>

				@{@RenderPaymentMethods()}

			</div>

			@{
				@RenderOrderReference()

				@RenderOrderComment()

				@RenderStepsNavigation()
			}

			<input type="hidden" id="CurrentStep">
		</form>
	</div>

	@{@RenderSummarySidebar()}

</div>

<script>
	function submitForm() {
		document.querySelector("#CurrentStep").name = "@GetString("CartV2.CurrentStepButtonName")";
		swift.PageUpdater.Update(document.querySelector("#ordersubmit"));
	}
</script>

@if ((!string.IsNullOrWhiteSpace(googleAnalyticsMeasurementID) || !string.IsNullOrWhiteSpace(googleTagManagerID)) && allowTracking)
{
	<script>
		gtag("event", "add_payment_info", {
			currency: "@GetString("Ecom:Order.CurrencyCode")",
			value: @GetString("Ecom:Order.Price.Price.Value"),
			items: [
				@foreach (LoopItem orderline in GetLoop("OrderLines")) {
					<text>
					{
						item_id: "@orderline.GetString("Ecom:Order:OrderLine.ProductID")",
						item_name: "@orderline.GetString("Ecom:Order:OrderLine.ProductName")",
						currency: "@orderline.GetString("Ecom:Order:OrderLine.UnitPrice.CurrencyCode")",
						price: @orderline.GetString("Ecom:Order:OrderLine.TotalPriceWithProductDiscounts.Price.Value"),
						quantity: @orderline.GetString("Ecom:Order:OrderLine.Quantity")
					},
					</text>
				}
			]
		});
	</script>
}

@Include("Helpers/Logo.cshtml")
@Include("Helpers/StepsBreadcrumbs.cshtml")
@Include("Helpers/Errors.cshtml")
@Include("Helpers/StepSummary.cshtml")
@Include("Helpers/PaymentMethods.cshtml")
@Include("Helpers/SummarySidebar.cshtml")
@Include("Helpers/StepsNavigation.cshtml")
@Include("Helpers/OrderReference.cshtml")
@Include("Helpers/OrderComment.cshtml")
