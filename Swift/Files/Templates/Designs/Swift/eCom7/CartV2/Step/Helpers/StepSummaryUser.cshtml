@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using Dynamicweb

@helper RenderStepSummaryUser() {
	var hideEditBillingAddress = Pageview.CurrentParagraph?.Item["HideEditBillingAddress"] != null ? Convert.ToBoolean(Pageview.CurrentParagraph.Item["HideEditBillingAddress"].ToString()) : false;
	Dynamicweb.Security.UserManagement.User user = Pageview.User;

	int fieldCount = 0; //Helps us render addresses that contains more than just the auto set country
	List<string> address = new List<string>();
	if (!string.IsNullOrEmpty(Pageview.User.Company)) {
		address.Add(Pageview.User.Company);
		fieldCount++;
	}
	if (!string.IsNullOrEmpty(Pageview.User.Name)) {
		address.Add(Pageview.User.Name);
		fieldCount++;
	}
	if (!string.IsNullOrEmpty(Pageview.User.Address)) {
		address.Add(Pageview.User.Address);
		fieldCount++;
	}
	if (!string.IsNullOrEmpty(Pageview.User.Address2)) {
		address.Add(Pageview.User.Address2);
		fieldCount++;
	}
	if (!string.IsNullOrEmpty(Pageview.User.Zip)) {
		address.Add(Pageview.User.Zip);
		fieldCount++;
	}
	if (!string.IsNullOrEmpty(Pageview.User.City)) {
		address.Add(Pageview.User.City);
		fieldCount++;
	}
	if (!string.IsNullOrEmpty(Pageview.User.State)) {
		var countryCode = Pageview.User.CountryCode;
		string stateName = Dynamicweb.Ecommerce.Services.Countries.GetRegion(countryCode, Pageview.User.State)?.Name ?? string.Empty;

		address.Add(stateName);
		fieldCount++;
	}
	if (!string.IsNullOrEmpty(Pageview.User.CountryCode)) {
		string country = Pageview.User.Region.DisplayName;
		address.Add(country);
		fieldCount++;
	}
	string addressString = (string.Join(",", address.Select(x => x.ToString()).ToArray())).Replace(",", ", ");
	string editStep = Pageview.CurrentParagraph.Item["UserAccountPageLink"] != null ? Pageview.CurrentParagraph.Item["UserAccountPageLink"].ToString() + "&GoBackToPage=" + Pageview.Page.ID : "";

	if (!string.IsNullOrEmpty(addressString) && fieldCount > 1) {
		<div class="list-group-item py-2 fs-7 bg-light">
			<dl class="grid gap-1 gap-sm-3 mb-0">
				<dt class="g-col-8 g-col-sm-4 fw-normal">@Translate("Billing address")</dt>
				<dd class="g-col-12 g-col-sm-7 order-2 order-sm-1 mb-0">@addressString</dd>
				@if (!hideEditBillingAddress) { 
					<dd class="g-col-4 g-col-sm-1 order-1 order-sm-2 mb-0 text-end">
						<a href="@editStep" class="btn btn-small btn-link fs-8 p-0" id="EditBillingAddressButton">
							<span class="text-uppercase">@Translate("Edit")</span>
						</a>
					</dd>
				}
			</dl>
		</div>
	}
}
