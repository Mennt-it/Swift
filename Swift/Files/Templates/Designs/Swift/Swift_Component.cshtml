@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.PageViewModel>
@using System
@using Dynamicweb.Ecommerce.ProductCatalog
@MasterPageFile("Swift_MasterNoLayout.cshtml")

@{ 
	bool isVisualEditor = !string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.QueryString.Get("VisualEdit")) ? Convert.ToBoolean(Dynamicweb.Context.Current.Request.QueryString.Get("VisualEdit")) : false;

	string iconPath = "/Files/Templates/Designs/Swift/Assets/icons/";
	string gridContent = "";

	if (Model.Item != null)
	{
		gridContent = Model.Grid("Grid", "Grid", "default:true;sort:1", "Page");
	}

	string sizeGuide = Model.Item.GetRawValueString("SizeGuide", "3-columns");

	<div class="bg-light w-100 position-relative vh-100">
		<div class="p-5 position-fixed" style="z-index: 10">
			<h3 class="h5">@Translate("Component builder")</h3>
			<button type="button" class="btn btn-sm btn-primary" data-bs-toggle="offcanvas" data-bs-target="#settingsOffcanvas"><span class="icon-2 me-2">@ReadFile(iconPath + "edit-2.svg")</span> @Translate("Page settings")</button>
		</div>
		<div class="container-xl d-flex flex-row align-items-center justify-content-center h-100 position-relative">
			<div class="grid w-100">
				<div class="g-col-@sizeGuide shadow bg-white p-2">
					@gridContent
				</div>
			</div>
		</div>
	</div>

	if (!Model.IsCurrentUserAllowed)
	{
		int signInPage = GetPageIdByNavigationTag("SignInPage");
		int dashboardPage = GetPageIdByNavigationTag("MyAccountDashboardPage");

		if (!isVisualEditor)
		{
			if (signInPage != 0)
			{
				if (signInPage != Model.ID)
				{
					Dynamicweb.Context.Current.Response.Redirect("/Default.aspx?ID=" + signInPage);
				}
				else
				{
					if (dashboardPage != 0)
					{
						Dynamicweb.Context.Current.Response.Redirect("/Default.aspx?ID=" + dashboardPage);
					}
					else
					{
						Dynamicweb.Context.Current.Response.Redirect("/");
					}
				}
			}
			else
			{
				<div class="alert alert-dark m-0" role="alert">
					<span>@Translate("You do not have access to this page")</span>
				</div>
			}
		}
		else
		{
			<div class="alert alert-dark m-0" role="alert">
				<span>@Translate("To work on this page, you must be signed in, in the frontend")</span>
			</div>
		}
	}
}

<div class="offcanvas offcanvas-start d-flex flex-column" tabindex="-1" id="settingsOffcanvas" aria-labelledby="settingsOffcanvasLabel" style="width: 400px">
  <div class="offcanvas-header justify-content-center" style="background-color: #414141; text-align: center; color: #fff;">
    <div id="offcanvasRightLabel" class="fs-6 m-0 fw-normal">@Translate("Change settings")</div>
  </div>
  <div class="offcanvas-body p-0 w-100 flex-fill">
	<iframe name="PageEditorIframe" id="PageEditorIframe" src="/Admin/Content/Items/Editing/ItemEdit.aspx?PageID=@(Pageview.Page.ID)" class="w-100" style="height: calc(100vh - 150px)"></iframe>
  </div>
	<div class="p-3">
		<button type="button" class="btn btn-primary w-100" onclick="SaveChanges()">@Translate("Save changes")</button>
	</div>
</div>

<script>
	document.querySelector('#VisualEditoForcedTopHeight').style.height = 0;

	var iframe = window.frames['PageEditorIframe'];
	iframe.onload = function (event) {
		document.querySelector("#PageEditorIframe").contentWindow.document.querySelector('.screen-container').style.padding = 0;
		document.querySelector("#PageEditorIframe").contentWindow.document.querySelector('.screen-container').style.backgroundColor = 'transparent';
		document.querySelector("#PageEditorIframe").contentWindow.document.querySelector('.card').style.boxShadow = 'none';
		document.querySelector("#PageEditorIframe").contentWindow.document.querySelector('#myribbon').style.display = 'none';
		document.querySelector("#PageEditorIframe").contentWindow.document.querySelector('#breadcrumb').style.display = 'none';
		document.querySelector("#PageEditorIframe").contentWindow.document.querySelector('.card-footer').style.display = 'none';
	};

	SaveChanges = function () {
		var settingsModal = bootstrap.Modal.getInstance(document.querySelector('#settingsModal'));
		if (settingsModal) {
			settingsModal.hide();
		}

		var settingsOffcanvas = bootstrap.Modal.getInstance(document.querySelector('#settingsOffcanvas'));
		if (settingsOffcanvas) {
			settingsOffcanvas.hide();
		}

		iframe.Ribbon.buttonClick(event, 'cmdSave', '', false, function () { iframe.Dynamicweb.Items.ItemEdit.get_current().save(); })
		location.reload();
	}
</script>
