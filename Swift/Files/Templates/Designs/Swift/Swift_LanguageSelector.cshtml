@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.PageViewModel>
@using System
@using System.Text.RegularExpressions

@MasterPageFile("Swift_MasterClean.cshtml")

@{ 
	Regex reg = new Regex(@"\(([^\)]+)\)");
	List<Dynamicweb.Content.Page> languages = new List<Dynamicweb.Content.Page>();

	if (Pageview.Area.IsMaster) {
		languages.Add(Pageview.Page);
		if (Pageview.Page.Languages != null) {
			foreach (var language in Pageview.Page.Languages) {
				languages.Add(language);
			}
		}
	} else {
		languages.Add(Pageview.Page.MasterPage);
		foreach (var language in Pageview.Page.MasterPage.Languages) {
			languages.Add(language);
		}
	}

	string siteLanguage = Pageview.Area.CultureInfo.Name;
	Uri url = Dynamicweb.Context.Current.Request.Url;
	string hostName = url.Host; // domain.com/da-dk or domain.com/en-us

	var ecomCountries = Dynamicweb.Ecommerce.Services.Countries.GetCountries();
	var currencies = Dynamicweb.Ecommerce.Services.Currencies.GetAllCurrencies();

	string layout = Model.Item.GetRawValueString("LanguagesLayout", "modal");
}



@if (ecomCountries.Count() > 1 && layout == "modal-country-language-currency") {
	<div class="form-floating">
		<select name="CountryCode" id="CountryCodeSelect" class="form-select d-col-12" aria-label="@Translate("Select country")">
			@foreach (var country in ecomCountries)
			{
				var selectedCountry = country.Code2 == Dynamicweb.Ecommerce.Common.Context.Country.Code2 ? "selected" : "";
				<option value="@country.Code2" @selectedCountry>@country.Name</option>
			}
		</select>
		<label for="CountryCodeSelect">@Translate("Country")</label>
	</div>
}

@if (languages.Count() > 1) { 
	<div class="form-floating">
		<select id="LanguageSelect" name="AreaID" class="form-select d-col-12" aria-label="@Translate("Select language")">
			@foreach (var language in languages)
			{
				hostName = !string.IsNullOrEmpty(language.Area.DomainLock) ? language.Area.DomainLock : url.Host;
				string href = $"{url.Scheme}://{hostName}?AreaID={language.Area.ID}";

				string name = reg.Replace(language.Area.CultureInfo.DisplayName, "");
				string selectedLanguage = language.Area.ID == Pageview.Area.ID ? "selected" : "";

				<option lang="@language.Area.CultureInfo.TwoLetterISOLanguageName" value="@language.Area.ID" @selectedLanguage>@name</option>
			}
		</select>
		<label for="LanguageSelect">@Translate("Country")</label>
	</div>
}

@if (currencies.Count() > 1 && (layout == "modal-language-currency" || layout == "modal-country-language-currency")) { 
	<div class="form-floating">
		<select name="CurrencyCode" id="CurrencySelect" class="form-select d-col-12" aria-label="@Translate("Select currency")">
			@foreach (var currency in currencies)
			{
				string selectedCurrency = currency.Code == Dynamicweb.Ecommerce.Common.Context.Currency.Code ? "selected" : "";	
				<option value="@currency.Code" @selectedCurrency>@currency.Name</option>
			}
		</select>
		<label for="CurrencySelect">@Translate("Currency")</label>
	</div>
}
