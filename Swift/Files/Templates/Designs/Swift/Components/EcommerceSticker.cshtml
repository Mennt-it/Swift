@inherits ViewModelTemplate<ProductViewModel>
@using Dynamicweb.Ecommerce.ProductCatalog
@using Dynamicweb.Frontend
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.ProductCatalog

@{

	var paragraphViewModel = Dynamicweb.Frontend.ContentViewModelFactory.CreateParagraphInfoViewModel(Pageview.CurrentParagraph);

	Dictionary<string, string> stickers = new Dictionary<string, string>();

	FieldValueViewModel availableStickersObject;
	Model.ProductFields.TryGetValue("Stickers", out availableStickersObject);

	if (availableStickersObject != null) {
		List<FieldOptionValueViewModel> availableStickers = (List<FieldOptionValueViewModel>)availableStickersObject.Value;	

		if (paragraphViewModel.Item.GetList("Stickers") != null) {
			var selectedStickers = paragraphViewModel.Item.GetList("Stickers").SelectedOptions;

			foreach (ListOptionViewModel selectedOption in selectedStickers) {
				foreach (FieldOptionValueViewModel availableOption in availableStickers) { 
					if (selectedOption.Value == availableOption.Value)
					{
						stickers.Add(selectedOption.Name, selectedOption.Value);
					}
				}
			}
        } else {
			foreach (FieldOptionValueViewModel availableOption in availableStickers) { 
				stickers.Add(availableOption.Name, availableOption.Value);
			}
        }
	}
}

@if (stickers.Count > 0) {
	<div class="">
		@foreach (var option in stickers) {
			<span class="badge bg-black">@option.Key</span>
		}
	</div>
}

