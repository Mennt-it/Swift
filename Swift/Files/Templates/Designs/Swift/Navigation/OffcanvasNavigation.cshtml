@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.Navigation.NavigationTreeViewModel>

@{
	string navType = Model?.Parameters["NavType"] != null ? Model.Parameters["NavType"].ToString() : "first-nav";
}

<div class="nav @navType flex-column h-auto w-100 left-0 top-0">
	@RenderNodes(Model.Nodes)
</div>


@helper RenderNodes(IEnumerable<Dynamicweb.Frontend.Navigation.NavigationTreeNodeViewModel> nodes)
{
	foreach (var node in nodes)
	{
		var hasChildren = node.Nodes.Count() > 0;
		var nodeId = !string.IsNullOrEmpty(node.GroupId) ? node.GroupId : node.PageId.ToString();
		var inPathChecked = node.InPath ? "checked" : "";
		var inPathClass = node.InPath ? "in-path" : "";
		var activeClass = node.IsActive ? "active fw-bold" : "";
		<div class="nav-item d-flex align-items-center w-100 py-1">
            <a class="nav-link position-relative flex-fill @activeClass @inPathClass" @(node.IsActive ? "aria-current='page'" : "") href="@node.Link">@node.Name</a>
            @if (hasChildren) {
				<label class="nav-link position-relative" for="nav_@nodeId">
					@RenderStaticIcon("arrow-right")
				</label>
				<input type="checkbox" class="visually-hidden sub-nav-check" id="nav_@nodeId" @inPathChecked>
				<div class="nav sub-nav position-absolute h-100 opacity-0 pe-none invisible w-100 left-0 top-0">
					<div class="h-100 w-100 overflow-y-auto overflow-x-hidden">
						<div class="nav-header position-relative d-flex align-items-center py-1">
							<label class="nav-link position-relative" for="nav_@nodeId">
								@RenderStaticIcon("arrow-left")
							</label>
							<div class="nav-link position-relative ps-0 flex-fill"><span>@node.Name</span></div>
						</div>

						@RenderNodes(node.Nodes)
					</div>
				</div>
			}
		</div>
	}
}


@helper RenderStaticIcon(string icon)
{
	string iconPath = "/Files/Templates/Designs/Swift/Assets/icons/" + icon + ".svg";

	if (!iconPath.ToLower().Contains("none") && iconPath != "")
	{
		iconPath = Dynamicweb.Context.Current.Server.MapPath(iconPath);

		<span class="pe-none">
			@ReadFile(iconPath)
		</span>
	}
}
