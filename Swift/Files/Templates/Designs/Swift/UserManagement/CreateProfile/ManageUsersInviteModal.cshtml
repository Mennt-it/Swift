@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>

@{
	string pageTitle = Pageview.Page.GetDisplayName();
	string pageId = GetGlobalValue("Global:Page.ID");
	int signInPageId = Dynamicweb.Services.Pages.GetPageByNavigationTag(Pageview.Area.ID, "SignInPage").ID;
	string singInPageUrl = Dynamicweb.Frontend.SearchEngineFriendlyURLs.GetFriendlyUrl(signInPageId);
	string invalidName = !string.IsNullOrEmpty(GetString("UserManagement:User.Name.Input.Error")) ? "is-invalid" : "";
	string invalidEmail = !string.IsNullOrEmpty(GetString("UserManagement:User.Email.Input.Error")) ? "is-invalid" : "";
	string invalidPassword = !string.IsNullOrEmpty(GetString("UserManagement:User.NewPassword.Input.Error")) ? "is-invalid" : "";
	string invalidConfirmPassword = !string.IsNullOrEmpty(GetString("UserManagement:User.NewPasswordConfirm.Input.Error")) ? "is-invalid" : "";

	string contentPadding = Pageview.CurrentParagraph.Item["ContentPadding"] != null ? Pageview.CurrentParagraph.Item["ContentPadding"].ToString() : "";
	contentPadding = contentPadding == "none" ? "px-0" : contentPadding;
	contentPadding = contentPadding == "small" ? "p-2 p-md-3" : contentPadding;
	contentPadding = contentPadding == "large" ? "p-4 p-md-5" : contentPadding;
	var themeRaw = Pageview.CurrentParagraph.Item["Theme"]?.ToString();
	string theme = !string.IsNullOrEmpty(themeRaw) ? " theme " + themeRaw.Replace(" ", "").Trim().ToLower() : " theme light";

	string tempPassword = Guid.NewGuid().ToString();
}

@foreach (var error in GetLoop("FormValidationErrors"))
{
	<div class="alert alert-danger mb-3" role="alert">
		@error.GetString("UserManagement:User.FormValidationError.Message")
	</div>
}

@if (!String.IsNullOrEmpty(GetString("error")))
{
	<div class="alert alert-danger mb-5" role="alert">
		@GetString("error")
	</div>
}

<div class="modal fade" id="inviteUserModal" tabindex="-1" aria-labelledby="inviteUserModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered">
		<div class="modal-content">
			@GetString("UserManagement:User.FormStart")
			<div class="modal-header">
				<h5 class="modal-title" id="inviteUserModalLabel">@Translate("Invite user")</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<p>@Translate("An email will be sent to the user. The user must accept the request to complete the sign-up")</p>

				<input type="hidden" name="UserManagementForm" value="1">
				<input type="hidden" name="UserManagement_Form_CustomerNumber" value="@Pageview.User.CustomerNumber" />
				<input type="hidden" name="UserManagement_Form_NewPassword" value="@tempPassword" />
				<input type="hidden" name="UserManagement_Form_NewPasswordConfirm" value="@tempPassword" />

				<div class="form-floating mb-3">
					<input type="text" class="form-control @invalidName" placeholder="@Translate("Name")" name="UserManagement_Form_Name" id="UserManagement_Form_Name" value="@GetString("UserManagement:User.Name")" required />
					<div class="invalid-feedback">@GetString("UserManagement:User.Name.Input.Error")</div>
					<label for="UserManagement_Form_Name" class="form-label">@Translate("Name")</label>
				</div>

				<div class="form-floating mb-4">
					<input type="email" class="form-control @invalidEmail" placeholder="@Translate("Email")" name="UserManagement_Form_Email" id="UserManagement_Form_Email" value="@GetString("UserManagement:User.Email")" required />
					<div class="invalid-feedback">@GetString("UserManagement:User.Email.Input.Error")</div>
					<label for="UserManagement_Form_Email" class="form-label">@Translate("Email")</label>
				</div>

			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Translate("Close")</button>
				<button type="submit" class="btn btn-primary" id="InviteUserButton">@Translate("Invite user")</button>
			</div>
			@GetString("UserManagement:User.FormEnd")
		</div>
	</div>
</div>

@if (Pageview.IsVisualEditorMode) {
	<div class="alert alert-info text-center mt-3" role="alert">
		@Translate("Invite user modal")
	</div>
}
