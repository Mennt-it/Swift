@inherits ViewModelTemplate<ProductListViewModel>
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.ProductCatalog

@{ 
    bool isFeed = !string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.QueryString.Get("feed")) ? Convert.ToBoolean(Dynamicweb.Context.Current.Request.QueryString.Get("feed")) : false;

    //Put the ProductListViewModel up in context items
    if (Dynamicweb.Context.Current.Items.Contains("ProductList"))
    {
        Dynamicweb.Context.Current.Items["ProductList"] = Model;
    } 
    else 
    {
        Dynamicweb.Context.Current.Items.Add("ProductList", Model);
    }
}

@if (isFeed) {
    @Model.ToJson()
} else {
    <script type="module">
       swift.ProductList.init();
    </script>

    @* Favorite toast *@
    <div aria-live="polite" aria-atomic="true"> 
	    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11"> 
		    <div id="favoriteNotificationToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true"> 
			    <div class="toast-header"> 
				    <strong class="me-auto">@Translate("Favorite list updated")</strong> 
				    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button> 
			    </div> 
			    <div class="toast-body d-flex gap-3"> 
				    <div id="favoriteNotificationToast_Image"></div> 
				    <div id="favoriteNotificationToast_Text"></div> 
			    </div> 
		    </div> 
	    </div> 
    </div> 
}
