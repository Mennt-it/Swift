@inherits ViewModelTemplate<ProductViewModel>
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.ProductCatalog

@{
	if (Dynamicweb.Context.Current.Items.Contains("ProductDetails"))
	{
		Dynamicweb.Context.Current.Items["ProductDetails"] = Model;
	}
	else
	{
		Dynamicweb.Context.Current.Items.Add("ProductDetails", Model);
	}
	
	ProductViewModel replacementProduct = Model.Discontinued && Model.ReplacementProduct != null && !string.IsNullOrEmpty(Model.ReplacementProduct.ProductId) ? Model.ReplacementProduct.GetProduct() : null;
	bool showReplacementProduct = Model.Discontinued && replacementProduct != null && replacementProduct.Active && (replacementProduct.StockLevel > 0 || replacementProduct.NeverOutOfstock);
}

@if (showReplacementProduct)
{
	string showPricesWithVat = Pageview.Area.EcomPricesWithVat.ToLower();
	bool neverShowVat = string.IsNullOrEmpty(showPricesWithVat);
	
	string replacementProductLink = replacementProduct.GetProductLink(GetPageIdByNavigationTag("Shop"), false);
	string replacementProductImage = $"/Admin/public/getimage.ashx?image={Dynamicweb.Context.Current.Server.UrlEncode(replacementProduct.DefaultImage.Value)}&width=60&height=60&format=webp&Crop=5&fillcanvas=true";
	string replacementProductStockState = replacementProduct.NeverOutOfstock ? Translate("In stock") : $"{replacementProduct.StockLevel} {Translate("In stock")}";
	string replacementProductPrice = showPricesWithVat == "false" && !neverShowVat ? replacementProduct.PriceBeforeDiscount.PriceWithoutVatFormatted : replacementProduct.PriceBeforeDiscount.PriceFormatted;
					
	string replacementProductMinQty = replacementProduct.PurchaseMinimumQuantity != 1 ? replacementProduct.PurchaseMinimumQuantity.ToString() : "1";
	string replacementProductStepQty = replacementProduct.PurchaseQuantityStep > 1 ? replacementProduct.PurchaseQuantityStep.ToString() : "1";
	
	<table class="table" id="modalReplacementBody">
		<thead>
		<tr>
			<td></td>
			<td>@Translate("Number")</td>
			<td>@Translate("Product")</td>
			<td>@Translate("Variant")</td>
			<td>@Translate("Stock state")</td>
			<td class="text-end">@Translate("Price")</td>
		</tr>
		</thead>
		<tbody>
		<tr class="opacity-50">
			<td class="border-bottom-0 align-middle">
				<img class="img-fluid productImage" src="/Admin/public/getimage.ashx?image=@Dynamicweb.Context.Current.Server.UrlEncode(Model.DefaultImage.Value)&width=60&height=60&format=webp&Crop=5&fillcanvas=true" height="60" width="60" alt="@Model.Name">
			</td>
			<td class="border-bottom-0 align-middle" id="modalProductNumber">@Model.Number</td>
			<td class="border-bottom-0 align-middle" id="modalProductName">@Model.Name</td>
			<td class="border-bottom-0 align-middle" id="modalProductVariant">@Model.VariantName</td>
			<td class="border-bottom-0 align-middle text-danger">@Translate("Discontinued")</td>
			<td class="border-bottom-0 align-middle text-end" id="modalProductPrice">
				@if (showPricesWithVat == "false" && !neverShowVat)
                {
	                <span class="text-decoration-line-through opacity-75">
		                <span class="text-price">@Model.PriceBeforeDiscount.PriceWithoutVatFormatted</span>
	                </span>
                }
                else
                {
                	<span class="text-decoration-line-through opacity-75">
                		<span class="text-price">@Model.PriceBeforeDiscount.PriceFormatted</span>
                	</span>
                }
			</td>
		</tr>
		<tr>
			<td class="fw-bold text-center" colspan="6">@Translate("Replacement Product")</td>
		</tr>
		<tr id="replacement-product"
			data-replacement-product-id="@replacementProduct.Id"
		    data-replacement-product-variant-id="@replacementProduct.VariantId"
		    data-replacement-product-link="@replacementProductLink"
		    data-replacement-product-image="@replacementProductImage"
		    data-replacement-product-number="@replacementProduct.Number"
		    data-replacement-product-name="@replacementProduct.Name"
		    data-replacement-product-variant-name="@replacementProduct.VariantName"
		    data-replacement-product-stock-state="@replacementProductStockState"
		    data-replacement-product-price="@replacementProductPrice"
		    data-replacement-product-min-qty="@replacementProductMinQty"
		    data-replacement-product-step-qty="@replacementProductStepQty"
		    >
			
			<td class="border-bottom-0 align-middle">
				<img class="img-fluid productImage" src="/Admin/public/getimage.ashx?image=@Dynamicweb.Context.Current.Server.UrlEncode(replacementProduct.DefaultImage.Value)&width=60&height=60&format=webp&Crop=5&fillcanvas=true" height="60" width="60" alt="@replacementProduct.Name">
			</td>
			<td class="border-bottom-0 align-middle" id="modalReplacementProductNumber">@replacementProduct.Number</td>
			<td class="border-bottom-0 align-middle" id="modalReplacementProductName">@replacementProduct.Name</td>
			<td class="border-bottom-0 align-middle" id="modalReplacementProductVariant">@replacementProduct.VariantName</td>
			<td class="border-bottom-0 align-middle text-success" id="modalReplacementProductStock">@replacementProductStockState</td>
			<td class="border-bottom-0 align-middle text-end" id="modalReplacementProductPrice">
				@if (showPricesWithVat == "false" && !neverShowVat)
				{
					<span itemprop="price" content="@replacementProduct.Price.PriceWithoutVat" class="d-none"></span>
				}
				else
				{
					<span itemprop="price" content="@replacementProduct.Price.Price" class="d-none"></span>
				}
				<span class="text-price">@replacementProductPrice</span>
			</td>
		</tr>
		</tbody>
	</table>
}
