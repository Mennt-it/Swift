@inherits ViewModelTemplate<OrderViewModel>
@using System.Linq
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.Frontend
@using Dynamicweb.Ecommerce.Orders
@using Dynamicweb.Ecommerce.ProductCatalog
@using System.Globalization;
@using System.Collections.Generic;
@using System.Text;

@functions {

	string GetPriceLineTitle(string prefix, (string formattedPropertyName, string formattedPropertyValue, string propertyName, double propertyValue) propertyTuple)
	{
		var (formattedPropertyName, formattedPropertyValue, propertyName, propertyValue) = propertyTuple;
		var title = $"{prefix}.{formattedPropertyName} = {formattedPropertyValue}";
		if (!string.IsNullOrEmpty(propertyName) && propertyValue != default)
		{
			title += $"\n{prefix}.{propertyName} = {propertyValue.ToString(CultureInfo.InvariantCulture)}";
		}
		return title;
	}

	List<Dictionary<string, object>> GetPriceLineDictionary(PriceViewModel price, string prefix)
	{
		var properties = new List<(string formattedPropertyName, string formattedPropertyValue, string propertyName, double propertyValue)>
		{
		("ShowPricesWithVat", price.ShowPricesWithVat.ToString(), null, default),
		("PriceWithoutVatFormatted", price.PriceWithoutVatFormatted, "PriceWithoutVat", price.PriceWithoutVat),
		("PriceWithVatFormatted", price.PriceWithVatFormatted, "PriceWithVat", price.PriceWithVat),
		("VatFormatted", price.VatFormatted, "Vat", price.Vat),
		("VATPercentFormatted", price.VATPercentFormatted, "VATPercent", price.VATPercent)
		};

		var priceLinesToBeRendered = new List<Dictionary<string, object>>();

		foreach (var property in properties)
		{
			var title = GetPriceLineTitle(prefix, property);
			var dictionary = new Dictionary<string, object>
			{
			{"title", title},
			{"formattedPropertyName", property.formattedPropertyName},
			{"formattedPropertyValue", property.formattedPropertyValue},
			{"propertyName", property.propertyName ?? null},
			{"propertyValue", property.propertyValue != default ? (object)property.propertyValue : null}
			};	
			priceLinesToBeRendered.Add(dictionary);
		}

		return priceLinesToBeRendered;
	}

	string RenderPrices(PriceViewModel price, string prefix)
	{
		var isPriceZero = price.Price == 0.00;
		var priceLineDict = GetPriceLineDictionary(price, prefix);

		StringBuilder pricesHtml = new StringBuilder();
		string headerTitle = $"Property: {prefix}.*";
		string headerCssClass = isPriceZero ? "opacity-50" : "";
		string spanTitle = $"{prefix}.PriceFormatted = {price.PriceFormatted}\n{prefix}.Price = {price.Price}";

		pricesHtml.Append($"<div title=\"{headerTitle}\" class=\"{headerCssClass}\">");
		pricesHtml.Append($"<span class=\"fw-bold\" title={spanTitle}>{price.PriceFormatted}</span>");

		foreach (var line in priceLineDict)
		{
			pricesHtml.Append($"<br/>");
			var title = line["title"];
			var formattedPropertyName = line["formattedPropertyName"];
			var formattedPropertyValue = line["formattedPropertyValue"];

			pricesHtml.Append($"<small title=\"{title}\" class=\"text-muted\">");
			pricesHtml.Append($"<span class=\"fw-bold\">{formattedPropertyName}:</span> {formattedPropertyValue.ToString()}");
			pricesHtml.Append("</small>");
		}
		pricesHtml.Append("</div>");
		return pricesHtml.ToString();
	}

	public static bool IsDiscountOrderline(OrderLineViewModel orderline)
	{
		return IsOrderDiscountOrderline(orderline) || IsProductDiscountOrderline(orderline);
	}

	public static bool IsOrderDiscountOrderline(OrderLineViewModel orderline)
	{
		return orderline.OrderLineType == OrderLineType.Discount;
	}

	public static bool IsProductDiscountOrderline(OrderLineViewModel orderline)
	{
		return orderline.OrderLineType == OrderLineType.ProductDiscount;
	}

	public static bool IsTaxOrderline(OrderLineViewModel orderline)
	{
		return orderline.OrderLineType == OrderLineType.Tax;
	}

}


<section>
	<h2 class="mt-5">@Translate("Order Details Cheat Sheet")</h2>
	<h5>@Translate("Hover over text for more details")</h5>

	<h1 class="mt-5">@Translate("Order ID"): @Model.Id</h1>
	<table class="table table-clean table-hover table-bordered text-break">
		<thead>
			<tr>
				<th rowspan="2">@Translate("Name")</th>
				<th rowspan="2">@Translate("Qty")</th>
				<th colspan="3" class="text-center">@Translate("Unit price")</th>
				<th colspan="3" class="text-center">@Translate("Total price")</th>
			</tr>
			<tr>
				<!--Unit price-->
				<th>@Translate("Without Discount")</th>
				<th>@Translate("Discount")</th>
				<th>@Translate("With Discount / Price")</th>
				<!--Total price-->
				<th>@Translate("Without Discount")</th>
				<th>@Translate("Discount")</th>
				<th>@Translate("With Discount / Price")</th>
			</tr>
		</thead>
		@foreach (var orderline in Model.OrderLines)
		{
			ProductViewModelSettings productSetting = new ProductViewModelSettings
			{
				LanguageId = orderline.ProductLanguageId,
				CurrencyCode = Model.Price.CurrencyCode,
				CountryCode = Model.DeliveryCountryCode,
				ShopId = Model.ShopId
			};

			var isDiscount = IsProductDiscountOrderline(orderline);
			var rowCssClass = isDiscount ? "bg-secondary text-white" : IsTaxOrderline(orderline) ? "bg-light text-dark" : "bg-primary text-white";
			var isChildOrderline = !string.IsNullOrEmpty(orderline.ParentLineId);
			var innerPadding = isChildOrderline ? "ps-4" : "";

			<tr class="@rowCssClass">
				<td>
					<div class="@innerPadding">
						@if (IsDiscountOrderline(orderline))
						{
							<span>@Translate("DISCOUNT"): </span>
						}

						<span>@orderline.ProductName</span>
						@if (!string.IsNullOrEmpty(orderline.ProductNumber))
						{
							var productNumber = orderline.ProductNumber;
							if (!string.IsNullOrEmpty(orderline.ProductVariantName))
							{
								productNumber += $" - {orderline.ProductVariantName}";
							}
							<br />
							<small>@productNumber</small>
						}

						<br />
						<small class="text-muted"><span class="fw-bold">@Translate("Orderline Id"):</span> @orderline.Id</small>

						<br />
						<small class="text-muted"><span class="fw-bold">@Translate("Orderline type"):</span> @orderline.OrderLineType (@orderline.OrderLineType.GetHashCode())</small>

						@if (isChildOrderline)
						{
							<br />
							<small class="text-muted"><span class="fw-bold">@Translate("Parent Orderline Id"):</span> @orderline.ParentLineId</small>
						}
					</div>

				</td>
				<td>@orderline.Quantity</td>
				<!--Unit price-->
				<td>
					@*RenderOrderlineUnitPriceWithoutDiscount*@
					@if (IsDiscountOrderline(orderline) || IsTaxOrderline(orderline))
					{
						<small class="text-muted">@Translate("Same as") <span class="fw-bold">@Translate("With Discount / Price")</span></small>
					}
					else
					{
						@RenderPrices(orderline.UnitPrice, "OrderLineViewModel orderline.UnitPrice")
					}

				</td>
				<td>
					@*RenderOrderlineUnitDiscount*@
					@if (IsDiscountOrderline(orderline) || IsTaxOrderline(orderline))
					{
						<small class="text-muted">@Translate("Not applicable")</small>
					}
					else
					{
						@RenderPrices(orderline.UnitDiscount, "OrderLineViewModel orderline.UnitDiscount")
					}
				</td>
				<td>
					@*RenderOrderlineUnitPriceWithDiscount*@
					@RenderPrices(orderline.UnitPriceWithProductDiscount, "OrderLineViewModel orderline.UnitPriceWithProductDiscount")
				</td>
				<!--Total price-->
				<td>
					@*RenderOrderlineTotalPriceWithoutDiscount*@
					@if (IsDiscountOrderline(orderline) || IsTaxOrderline(orderline))
					{
						<small class="text-muted">@Translate("Same as") <span class="fw-bold">@Translate("With Discount / Price")</span></small>
					}
					else
					{
						@RenderPrices(orderline.Price, "OrderLineViewModel orderline.Price")
					}
				</td>
				<td>
					@*RenderOrderlineTotalDiscount*@
					@if (IsDiscountOrderline(orderline) || IsTaxOrderline(orderline))
					{
						<small class="text-muted">@Translate("Not applicable")</small>
					}
					else
					{
						@RenderPrices(orderline.TotalDiscount, "OrderLineViewModel orderline.TotalDiscount")
					}

				</td>
				<td>
					@*RenderOrderlineTotalPriceWithDiscount*@
				@RenderPrices(orderline.TotalPriceWithProductDiscounts, "OrderLineViewModel orderline.TotalPriceWithProductDiscounts")
			</td>
		</tr>
	}
		<tr>
			<td colspan="5">@Translate("Total of original price / Total product discounts / Total with all product discounts*")<br /><small>@Translate("*Price after product discounts, before order discounts, fees and taxes")</small></td>
			<td class="bg-success text-white">@RenderPrices(Model.TotalPriceWithoutDiscountsFeesAndTaxes, "Model.TotalPriceWithoutDiscountsFeesAndTaxes")</td>
			<td class="bg-danger text-white">@RenderPrices(Model.TotalProductDiscount, "Model.TotalProductDiscount")</td>
			<td class="bg-success text-white">@RenderPrices(Model.TotalPriceWithoutOrderDiscountsAndFeesAndTaxes, "Model.TotalPriceWithoutOrderDiscountsAndFeesAndTaxes")</td>
		</tr>

		<tr>
			<td colspan="6">
				<span>@Translate("Order discount total")</span>
				<br />
				<small>@Translate("Sum of all order discounts (inclusive and exclusive)")</small>
				<br />
				<small class="text-muted">(Model.TotalOrderDiscount)</small>
			</td>
			<td colspan="2" class="bg-warning text-dark" colspan="2">@RenderPrices(Model.TotalOrderDiscount, "Model.TotalOrderDiscount")</td>
		</tr>
		<tr>
			<td colspan="5">
				<span>@Translate("Sub totals")</span>
				<br />
				<small>@Translate("Sum of all original prices, discounts and discounted price. Before fees and taxes")</small>
				<br />
				<small class="text-muted">(Model.TotalPriceBeforeFeesAndTaxes)</small>
			</td>
			<td class="bg-dark text-white">@RenderPrices(Model.TotalPriceWithoutDiscountsFeesAndTaxes, "Model.TotalPriceWithoutDiscountsFeesAndTaxes")</td>
			<td class="bg-dark text-white">@RenderPrices(Model.TotalDiscount, "Model.TotalDiscount")</td>
			<td class="bg-dark text-white">@RenderPrices(Model.TotalPriceBeforeFeesAndTaxes, "Model.TotalPriceBeforeFeesAndTaxes")</td>
		</tr>
		<tr>
			<td colspan="7">
				<span>@Translate("Payment")</span>
				<br />
				<small><span class="fw-bold">@Translate("Id"):</span> @(Model.PaymentMethod is object ? Model.PaymentMethod.Id : "")</small>
			</td>
			<td>@RenderPrices(Model.PaymentFee, "Model.PaymentFee")</td>
		</tr>
		<tr>
			<td colspan="7">
				<span>@Translate("Shipping")</span>
				<br />
				<small><span class="fw-bold">@Translate("Id"):</span> @(Model.ShippingMethod is object ? Model.ShippingMethod.Id : "")</small>
			</td>
			<td>@RenderPrices(Model.ShippingFee, "Model.ShippingFee")</td>
		</tr>
		<tr>
			<td colspan="7">
				<span>@Translate("Taxes")</span>
				<br />
				<small class="text-muted">(Model.TotalTaxes)</small>
			</td>
			<td>@RenderPrices(Model.TotalTaxes, "Model.TotalTaxes")</td>
		</tr>

		<tr>
			<td colspan="7">
				<span class="fw-bold">@Translate("Total")</span>
				<br>
				<small class="text-muted">(Model.Price)</small>
			</td>
			<td class="bg-info text-dark">@RenderPrices(Model.Price, "Model.Price")</td>
		</tr>
	</table>

	<table class="table table-bordered text-break">
		<tr>
			<td width="12.5%" class="bg-primary text-white"></td>
			<td width="12.5%" class="bg-secondary text-white"></td>
			<td width="12.5%" class="bg-light text-dark"></td>
			<td width="12.5%" class="bg-danger text-white"></td>
			<td width="12.5%" class="bg-warning text-dark"></td>
			<td width="12.5%" class="bg-success text-white"></td>
			<td width="12.5%" class="bg-dark text-white"></td>
			<td width="12.5%" class="bg-info text-dark"></td>
		</tr>
		<tr>
			<td>@Translate("Product orderline")</td>
			<td>@Translate("Discount orderline")</td>
			<td>@Translate("Tax orderline")</td>
			<td>@Translate("Product discount price")</td>
			<td>@Translate("Order discount price")</td>
			<td>@Translate("Product price - with or without discount")</td>
			<td>@Translate("Subtotals of product prices, discounts and product prices with discount - before any fees")</td>
			<td>@Translate("Total order price with discounts, vat, taxes, fees and all.")</td>
		</tr>
	</table>

	<div class="grid">
		<div class="g-col-12 g-col-lg-6">
			<h2 class="mt-5">@Translate("Billing Address")</h2>
			<table class="table table-clean table-striped table-hover text-break">
				<tr>
					<th>Model.CustomerName</th>
					<td>@(Model.CustomerName?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CustomerFirstName</th>
					<td>@(Model.CustomerFirstName?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CustomerMiddleName</th>
					<td>@(Model.CustomerMiddleName?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CustomerSurname</th>
					<td>@(Model.CustomerSurname?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CustomerInitials</th>
					<td>@(Model.CustomerInitials?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CustomerTitle</th>
					<td>@(Model.CustomerTitle?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CustomerPrefix</th>
					<td>@(Model.CustomerPrefix?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CustomerAddress</th>
					<td>@(Model.CustomerAddress?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CustomerAddress2</th>
					<td>@(Model.CustomerAddress2?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CustomerHouseNumber</th>
					<td>@(Model.CustomerHouseNumber?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CustomerCity</th>
					<td>@(Model.CustomerCity?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CustomerRegion</th>
					<td>@(Model.CustomerRegion?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CustomerZip</th>
					<td>@(Model.CustomerZip?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CustomerCountry</th>
					<td>@(Model.CustomerCountry?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CustomerCountryCode</th>
					<td>@(Model.CustomerCountryCode?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CustomerCompany</th>
					<td>@(Model.CustomerCompany?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CustomerEmail</th>
					<td>@(Model.CustomerEmail?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CustomerPhone</th>
					<td>@(Model.CustomerPhone?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CustomerCell</th>
					<td>@(Model.CustomerCell?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>
						<small class="text-danger">@($"GetString(\"Ecom:Order.Customer.Fax\")")</small>
					</th>
					<td class="text-danger">@Translate("Missing in ViewModel")</td>
				</tr>
			</table>
		</div>
		<div class="g-col-12 g-col-lg-6">
			<h2 class="mt-5">@Translate("Shipping/Delivery Address")</h2>
			<table class="table table-clean table-striped table-hover text-break">
				<tr>
					<th>Model.DeliveryName</th>
					<td>@(Model.DeliveryName?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.DeliveryFirstName</th>
					<td>@(Model.DeliveryFirstName?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.DeliveryMiddleName</th>
					<td>@(Model.DeliveryMiddleName?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.DeliverySurname</th>
					<td>@(Model.DeliverySurname?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.DeliveryInitials</th>
					<td>@(Model.DeliveryInitials?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.DeliveryTitle</th>
					<td>@(Model.DeliveryTitle?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.DeliveryPrefix</th>
					<td>@(Model.DeliveryPrefix?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.DeliveryAddress</th>
					<td>@(Model.DeliveryAddress?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.DeliveryAddress2</th>
					<td>@(Model.DeliveryAddress2?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.DeliveryHouseNumber</th>
					<td>@(Model.DeliveryHouseNumber?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.DeliveryCity</th>
					<td>@(Model.DeliveryCity?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.DeliveryRegion</th>
					<td>@(Model.DeliveryRegion?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.DeliveryZip</th>
					<td>@(Model.DeliveryZip?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.DeliveryCountry</th>
					<td>@(Model.DeliveryCountry?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.DeliveryCountryCode</th>
					<td>@(Model.DeliveryCountryCode?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.DeliveryCompany</th>
					<td>@(Model.DeliveryCompany?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.DeliveryEmail</th>
					<td>@(Model.DeliveryEmail?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.DeliveryPhone</th>
					<td>@(Model.DeliveryPhone?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.DeliveryCell</th>
					<td>@(Model.DeliveryCell?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>
						<small class="text-danger">@($"GetString(\"Ecom:Order.Delivery.Fax\")")</small>
					</th>
					<td class="text-danger">@Translate("Missing in ViewModel")</td>
				</tr>
			</table>
		</div>
	</div>

	<h2 class="mt-5">@Translate("Payment method")</h2>
	@if (Model.PaymentMethod is object)
	{
		<table class="table table-clean table-striped table-hover table-bordered text-break">
			<thead>
				<tr>
					<th>@Translate("Icon")</th>
					<th>@Translate("Name")</th>
					<th>@Translate("Price")</th>
					<th>@Translate("Terms")</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td width="100">
						@if (!string.IsNullOrEmpty(Model.PaymentMethod.Icon) && !Model.PaymentMethod.Icon.Equals("/Files"))
						{
							<img width="100" src="@Model.PaymentMethod.Icon" />
						}
					</td>
					<td>
						<h6>@Model.PaymentMethod.Name - @Model.PaymentMethod.Id</h6>
						<small><span class="fw-bold">@Translate("Description"):</span> @Model.PaymentMethod.Description</small><br />
						<small><span class="fw-bold">@Translate("Code"):</span> @Model.PaymentMethod.Code</small>
					</td>
					<td>
						@RenderPrices(Model.PaymentFee, "Model.PaymentFee")
					</td>
					<td>
						<small><span class="fw-bold">@Translate("Code"):</span> @Model.PaymentMethod.TermsCode</small><br />
						<small><span class="fw-bold">@Translate("Description"):</span> @Model.PaymentMethod.TermsDescription</small>
					</td>
				</tr>
			</tbody>
		</table>
	}
	else
	{
		<div class="p-3 mb-2 bg-secondary text-danger">@Translate("PaymentMethodViewModel is NULL")</div>
	}

	<h2 class="mt-5">@Translate("Shipping method")</h2>
	@if (Model.ShippingMethod is object)
	{
		<table class="table table-clean table-striped table-hover table-bordered text-break">
			<thead>
				<tr>
					<th>@Translate("Icon")</th>
					<th>@Translate("Name")</th>
					<th>@Translate("Price")</th>
					<th>@Translate("FreeFeeAmount")</th>
					<th>@Translate("PriceOverMaxWeight")</th>
					<th>@Translate("Agent")</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td width="100">
						@if (!string.IsNullOrEmpty(Model.ShippingMethod.Icon) && !Model.ShippingMethod.Icon.Equals("/Files"))
						{
							<img width="100" src="@Model.ShippingMethod.Icon" />
						}
					</td>
					<td>
						<h6>@Model.ShippingMethod.Name - @Model.ShippingMethod.Id</h6>
						<small><span class="fw-bold">@Translate("Description"):</span> @Model.ShippingMethod.Description</small><br />
						<small><span class="fw-bold">@Translate("Code"):</span> @Model.ShippingMethod.Code</small>
					</td>
					<td>
						@RenderPrices(Model.ShippingFee, "Model.ShippingFee")
					</td>
					<td>
						@Model.ShippingMethod.FreeFeeAmount
					</td>
					<td>
						@Model.ShippingMethod.PriceOverMaxWeight
					</td>
					<td>
						<small><span class="fw-bold">@Translate("Name"):</span> @Model.ShippingMethod.AgentName</small><br />
						<small><span class="fw-bold">@Translate("Code"):</span> @Model.ShippingMethod.AgentCode</small><br />
						<small><span class="fw-bold">@Translate("Service Code"):</span> @Model.ShippingMethod.AgentServiceCode</small><br />
						<small><span class="fw-bold">@Translate("Service Description"):</span> @Model.ShippingMethod.AgentServiceDescription</small>
					</td>
				</tr>
			</tbody>
		</table>
	}
	else
	{
		<div class="p-3 mb-2 bg-secondary text-danger">@Translate("ShippingMethodViewModel is NULL")</div>
	}

	<div class="grid">
		<div class="g-col-12 g-col-lg-4">
			<h2 class="mt-5">@Translate("Payment Transaction Info")</h2>
			<table class="table table-clean table-striped table-hover text-break">
				<tr>
					<th>Model.TransactionCardnumber</th>
					<td>@(Model.TransactionCardnumber?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.TransactionCardType</th>
					<td>@(Model.TransactionCardType?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.TransactionNumber</th>
					<td>@(Model.TransactionNumber?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.TransactionStatus</th>
					<td>@(Model.TransactionStatus?.ToString() ?? "")</td>
				</tr>
			</table>
		</div>
		<div class="g-col-12 g-col-lg-8">
			<h2 class="mt-5">@Translate("Track & Trace")</h2>
			<table class="table table-bordered table-clean text-break">
				<thead>
					<tr>
						<th>@Translate("TrackTraceName")</th>
						<th>@Translate("TrackTraceNumber")</th>
						<th>@Translate("TrackTraceUrl")</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						@*<td>@Model.TrackAndTraceName</td>
							<td>@Model.TrackAndTraceNumber</td>
							<td>@Model.TrackAndTraceURL</td>*@
					</tr>
				</tbody>
			</table>
		</div>
	</div>

	<div class="grid">
		<div class="g-col-12">
			<h2 class="mt-5">@Translate("Standard fields")</h2>
		</div>
		<div class="g-col-12 g-col-lg-4">
			<table class="table table-clean table-striped table-hover text-break">
				<tr>
					<th>@Translate("SystemName")</th>
					<th>@Translate("Value")</th>
				</tr>
				<tr>
					<th>Model.Id</th>
					<td>@(Model.Id?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.IntegrationOrderId</th>
					<td>@(Model.IntegrationOrderId?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.ParentOrderId</th>
					<td>@(Model.ParentOrderId?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CustomerUserId</th>
					<td>@(Model.CustomerUserId.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>
						<small class="text-danger">@($"GetString(\"Ecom:Order.Customer.AccessUserUserName\")")</small>
					</th>
					<td class="text-danger">@Translate("Missing in ViewModel")</td>
				</tr>
				<tr>
					<th>Model.SecondaryUserId</th>
					<td>@(Model.SecondaryUserId.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.SecondaryUserName</th>
					<td>@(Model.SecondaryUserName?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.Reference</th>
					<td>@(Model.Reference?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.ShopId</th>
					<td>@(Model.ShopId?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.StateId</th>
					<td>@(Model.StateId?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.StateName</th>
					<td>@(Model.StateName?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.StateDescription</th>
					<td>@(Model.StateDescription?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.DisplayName</th>
					<td>@(Model.DisplayName?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>
						<small class="text-danger">@($"GetString(\"Ecom:Order.SavedCardName\")")</small>
					</th>
					<td class="text-danger">@Translate("Missing in ViewModel")</td>
				</tr>
			</table>
		</div>
		<div class="g-col-12 g-col-lg-4">
			<table class="table table-clean table-striped table-hover text-break">
				<tr>
					<th>@Translate("SystemName")</th>
					<th>@Translate("Value")</th>
				</tr>
				<tr>
					<th>Model.CreatedAt</th>
					<td>@(Model.CreatedAt.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.Modified</th>
					<td>@(Model.Modified.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CompletedDate</th>
					<td>@(Model.CompletedDate?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.ShippingDate</th>
					<td>@(Model.ShippingDate?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>
						<small class="text-danger">@($"GetString(\"Ecom:Order.Delivery.isPickupPoint\")")</small>
					</th>
					<td class="text-danger">@Translate("Missing in ViewModel")</td>
				</tr>
				<tr>
					<th>Comment</th>
					<td>@(Model.CustomerComment?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>
						<small class="text-danger">@($"GetString(\"Ecom:Order.IsBasedOnRecurringOrder\")")</small>
					</th>
					<td class="text-danger">@Translate("Missing in ViewModel")</td>
				</tr>
				<tr>
					<th>
						<small class="text-danger">@($"GetString(\"Ecom:Order.IsRecurringOrder\")")</small>
					</th>
					<td class="text-danger">@Translate("Missing in ViewModel")</td>
				</tr>
				<tr>
					<th>Model.RecurringOrderId</th>
					<td>@(Model.RecurringOrderId?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>
						<small class="text-danger">@($"GetString(\"Ecom:Order.PointsToUse\")")</small>
					</th>
					<td class="text-danger">@Translate("Missing in ViewModel")</td>
				</tr>
				<tr>
					<th>
						<small class="text-danger">@($"GetString(\"Ecom:Order.RewardTotalPoints\")")</small>
					</th>
					<td class="text-danger">@Translate("Missing in ViewModel")</td>
				</tr>
				<tr>
					<th>
						<small class="text-danger">@($"GetString(\"Ecom:Order.TotalPoints\")")</small>
					</th>
					<td class="text-danger">@Translate("Missing in ViewModel")</td>
				</tr>
			</table>
		</div>
		<div class="g-col-12 g-col-lg-4">
			<table class="table table-clean table-striped table-hover text-break">
				<tr>
					<th>@Translate("SystemName")</th>
					<th>@Translate("Value")</th>
				</tr>
				<tr>
					<th>Model.Volume</th>
					<td>@(Model.Volume.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.Weight</th>
					<td>@(Model.Weight.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CustomerAccepted</th>
					<td>@(Model.CustomerAccepted?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CustomerEan</th>
					<td>@(Model.CustomerEan?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.CustomerRefId</th>
					<td>@(Model.CustomerRefId?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>Model.VoucherCode</th>
					<td>@(Model.VoucherCode?.ToString() ?? "")</td>
				</tr>
				<tr>
					<th>
						<small class="text-danger">@($"GetString(\"Ecom:Order.GiftCardCode\")")</small>
					</th>
					<td class="text-danger">@Translate("Missing in ViewModel")</td>
				</tr>
			</table>
		</div>
	</div>

	<h2 class="mt-5">@Translate("Custom fields")</h2>
	<table class="table table-clean table-striped table-hover text-break">
		<tr>
			<th>@Translate("Name")</th>
			<th>@Translate("SystemName")</th>
			<th>@Translate("Type")</th>
			<th>@Translate("Value")</th>
		</tr>
		@{
			foreach (var field in Model.OrderFields)
			{
				var orderFieldValue = field.Value?.Value?.ToString() ?? "";
				<tr>
					<td>@field.Value.Name</td>
					<td>@field.Value.SystemName</td>
					<td>@field.Value.Type</td>
					<td>@orderFieldValue</td>
				</tr>
			}
		}
	</table>
</section>
