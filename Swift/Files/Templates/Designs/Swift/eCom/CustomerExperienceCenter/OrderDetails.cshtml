@inherits ViewModelTemplate<OrderViewModel>
@using Dynamicweb.Rendering
@using Dynamicweb.Ecommerce.Frontend
@using Dynamicweb.Ecommerce.Orders

@{ 
	string iconPath = "/Files/Icons/";
	string ordersPageLink = Pageview.CurrentParagraph.Item["OrdersPage"] != null ? Pageview.CurrentParagraph.Item["OrdersPage"].ToString() : "";

	string showPricesWithVat = Pageview.Area.EcomPricesWithVat.ToLower();
	bool neverShowVat = string.IsNullOrEmpty(showPricesWithVat);
}

<header class="p-3 border-bottom">
	<div class="d-flex flex-row align-items-center gap-3">
		<h1 class="h6 m-0 flex-fill text-muted">@Translate("Your order")</h1>
		<a href="javascript:print()" class="btn btn-link">Print</a>
	</div>
</header>

<table class="table d-none d-lg-table d-print-table">
	@if (!string.IsNullOrEmpty(Model.Id))
	{
	<tr>
		<td class="">@Translate("Order number")</td>
		<td class="text-end">@Model.Id</td>
	</tr>
	}

	@if (!string.IsNullOrEmpty(Model.CompletedDate.ToString()))
	{
	<tr>
		<td>@Translate("Order date")</td>
		<td class="text-end">@Model.CompletedDate.ToString()</td>
	</tr>
	}

	@if (!string.IsNullOrEmpty(Model.StateName))
	{
	<tr>
		<td>@Translate("Order state")</td>
		<td class="text-end">@Model.StateName</td>
	</tr>
	}

	<tr>
		<td>@Translate("Delivery address")</dt>
		<td class="text-end">
			@if (!string.IsNullOrEmpty(Model.DeliveryName))
			{
				<div>@Model.DeliveryName</div>
			}
			@if (!string.IsNullOrEmpty(Model.DeliveryAddress))
			{
				<div>@Model.DeliveryAddress</div>
			}

			<div>
			@if (!string.IsNullOrEmpty(Model.DeliveryZip))
			{
				<span>@Model.DeliveryZip</span>
			}
			@if (!string.IsNullOrEmpty(Model.DeliveryCity))
			{
				<span>@Model.DeliveryCity</span>
			}
			</div>

			@if (!string.IsNullOrEmpty(Model.DeliveryEmail))
			{
				<div>@Model.DeliveryEmail</div>
			}
			@if (!string.IsNullOrEmpty(Model.DeliveryPhone))
			{
				<div>@Model.DeliveryPhone</div>
			}
		</td>
	</tr>

	<tr>
		<td>@Translate("Billing address")</dt>
		<td class="text-end">
			@if (!string.IsNullOrEmpty(Model.CustomerName))
			{
				<div>@Model.CustomerName</div>
			}
			@if (!string.IsNullOrEmpty(Model.CustomerAddress))
			{
				<div>@Model.CustomerAddress</div>
			}

			<div>
			@if (!string.IsNullOrEmpty(Model.CustomerZip))
			{
				<span>@Model.CustomerZip</span>
			}
			@if (!string.IsNullOrEmpty(Model.CustomerCity))
			{
				<span>@Model.CustomerCity</span>
			}
			</div>
			@if (!string.IsNullOrEmpty(Model.CustomerEmail))
			{
				<div>@Model.CustomerEmail</div>
			}
			@if (!string.IsNullOrEmpty(Model.CustomerPhone))
			{
				<div>@Model.CustomerPhone</div>
			}
		</td>
	</tr>

	@if (Model.ShippingMethod != null) {
	<tr>
		<td>@Translate("Delivery method")</td>
		<td class="text-end">
			@if (!string.IsNullOrEmpty(Model.ShippingMethod.Name))
			{
				<span>@Model.ShippingMethod.Name</span>
			}
		</td>
	</tr>
	}

	@if (Model.PaymentMethod != null) {
		<tr>
			<td>@Translate("Payment method")</td>
			<td class="text-end">
				@if (!string.IsNullOrEmpty(Model.PaymentMethod.Name))
				{
					<span>@Model.PaymentMethod.Name</span>
					if (!string.IsNullOrEmpty(Model.TransactionCardType)) {
						<span>@Model.TransactionNumber</span>
					}
				}
			</td>
		</tr>
	}
</table>

<section class="p-3 mt-3 d-flex flex-column gap-3">
	@foreach (OrderLineViewModel orderline in Model.OrderLines)
	{
		string productName = orderline.ProductName + " " + orderline.ProductVariantId;
		string productImage = "/Admin/Public/GetImage.ashx?image=" + orderline.ProductImage + "&width=210&height=210&Format=WebP&Quality=100";
		string productPriceTotalWithDiscounts = orderline.Price.PriceFormatted;

		var orderlineQuantity = orderline.Quantity;
		var primaryGroupId = "";
		var productId = orderline.ProductId;
		var variantId = orderline.ProductVariantId;

		string productLink = "#";
		string productDetailPageId = GetPageIdByNavigationTag("ProductDetailPage").ToString();
		productLink = "Default.aspx?ID=" + productDetailPageId + "&GroupID=" + primaryGroupId + "&ProductID=" + productId;
		if (!string.IsNullOrEmpty(variantId))
		{
			productLink += "&VariantID=" + variantId;
		}

		OrderLineType orderlineType = orderline.OrderLineType;

		if (orderlineType == OrderLineType.Product || orderlineType == OrderLineType.GiftCard) {
			<article class="grid">
				<div class="g-col-3">
					<a href="@productLink" class="ratio ratio-1x1 d-block bg-light">
						<img src="@productImage" style="object-fit: contain;" alt="@productName" height="210" width="210">
					</a>
				</div>

				<div class="g-col-9">
					<div class="grid grid-9 h-100">

						<div class="g-col-9 g-col-md-5">
							<h2 class="h6 mb-3 fw-bold">
								<a href="@productLink" class="text-dark text-decoration-none">@productName</a>
							</h2>

							<ul class="list-unstyled text-muted mb-0">
								@if (!string.IsNullOrEmpty(orderline.ProductVariantName)) {
									<li>
										<span>@orderline.ProductVariantName</span>
									</li>
								}
								<li>
									<span>@Translate("Price:")</span>
									@if (orderline.UnitPrice.Price != orderline.UnitPriceBeforeDiscount.Price && orderline.UnitPriceBeforeDiscount.Price != 0.0) {
										<span class="text-decoration-line-through text-muted">
											<span>@orderline.UnitPriceBeforeDiscount.PriceFormatted</span>
										</span>
									}
									<span>@orderline.UnitPrice.PriceFormatted</span>

								</li>
								<li>
									<span>@Translate("Quantity:")</span>
									<span>@orderlineQuantity</span>
								</li>
							</ul>
						</div>

						<div class="g-col-9 g-col-md-4">
							<h6 class="h6 fw-bold text-end">
								<span class="text-price">@productPriceTotalWithDiscounts</span>
							</h6>
						</div>
					</div>
				</div>

			</article>
		}
	}

	@{ 
		string orderSubtotal = Model.PriceBeforeFees.PriceFormatted;
		string shippingFee = Model.ShippingFee.PriceFormatted;
		string orderTotalDiscount = Model.TotalDiscount.PriceFormatted;

		// Discounts
		bool orderHasDiscounts = false;
		if (!string.IsNullOrEmpty(orderTotalDiscount))
		{
			orderHasDiscounts = true;
		}

		<div class="cart-total grid mt-3">
			<div class="g-col-12">
				<dl class="m-0">

					<div class="d-flex my-1 pt-4 border-dark border-top">
						<dt class="flex-fill fw-bold">@Translate("Subtotal")</dt>
						<dd class="flex-fill mb-0 text-end">
							<span class="text-price fw-bold">@orderSubtotal</span>
							@if (!neverShowVat && showPricesWithVat == "false")
							{
								<span class="fs-7 fw-normal d-block">@Translate("Excl. VAT")</span>
							}
						</dd>
					</div>

					@if (Model.PaymentFee.Price != 0.0)
					{
						<div class="d-flex my-1">
							<dt class="flex-fill fw-normal">@Translate("Payment")</dt>
							<dd class="flex-fill mb-0 text-end">
								<span>@Model.PaymentFee.PriceFormatted</span>
							</dd>
						</div>
					}

					<div class="d-flex my-1">
						<dt class="flex-fill fw-normal">@Translate("Delivery")</dt>
						<dd class="flex-fill mb-0 text-end">
						@if (!string.IsNullOrEmpty(shippingFee))
						{
							<span>@shippingFee</span>
						}
						</dd>
					</div>

					<div class="my-4 border-dark border-top"></div>

					<div class="d-flex my-1 h5 fw-bold">
						<dt class="flex-fill">@Translate("Total")</dt>
						<dd class="flex-fill mb-0 text-end">
							<span>@Model.Price.PriceFormatted</span>
							@if (!neverShowVat && showPricesWithVat == "false")
							{
								<span class="fs-7 fw-normal d-block">@Translate("Excl. VAT")</span>
							}
						</dd>
					</div>

					@if (!neverShowVat && Model.Price.Vat != 0.0) {
						<div class="d-flex my-1">
							<dt class="flex-fill fw-normal">@Translate("VAT")</dt>
							<dd class="flex-fill mb-0 text-end">
							@if (!string.IsNullOrEmpty(Model.Price.VatFormatted))
							{
								<span>@Model.Price.VatFormatted</span>
							}
							</dd>
						</div>

						if (showPricesWithVat == "false") {
							<div class="d-flex my-1">
								<dt class="flex-fill fw-normal">@Translate("Total incl. VAT")</dt>
								<dd class="flex-fill mb-0 text-end">
								@if (!string.IsNullOrEmpty(Model.Price.PriceWithVatFormatted))
								{
									<span>@Model.Price.PriceWithVatFormatted</span>
								}
								</dd>
							</div>
						}
					}

					@if (orderHasDiscounts && Model.TotalDiscount.Price != 0.0)
					{
						<div class="d-flex my-1">
							<dt class="flex-fill fw-normal">@Translate("Discount")</dt>
							<dd class="flex-fill mb-0 text-end">
								<span>@orderTotalDiscount</span>
							</dd>
						</div>
					}
				</dl>
			</div>
		</div>
	}
</section>
