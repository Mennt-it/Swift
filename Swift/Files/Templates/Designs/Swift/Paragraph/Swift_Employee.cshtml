@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>

@{
	var employeeItems = Model.Item?.GetItems("EmployeeItems") ?? Enumerable.Empty<Dynamicweb.Frontend.ItemViewModel>().ToList();
	string layout = Model.Item.GetRawValueString("Layout", string.Empty);
	string boxedLayout = Model.Item.GetRawValueString("BoxedLayout", string.Empty);
	string cicleLayout = Model.Item.GetRawValueString("CircleLayout", string.Empty);
	string layoutClass = string.Empty;
	string employeeInfoAlignment = "d-flex flex-column gap-2";
	int gridSettings = !string.IsNullOrEmpty(Model.Item.GetInt32("GridSettings").ToString()) ? Model.Item.GetInt32("GridSettings") : 4;
	string gridSettingsClass = string.Empty;
	string theme = !string.IsNullOrWhiteSpace(Model.Item.GetRawValueString("Theme")) ? " theme " + Model.Item.GetRawValueString("Theme").Replace(" ", "").Trim().ToLower() : string.Empty;
	string themeClass = !string.IsNullOrEmpty(theme) ?  theme + " shadow p-4" : string.Empty;
	bool roundedEdges = !string.IsNullOrEmpty(Model.Item.GetBoolean("RoundedEdges").ToString()) ? Model.Item.GetBoolean("RoundedEdges") : false;
	string roundedEdgesClass = roundedEdges ? " rounded-5 overflow-hidden" : string.Empty;
	string ratio = Model.Item.GetRawValueString("ImageAspectRatio", string.Empty);
	ratio = ratio != "0" ? ratio : string.Empty;
	string ratioCssClass = ratio != string.Empty ? "ratio" : string.Empty;
	string ratioVariable = ratio != string.Empty ? "style=\"--bs-aspect-ratio: " + ratio + "\"" : string.Empty;
	string imageObjectFit = ratio != string.Empty ? "object-fit: cover;" : "object-fit: contain;";
	string imageOriginalSize = ratio == string.Empty ? "mw-100 mh-100" : string.Empty;
	string iconPath = "/Files/Templates/Designs/Swift/Assets/icons/";

	switch (gridSettings)
	{
		case 2:
			gridSettingsClass = " grid-1 grid-md-2";
			break;
		case 3:
			gridSettingsClass = " grid-1 grid-md-3";
			break;
		case 4:
			gridSettingsClass = " grid-1 grid-md-2 grid-lg-3 grid-xl-4";
			break;
		case 5:
			gridSettingsClass = " grid-1 grid-md-2 grid-lg-3 grid-xl-5";
			break;
	}

	if (layout == "Boxed")
	{
		switch (boxedLayout)
		{
			case "ImageTop":
				layoutClass = "grid grid-1";
				break;
			case "ImageLeft":
				layoutClass = "grid grid-1 grid-sm-2";
				break;
		}
	}
	else if (layout == "Circle")
	{
		switch (cicleLayout)
		{
			case "ImageCircleTop":
				layoutClass = "grid grid-1";
				employeeInfoAlignment = employeeInfoAlignment + " align-items-center text-center";
				break;
			case "imageCircleLeft":
				layoutClass = "grid grid-1 grid-sm-2 align-items-center";
				employeeInfoAlignment = employeeInfoAlignment + " align-items-center align-items-sm-start text-center text-sm-start";
				break;
		}
	}
}

<div class="grid@(gridSettingsClass) gap-md-4">

	@foreach (var item in employeeItems)
	{
		string image = item.GetString("Image", string.Empty);
		image = Dynamicweb.Context.Current.Server.UrlEncode(image);
		string imagePath = "/Admin/Public/GetImage.ashx?Image=" + image + "&Width=480&crop=0";
		string name = item.GetString("Name", string.Empty);
		string jobTitle = item.GetString("JobTitle", string.Empty);
		string phoneNumber = item.GetString("PhoneNumber", string.Empty);
		string email = item.GetString("Email", string.Empty);
		string socialMediaLinkLabel = item.GetString("SocialMediaLinkLabel", string.Empty);
		string socialMediaLink = item.GetString("SocialMediaLink", string.Empty);
		string socialMediaIcon = item.GetString("SocialMediaIcon", string.Empty);

		<div class="@layoutClass@(themeClass)@(roundedEdgesClass)">

			@if (!string.IsNullOrEmpty(imagePath))
			{ 
				if (layout == "Boxed")
				{
					<div class="@(@ratioCssClass)" @ratioVariable>
						<img src="@imagePath" class="@imageOriginalSize@(roundedEdgesClass)" alt="@name" style="@imageObjectFit">
					</div>
				}
				else if (layout == "Circle")
				{
					<div class="ratio ratio-1x1">
						<img src="@imagePath" class="rounded-circle" alt="@name" style="object-fit:cover">
					</div> 
				}
			}

			<div class="@employeeInfoAlignment">
				<h5>@name</h5>

				@if (!string.IsNullOrEmpty(jobTitle))
				{ 
					<div class="d-flex gap-2 opacity-85">
						<span class="icon-2">@ReadFile(iconPath + "briefcase.svg")</span>
						<span class="fs-7 lh-sm">@jobTitle</span>
					</div>				
				}
				
				@if (!string.IsNullOrEmpty(phoneNumber))
				{ 
					<div class="d-flex gap-2 opacity-85">
						<span class="icon-2">@ReadFile(iconPath + "phone-call.svg")</span>
						<span class="fs-7 lh-sm">@phoneNumber</span>
					</div>				
				}
				
				@if (!string.IsNullOrEmpty(email))
				{
					<div class="d-flex gap-2 opacity-85">
						<span class="icon-2">@ReadFile(iconPath + "mail.svg")</span>
						<span class="fs-7 lh-sm text-break">@email</span>
					</div>
				}
				 
				@if (!string.IsNullOrEmpty(socialMediaLink) || !string.IsNullOrEmpty(socialMediaIcon) || !string.IsNullOrEmpty(socialMediaLinkLabel))
				{
					<a href="@socialMediaLink" class="d-flex gap-2 opacity-85">
						
						@if (!string.IsNullOrEmpty(socialMediaIcon)) 
						{ 
						<span class="icon-2">@ReadFile(socialMediaIcon)</span>
						}
						@if (!string.IsNullOrEmpty(socialMediaLinkLabel)) 
						{ 
						<span class="fs-7 lh-sm text-break">@socialMediaLinkLabel</span>
						}

					</a>
				}
			</div>
		</div>
	}
</div>
