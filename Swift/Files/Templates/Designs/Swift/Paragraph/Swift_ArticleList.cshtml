@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>

@{ 
	string layoutDesktop = Model.Item.GetRawValueString("LayoutDesktop");
	string layoutMobile = Model.Item.GetRawValueString("LayoutMobile");
	string gridLayoutDesktop = Model.Item.GetRawValueString("GridLayoutDesktop");
	string gridLayoutMobile = Model.Item.GetRawValueString("GridLayoutMobile");
	string wrapperStart = $"<div class=\"grid grid-{gridLayoutMobile} grid-lg-{gridLayoutDesktop} gap-4\">";
	string wrapperEnd = "</div>";
	bool disableCarousel = false;

	if (layoutDesktop == "carousel" && layoutMobile == "carousel")
	{
		wrapperStart = $"<div id=\"articleCarousel_{Pageview.CurrentParagraph.ID}\">";
	}
	if (layoutDesktop == "grid" && layoutMobile == "carousel")
	{
		disableCarousel = false;
		wrapperStart = $"<div class=\"grid d-block d-lg-grid grid-lg-{gridLayoutDesktop} gap-4\" id=\"articleCarousel_{Pageview.CurrentParagraph.ID}\">";
	}
	if (layoutDesktop == "carousel" && layoutMobile == "grid")
	{
		disableCarousel = false;
		wrapperStart = $"<div class=\"grid d-lg-block grid-{gridLayoutMobile} gap-4\" id=\"articleCarousel_{Pageview.CurrentParagraph.ID}\">";
	} 
}

@wrapperStart

@RenderItemList(new
{
	ItemType = "Swift_Article",
	ListTemplate = "ItemPublisher/List/List.cshtml",
	ItemFieldsList = "*",
	ListSourceType = "Page",
	ListSourcePage = @Model.PageID.ToString(),
	IncludeAllChildItems = true,
	ListPageSize = "10",
	IncludeParagraphItems = true
})

@wrapperEnd

@if (layoutDesktop == "carousel" || layoutMobile == "carousel")
{

	<script type="module">
				var slider = tns({
					container: "#articleCarousel_@Pageview.CurrentParagraph.ID",
					controls: false,
					nav: false,
					autoplay: false,
					items: 1.25,
					loop: false,
					rewind: false,
					arrowKeys: false,
					lazyload: true,
					swipeAngle: 30,
					mouseDrag: true,
					preventScrollOnTouch: 'auto',
					gutter: 16,
					responsive: {
						992: {
							disable: @disableCarousel,
							items: 4,
							controls: true,
							controlsText: [
								'<span class="tns-controls-icon" style="height:3em; width: 3em;"><span class="visually-hidden">Previous</span><span class="icon-3"><svg viewBox="0 0 16 16" class="bi bi-arrow-left" fill="currentColor" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z"/></svg></span></span>',
								'<span class="tns-controls-icon" style="height:3em; width: 3em;"><span class="visually-hidden">Next</span><span class="icon-3"><svg viewBox="0 0 16 16" class="bi bi-arrow-right" fill="currentColor" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z"/></svg></span></span>'
							],

						}
					}
				});
	</script>
}
