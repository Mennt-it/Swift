@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb
@using Dynamicweb.Ecommerce.ProductCatalog

@{ 
	IList<FieldValueViewModel> groupFields = group.GroupFields != null ? group.GroupFields : null;

	if (groupFields != null)
	{
		var groupName = group.Name;
		string ratio = Model.Parameters["ImageAspectRatio"].ToString();
		ratio = ratio != "0" ? ratio : string.Empty;
		string ratioCssClass = ratio != string.Empty ? " ratio" : "";
		string ratioVariable = ratio != "" ? "style=\"--bs-aspect-ratio: " + ratio + "\"" : string.Empty;
		string productGroupPromotionImage = string.Empty;
		string productGroupPromotionImagePath = string.Empty;
		string productGroupPromotionDescription = string.Empty;
		string productGroupPromotionLinkLabel = string.Empty;
		string productGroupPromotionLink = string.Empty;
		string productGroupPromotionImageTheme = Model.Parameters.ContainsKey("ProductGroupPromotionImageTheme") ? Model.Parameters["ProductGroupPromotionImageTheme"].ToString().ToLower() : string.Empty;
		string gridGap = !string.IsNullOrEmpty(productGroupPromotionImageTheme) ? "gap-0" : "gap-3";
		string themePadding = !string.IsNullOrEmpty(productGroupPromotionImageTheme) ? "p-3" : "p-0";

		foreach (FieldValueViewModel field in groupFields)
		{
			if (field.SystemName == "ProductGroupPromotionImage")
			{
				productGroupPromotionImage = field.Value != null ? field.Value.ToString() : string.Empty;
				productGroupPromotionImagePath = "/Admin/Public/GetImage.ashx?Width=" + 480 + "&Height=" + 480 + "&crop=0&image=" + "Files/Images/" + productGroupPromotionImage;
			}
			if (field.SystemName == "ProductGroupPromotionDescription")
			{
				productGroupPromotionDescription = field.Value != null ? field.Value.ToString() : string.Empty;
			}
			if (field.SystemName == "ProductGroupPromotionLinkLabel")
			{
				productGroupPromotionLinkLabel = field.Value != null ? field.Value.ToString() : string.Empty;
			}
			if (field.SystemName == "ProductGroupPromotionLink")
			{
				productGroupPromotionLink = field.Value != null ? field.Value.ToString() : string.Empty;
			}
		}

		<div class="grid grid-1 @gridGap@(productGroupPromotionImageTheme)">
			@if (productGroupPromotionImage != string.Empty)
			{
				productGroupPromotionLink = !string.IsNullOrEmpty(productGroupPromotionLink) ? productGroupPromotionLink : link;

				<a href="@productGroupPromotionLink" title="@groupName">
					<figure class="m-0@(ratioCssClass)" @ratioVariable>
						<img class="img-fluid" src="@productGroupPromotionImagePath" alt="@groupName" style="object-fit:cover">
					</figure>
				</a>
			}
			@if (!string.IsNullOrEmpty(productGroupPromotionDescription) || !string.IsNullOrEmpty(productGroupPromotionLinkLabel))
			{
				<div class="grid grid-1 @themePadding ">

					@if (!string.IsNullOrEmpty(productGroupPromotionDescription))
					{
						<h6 class="m-0">@productGroupPromotionDescription</h6>
					}
					@if (!string.IsNullOrEmpty(productGroupPromotionLinkLabel))
					{
						productGroupPromotionLink = !string.IsNullOrEmpty(productGroupPromotionLink) ? productGroupPromotionLink : link;

						<a href="@productGroupPromotionLink" title="@productGroupPromotionLinkLabel" class="btn btn-link text-start border-0 p-0">@productGroupPromotionLinkLabel</a>
					}
				</div>
			}
		</div>
	} 
}