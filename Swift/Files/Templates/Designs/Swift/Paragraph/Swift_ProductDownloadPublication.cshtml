@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Ecommerce.ProductCatalog
@using Dynamicweb.Ecommerce.CustomerExperienceCenter.Favorites


@{
	ProductViewModel product = null;
	if (Dynamicweb.Context.Current.Items.Contains("ProductDetails"))
	{
		product = (ProductViewModel)Dynamicweb.Context.Current.Items["ProductDetails"];
	}
	else if (Pageview.Page.Item["DummyProduct"] != null)
	{
		var pageViewModel = Dynamicweb.Frontend.ContentViewModelFactory.CreatePageInfoViewModel(Pageview.Page);
		ProductListViewModel productList = pageViewModel.Item.GetValue("DummyProduct") != null ? pageViewModel.Item.GetValue("DummyProduct") as ProductListViewModel : new ProductListViewModel();

		if (productList?.Products is object)
		{
			product = productList.Products[0];
		}
	}
}

@if (product is object)
{
	string horizontalAlign = Model.Item.GetRawValueString("HorizontalAlignment", string.Empty);
	horizontalAlign = horizontalAlign == "center" ? "justify-content-center" : horizontalAlign;
	horizontalAlign = horizontalAlign == "end" ? "justify-content-end" : horizontalAlign;
	horizontalAlign = horizontalAlign == "full" ? string.Empty : horizontalAlign;

	string buttonSize = Model.Item.GetRawValueString("ButtonSize", "regular");

	switch (buttonSize)
	{
		case "small":
			buttonSize = " btn-sm";
			break;
		case "regular":
			buttonSize = string.Empty;
			break;
		case "large":
			buttonSize = " btn-lg";
			break;
	}

	string iconPath = "/Files/icons/";

	string flexFill = Model.Item.GetRawValueString("HorizontalAlignment", "") == "full" ? "flex-fill" : string.Empty;
	string fullWidth = Model.Item.GetRawValueString("HorizontalAlignment", "") == "full" ? "w-100" : string.Empty;
	string icon = Model.Item.GetRawValueString("Icon", iconPath + "printer.svg");
	string label = !icon.Contains("_none") ? $"<span class=\"icon-2\">{ReadFile(icon)}</span>" : string.Empty;
	label += !icon.Contains("_none") && !Model.Item.GetBoolean("HideButtonText") ? " " : string.Empty;
	label += !Model.Item.GetBoolean("HideButtonText") && !string.IsNullOrEmpty(Model.Item.GetString("Title")) ? Model.Item.GetString("Title") : string.Empty;

	var selectedCatalogs = Model.Item.GetList("SelectedCatalogs").SelectedOptions;
	int catalogCount = 0;

	var ecomLanguages = Dynamicweb.Ecommerce.Services.Languages.GetLanguages();
	var currencies = Dynamicweb.Ecommerce.Services.Currencies.GetAllCurrencies();
	var languageId = Dynamicweb.Ecommerce.Common.Context.LanguageID;

	<div class="d-flex @horizontalAlign @fullWidth item_@Model.Item.SystemName.ToLower()">
		<button type="button" class="btn btn-primary @(buttonSize) @flexFill" data-bs-toggle="modal" data-bs-target="#DownloadPublicationModal@(product.Id)_@(product.VariantId)_@Pageview.CurrentParagraph.ID" style="white-space: nowrap" title="@Model.Item.GetString("Title")" id="DownloadPublication@(product.Id)_@(product.VariantId)_@Pageview.CurrentParagraph.ID">
			@if (!Model.Item.GetBoolean("HideButtonText"))
			{
				<span class="text-nowrap d-flex align-items-center justify-content-center gap-2">
					@label
				</span>
			}
			else
			{
				@label
			}
		</button>
	</div>

	<div class="modal fade" id="DownloadPublicationModal@(product.Id)_@(product.VariantId)_@Pageview.CurrentParagraph.ID" tabindex="-1" aria-labelledby="#DownloadPublicationModalLabel@(product.Id)_@(product.VariantId)_@Pageview.CurrentParagraph.ID" aria-hidden="true">
		<div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
			<div class="modal-content">
				<form target="_blank" action="/Default.aspx" method="post">
					<input type="hidden" name="mainproductid" value="@product.Id">
					<input type="hidden" name="print" value="true">

					@if (!string.IsNullOrEmpty(product.VariantId))
					{
						<input type="hidden" name="VariantId" value="@product.VariantId">
					}

					<div class="modal-header">
						<h1 class="modal-title fs-5" id="DownloadPublicationModalLabel@(product.Id)_@(product.VariantId)_@Pageview.CurrentParagraph.ID">@Translate("Publication for print")</h1>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body grid gap-0 p-0">
						<div class="g-col-3 border-end p-3">

							@*@if (Model.Item.GetBoolean("LanguageSelector") && ecomLanguages.Count() > 1) 
							{ 
								<div class="mb-4">
									<label class="form-label">@Translate("Language")</label>
									<select name="languageid" class="form-select" aria-label="@Translate("Language")">
										@foreach (var language in ecomLanguages)
										{
											<option value="@language.LanguageId">@language.GetDisplayName()</option>
										}
									</select>
								</div>
							}*@

							@if (Model.Item.GetBoolean("ShowPriceSelector"))
							{
								<div class="mb-4">
									<label class="form-label">@Translate("Show price")</label>
									<div class="form-check">
										<input class="form-check-input" type="radio" name="hideprice" value="false" id="HidePriceFalse_@(product.Id)_@(product.VariantId)_@Pageview.CurrentParagraph.ID" checked onchange="document.querySelector('#CurrencySelector_@(product.Id)_@(product.VariantId)_@(Pageview.CurrentParagraph.ID)').classList.remove('d-none')">
										<label class="form-check-label" for="HidePriceFalse_@(product.Id)_@(product.VariantId)_@Pageview.CurrentParagraph.ID">
											@Translate("Yes")
										</label>
									</div>
									<div class="form-check">
										<input class="form-check-input" type="radio" name="hideprice" value="true" id="HidePriceTrue_@(product.Id)_@(product.VariantId)_@Pageview.CurrentParagraph.ID" onchange="document.querySelector('#CurrencySelector_@(product.Id)_@(product.VariantId)_@(Pageview.CurrentParagraph.ID)').classList.add('d-none')">
										<label class="form-check-label" for="HidePriceTrue_@(product.Id)_@(product.VariantId)_@Pageview.CurrentParagraph.ID">
											@Translate("No")
										</label>
									</div>
								</div>
							}

							@*@if (Model.Item.GetBoolean("CurrencySelector"))
							{
								<div class="mb-4" id="CurrencySelector_@(product.Id)_@(product.VariantId)_@Pageview.CurrentParagraph.ID">
									<label class="form-label">@Translate("Currency")</label>
									<select name="currencycode" class="form-select" aria-label="@Translate("Currency")">
										@foreach (var currency in currencies)
										{
											<option value="@currency.Code">@currency.GetName(languageId)</option>
										}
									</select>
								</div>
							}*@
						</div>
						<div class="g-col-9 p-3">
							<div class="thumb-selector grid">
								@foreach (var catalog in selectedCatalogs)
								{
									var selected = catalogCount == 0 ? "checked" : string.Empty;
									var radioId = $"CatalogCheck_{Model.ID}_{catalog.Value}";
									var page = Dynamicweb.Content.Services.Pages.GetPage(Convert.ToInt32(catalog.Value));
									string image = page.Item["Thumbnail"] !=  null ? page.Item["Thumbnail"].ToString() : "";
									string hideRadio = !string.IsNullOrEmpty(image) ? "d-none" : "";
									string radioStartPadding = !string.IsNullOrEmpty(image) ? "p-0" : "";

									<div class="g-col-3">
										<div class="form-check @radioStartPadding">
											<input class="form-check-input ps-3 @hideRadio" type="radio" name="ID" value="@catalog.Value" id="@radioId" @selected>
											<label class="thumbnail form-check-label d-flex flex-column" for="@radioId">
												@if (!string.IsNullOrEmpty(image)) 
												{ 
													<span class="thumbnail-image mb-2" >
														<img class="w-100 h-100" src="/Admin/Public/GetImage.ashx?image=@image&width=200&format=webp" />
													</span>
												}
												<span class="fw-bold">@catalog.Name </span>
											</label>
										</div>
									</div>

									catalogCount++;
								}
							</div>
						</div>
					</div>
					<div class="modal-footer">
						<button type="submit" class="btn btn-primary">@Translate("Print")</button>
					</div>
				</form>
			</div>
		</div>
	</div>

}
else if (Pageview.IsVisualEditorMode)
{
	<div class="alert alert-dark m-0">@Translate("No products available")</div>
}
