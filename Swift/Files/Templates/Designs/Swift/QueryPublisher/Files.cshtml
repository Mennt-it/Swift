@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using Dynamicweb

@functions {
	public string[] supportedImageFormats { get; set; }
	public string[] supportedDocumentFormats { get; set; }
	public string[] allSupportedFormats { get; set; }
}

@{ 
	var assetsList = GetLoop("QueryResultItem");
	string iconPath = "/Files/Templates/Designs/Swift/Assets/icons/";

	@* Supported formats *@
	supportedImageFormats = new string[] { ".jpg", ".jpeg", ".webp", ".png", ".gif", ".bmp", ".tiff" };
	supportedDocumentFormats = new string[] { ".pdf", ".docx", ".xlsx", ".ppt", "pptx" };
	allSupportedFormats = supportedImageFormats.Concat(supportedDocumentFormats).ToArray();
}

<div class="grid">
	<div class="g-col-12">

	</div>
	<div class="g-col-12 g-col-lg-3">

	</div>
	<div class="g-col-12 g-col-lg-9">
		@if (assetsList.Count > 0) { 
			<div class="grid gap-4">
				@foreach (var asset in assetsList) {
					foreach (string format in allSupportedFormats)
					{
						string fileName = asset.GetString("FileName");
						bool imageFound = false;

						if (fileName.Contains(format))
						{
							<div class="g-col-6 g-col-lg-3">
								<div class="ratio mb-3" style="--bs-aspect-ratio: 100%">
									@foreach (string imageFormat in supportedImageFormats)
									{
										if (fileName.Contains(imageFormat))
										{
											string imagePath = !string.IsNullOrEmpty(asset.GetString("DirectoryRelativePath")) ? "/Admin/Public/GetImage.ashx?image=/Files" + asset.GetString("DirectoryRelativePath") + "/" + fileName + "&width=640&format=webp" : "";
											<img src="@imagePath" loading="lazy" style="object-fit: cover" />

											imageFound = true;
										} 
									}

									@if (imageFound == false) { 
										<div class="position-absolute bg-black bg-opacity-10 w-100 h-100"></div>
										<div class="d-flex align-items-center justify-content-center">
											<span class="icon-4">@ReadFile(iconPath + "file.svg")</span>
										</div>
									}
								</div>
								<div class="d-flex">
									<h3 class="h6 flex-fill">@fileName</h3>
									<span class="icon-2">@ReadFile(iconPath + "info.svg")</span>
								</div>
								<div class="fs-6 opacity-75">
									@(asset.GetString("FileSize"))kb
								</div>
							</div>
						}
					}
				}
			</div>
		}
	</div>
</div>
