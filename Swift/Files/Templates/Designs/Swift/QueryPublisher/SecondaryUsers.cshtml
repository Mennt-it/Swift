@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using Dynamicweb

@{
	string searchTerm = string.Empty;
	if (!string.IsNullOrEmpty(Dynamicweb.Context.Current.Request["userquery"]))
	{
		searchTerm = Dynamicweb.Context.Current.Request["userquery"];

	}
	string iconPath = "/Files/Templates/Designs/Swift/Assets/icons/";

	var queryItems = GetLoop("QueryResultItem");

	bool nowImpersonating = !string.IsNullOrEmpty(Dynamicweb.Context.Current.Request.QueryString.Get("NowImpersonating")) ? Convert.ToBoolean(Dynamicweb.Context.Current.Request.QueryString.Get("NowImpersonating")) : false;
}

<header class="px-3 py-2 border-bottom">
	<div class="grid grid-1 grid-lg-2 align-items-lg-center">
		@if (!string.IsNullOrEmpty(searchTerm))
		{
			<div class="d-flex align-items-baseline justify-content-between justify-content-lg-start gap-3">
				<h1 class="h6 mb-0">@Translate("You have searched for") "@searchTerm"</h1>
				<button type="button" class="btn btn-sm btn-link p-0" onclick="window.location.assign('Default.aspx?ID=@(Pageview.ID)');">@Translate("Reset")</button>
			</div>

		}
		else
		{
			<h1 class="h6 mb-0">@Translate("Sign in as a customer")</h1>
		}
		<div class="position-relative type-ahead-dropdown">
			<form method="get" class="suggest-form">
				<div class="d-flex align-items-center">
					<label for="userQuery_@Pageview.CurrentParagraph.ID" class="visually-hidden">@Translate("Search for customer")</label>
					<span class="position-absolute icon-2 reset-search px-3">
						@ReadFile(iconPath + "search.svg")
					</span>
					<input id="userQuery_@Pageview.CurrentParagraph.ID"
						   type="search"
						   class="form-control form-control-sm rounded-pill type-ahead-field py-2 ps-5 pe-5"
						   placeholder="@Translate("Search for customer")"
						   aria-label="@Translate("Search for customer")"
						   aria-describedby="userQuery_@Pageview.CurrentParagraph.ID"
						   name="userquery"
						   value="@searchTerm"
						   data-original="@searchTerm">

					<button type="button"
							onclick="var f = document.getElementById('userQuery_@Pageview.CurrentParagraph.ID'); f.value = ''; f.focus();"
							class="btn position-absolute end-0 icon-2 reset-search"
							aria-label="@Translate("Clear search field")"
							style="opacity: 0; visibility: hidden;">
						@ReadFile(iconPath + "x.svg")
					</button>
				</div>
			</form>
		</div>
	</div>
</header>


@if (queryItems.Count() != 0)
{

	@* Bootstrap only support horizontally scrolled tables. Thus, we need to have separate designs for large and small screens.  *@

	<table class="table d-none d-lg-table table-striped table-hover align-middle mb-0">
		<thead>
			<tr>
				<th>
					@Translate("ID")
				</th>
				<th>
					@Translate("Customer")
				</th>
				<th>
					@Translate("Email")
				</th>
				<th>
					@Translate("Address")
				</th>
				<th aria-hidden="true">
					<span>
						&nbsp;
					</span>
				</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var result in queryItems)
			{
				string UserLink = $"/Default.aspx?ID={Pageview.Page.ID}&amp;DWExtranetSecondaryUserSelector={result.GetInteger("UserID")}&NowImpersonating=True";

				<tr class="position-relative">
					<td>
						@if (!string.IsNullOrWhiteSpace(result.GetString("UserID")))
						{
							@result.GetInteger("UserID")
						}
					</td>
					<td>
						@if (!string.IsNullOrWhiteSpace(result.GetString("Name")))
						{
							@result.GetString("Name")
						}
					</td>
					<td>
						@if (!string.IsNullOrWhiteSpace(result.GetString("UserEmail")))
						{
							@result.GetString("UserEmail")
						}
					</td>
					<td>
						@if (!string.IsNullOrWhiteSpace(result.GetString("Address")))
						{
							<text>
								@result.GetString("Address"),
							</text>
						}
						@if (!string.IsNullOrWhiteSpace(result.GetString("Zip")))
						{
							@result.GetString("Zip")
						}
						@if (!string.IsNullOrWhiteSpace(result.GetString("City")))
						{
							@result.GetString("City")
						}
					</td>
					<td class="text-end">
						<a href="@UserLink" class="d-block text-decoration-none">
							<span class="btn btn-sm btn-secondary stretched-link opacity-0 opacity-100-hover">
								@Translate("Sign in")
							</span>
						</a>
					</td>
				</tr>
			}
		</tbody>
	</table>

	@* Bootstrap only support horizontally scrolled tables. Thus, we need to have separate designs for large and small screens.  *@

	<table class="table d-table d-lg-none table-borderless table-clean align-top mb-0">
		@foreach (var result in queryItems)
		{
			string UserLink = $"/Default.aspx?ID={Pageview.Page.ID}&amp;DWExtranetSecondaryUserSelector={result.GetInteger("UserID")}&NowImpersonating=True";

			<tbody class="border-bottom">
				<tr>
					<th class="fs-8">
						@Translate("ID")
					</th>
					<td class="text-end">
						@if (!string.IsNullOrWhiteSpace(result.GetString("UserID")))
						{
							@result.GetInteger("UserID")
						}
					</td>
				</tr>
				<tr>
					<th class="fs-8">
						@Translate("Customer")
					</th>
					<td class="text-end">
						@if (!string.IsNullOrWhiteSpace(result.GetString("Name")))
						{
							@result.GetString("Name")
						}
					</td>
				</tr>
				<tr>
					<th class="fs-8">
						@Translate("Email")
					</th>
					<td class="text-end text-break">
						@if (!string.IsNullOrWhiteSpace(result.GetString("UserEmail")))
						{
							@result.GetString("UserEmail")
						}
					</td>
				</tr>
				<tr>
					<th class="fs-8">
						@Translate("Address")
					</th>
					<td class="text-end">
						@if (!string.IsNullOrWhiteSpace(result.GetString("Address")))
						{
							<text>
								@result.GetString("Address"),
							</text>
						}
						@if (!string.IsNullOrWhiteSpace(result.GetString("Zip")))
						{
							@result.GetString("Zip")
						}
						@if (!string.IsNullOrWhiteSpace(result.GetString("City")))
						{
							@result.GetString("City")
						}
					</td>
				</tr>
				<tr>
					<td colspan="2">
						<a href="@UserLink" class="d-block text-decoration-none">
							<div class="d-grid">
								<span class="btn btn-sm btn-secondary">
									@Translate("Sign in")
								</span>
							</div>
						</a>
					</td>
				</tr>
			</tbody>
		}
	</table> 
	
	var pageLoopItem = GetLoop("DwPaging.LoopPageGroup");
	var pageCount = GetInteger("DwPaging.PageCount");
	var currentPage = GetInteger("DwPaging.CurrentPage");
	string prevpageLink = GetString("DwPaging.PreviousPageLink");
	string NextPageLink = GetString("DwPaging.NextPageLink");

	if (GetBoolean("DwPaging.Pageable") == true)
	{
		<div class="p-3 mt-3">
			<ul class="pagination m-0">
				@if (pageCount > 5 && currentPage != 1)
				{
					<li class="page-item"><a class="page-link" href="@prevpageLink">@Translate("Previous")</a></li>
				}
				else
				{
					<li class="page-item disabled"><span class="page-link">@Translate("Previous")</span></li>
				}
				@foreach (var pages in pageLoopItem)
				{
					var css = pages.GetBoolean("PageGroup.ActivePage") ? "page-item active" : "page-item";

					<li class="@css"><a class="page-link" href="@pages.GetString("PageGroup.PageLink")">@pages.GetInteger("PageGroup.PageNumber")</a></li>
				}
				@if (pageCount > 5 && currentPage != pageCount)
				{
					<li class="page-item"><a class="page-link" href="@NextPageLink">@Translate("Next")</a></li>
				}
				else
				{
					<li class="page-item disabled"><span class="page-link">@Translate("Next")</span></li>
				}
			</ul>
		</div>
	}
}
else
{
	if (!string.IsNullOrEmpty(searchTerm))
	{
		<div class="alert alert-info text-center" role="alert">
			@Translate("Your search ") <strong> "@searchTerm" </strong>@Translate("did not return any customers that match your search")
		</div>
	}
	else
	{
		<div class="alert alert-info text-center" role="alert">
			@Translate("You have no customer you can sign in as")
		</div>
	}
}

<script>
	function goToPage(page) {
		let url = new URL(document.location.href);
		url.searchParams.set('PageNum', page);
		document.location.href = url;
	}
</script>

@if (nowImpersonating)
{
	<div class="position-fixed bottom-0 end-0 p-3">
		<div id="signInToast" class="toast align-items-center w-auto show theme light" role="alert" aria-live="assertive" aria-atomic="true">
			<div class="d-flex">
				<div class="toast-body p-3 fs-6">
					<span>
						@Translate("You are now signed in as a customer")
					</span>
					@if (Pageview.User != null)
					{
						<span class="fw-bold">@Pageview.User.Name</span>
					}
				</div>
				<button type="button" class="btn h-100 icon-3 m-auto" data-bs-dismiss="toast" aria-label="@Translate("Close toast")">@ReadFile(iconPath + "x.svg")</button>
			</div>
		</div>
	</div>

	<script>
		document.addEventListener("DOMContentLoaded", function (event) {
			var signInToast = document.querySelector('#signInToast')
			var showSignInToast = new bootstrap.Toast(signInToast)
			showSignInToast.show()
		});
	</script>
}
