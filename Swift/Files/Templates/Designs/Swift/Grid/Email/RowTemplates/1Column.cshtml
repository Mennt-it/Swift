@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.GridRowViewModel>

@{ 
	var settings = Dynamicweb.Frontend.ContentViewModelFactory.CreatePageInfoViewModel(Pageview.Page.Parent).Item;
	var rowType = Model.Item.SystemName.ToLower();
	var rowId = Model.Id;

	@* The email settings page *@
	var emailThemeId = settings.GetRawValueString("EmailTheme", "0");
	var emailThemeParagraph = emailThemeId != null ? Dynamicweb.Services.Paragraphs.GetParagraph(Convert.ToInt32(emailThemeId)) : null;
	var emailTheme = emailThemeParagraph != null && Dynamicweb.Frontend.ContentViewModelFactory.CreateParagraphInfoViewModel(emailThemeParagraph).Item.GetString("CssClassName") != string.Empty ? Dynamicweb.Frontend.ContentViewModelFactory.CreateParagraphInfoViewModel(emailThemeParagraph)?.Item : null;
	
	var emailContentThemeId = settings.GetRawValueString("EmailContentTheme", "0");
	var emailContentThemeParagraph = emailContentThemeId != null ? Dynamicweb.Services.Paragraphs.GetParagraph(Convert.ToInt32(emailContentThemeId)) : null;
	var emailContentTheme = emailContentThemeParagraph != null && Dynamicweb.Frontend.ContentViewModelFactory.CreateParagraphInfoViewModel(emailContentThemeParagraph).Item.GetString("CssClassName") != string.Empty ? Dynamicweb.Frontend.ContentViewModelFactory.CreateParagraphInfoViewModel(emailContentThemeParagraph)?.Item : null;
	
	@* Row theme colors*@
	var rowThemeId = Model.Item.GetRawValueString("RowBackground", string.Empty);
	var rowThemeParagraph = rowThemeId != null ? Dynamicweb.Services.Paragraphs.GetParagraph(Convert.ToInt32(rowThemeId)) : null;
	var rowTheme = rowThemeParagraph != null && Dynamicweb.Frontend.ContentViewModelFactory.CreateParagraphInfoViewModel(rowThemeParagraph).Item.GetString("CssClassName") != string.Empty ? Dynamicweb.Frontend.ContentViewModelFactory.CreateParagraphInfoViewModel(rowThemeParagraph)?.Item : null;
	string rowBackgroundColor = "background-color:"; 
	rowBackgroundColor += rowTheme != null ? rowTheme.GetString("BackgroundColor") + ";" : emailTheme != null ? emailTheme.GetString("BackgroundColor") + ";" : "none;";
	string rowColor = "color:";
	rowColor += rowTheme != null ? rowTheme.GetString("ForegroundColor") + ";" : emailTheme != null ? emailTheme.GetString("ForegroundColor") + ";" : "inherit;";

	@* Column theme colors *@
	var columnThemeId = Model.Item.GetRawValueString("ColumnBackground", string.Empty);
	var columnThemeParagraph = columnThemeId != null ? Dynamicweb.Services.Paragraphs.GetParagraph(Convert.ToInt32(columnThemeId)) : null;
	var columnTheme = columnThemeParagraph != null && Dynamicweb.Frontend.ContentViewModelFactory.CreateParagraphInfoViewModel(columnThemeParagraph).Item.GetString("CssClassName") != string.Empty ? Dynamicweb.Frontend.ContentViewModelFactory.CreateParagraphInfoViewModel(columnThemeParagraph)?.Item : null;
	string columnBackgroundColor = "background-color:";
	columnBackgroundColor += columnTheme != null ? columnTheme.GetString("BackgroundColor") + ";" : emailContentTheme != null ? emailContentTheme.GetString("BackgroundColor") + ";" : "none;";
	string columnColor = "color:";
	columnColor += columnTheme != null ? columnTheme.GetString("ForegroundColor") + ";" : emailContentTheme != null ? emailContentTheme.GetString("ForegroundColor") + ";" : "inherit;";
}

<div class="@rowType" id="@rowId">
	<table class="row" align="center" border="0" cellpadding="0" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%;@(rowBackgroundColor)@(rowColor)" width="100%">
		<tbody>
			<tr>
				<td>
					<table class="row-content" align="center" border="0" cellpadding="0" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt;color:inherit;width:640px;@(columnBackgroundColor)@(columnColor)" width="640">
						<tbody>
							<tr>
								<td class="column" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt; font-weight: 400; text-align: left; vertical-align: top; border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px;" width="100%">
									@Model.Column(1).Output()
								</td>
							</tr>
						</tbody>
					</table>
				</td>
			</tr>
		</tbody>
	</table>
</div>
