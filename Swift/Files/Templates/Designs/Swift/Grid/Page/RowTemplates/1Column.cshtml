@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.GridRowViewModel>

@{ 
	string sectionClass = "py-2";
	string containerClass = "container-xl";

	string spaceBetweenRows = Model.Item.GetRawValueString("SpaceBetweenRows", "spacing");
	if (spaceBetweenRows != "spacing") {
		sectionClass = "";
	}
	if (spaceBetweenRows == "spacing-large")
	{
		sectionClass = "py-4 py-lg-6";
	}
	if (spaceBetweenRows == "spacing-top")
	{
		sectionClass = "pt-4 pt-lg-6";
	}
	if (spaceBetweenRows == "spacing-bottom")
	{
		sectionClass = "pb-4 pb-6";
	}

	string width = Model.Item.GetRawValueString("Width");
	if (width == "stretch") {
		containerClass = "container-fluid";
	}
	if (width == "none") {
		containerClass = "";
	}
	if (width == "compressed") {
		containerClass = " container-compressed";
	}

	string theme = !string.IsNullOrWhiteSpace(Model.Item.GetRawValueString("Theme")) ? " theme " + Model.Item.GetRawValueString("Theme").Replace(" ", "").Trim().ToLower() : "";

	string animationOnScrollCol1 = Model.Item.GetRawValueString("AnimationOnScroll", "no-animation");
	animationOnScrollCol1 = animationOnScrollCol1 != "no-animation" ? "data-aos=" + "'" + animationOnScrollCol1 + "'" : "";

	string hideOverflow = " overflow-hidden";
	hideOverflow = animationOnScrollCol1 != "" ? hideOverflow : "";
}

<div class="@(sectionClass)@(theme)">
	<div class="@containerClass@(hideOverflow)">
		<div class="grid">
			<div class="g-col-12" data-col-size="12" @animationOnScrollCol1>
				@Model.Column(1).Output()
			</div>
		</div>
	</div>
</div>
